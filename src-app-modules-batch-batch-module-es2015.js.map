{"version":3,"sources":["./src/app/modules/batch/batch-list/batch-list.component.ts","./src/app/modules/batch/batch-list/batch-list.component.html","./src/app/modules/batch/batch-state/batch-state.component.ts","./src/app/modules/batch/batch-state/batch-state.component.html","./src/app/modules/batch/batch-add/batch-add.component.ts","./src/app/modules/batch/batch-add/batch-add.component.html","./src/app/modules/batch/batch.module.ts","./src/app/modules/batch/batch-status/batch-status.component.ts","./src/app/modules/batch/batch-status/batch-status.component.html","./src/app/modules/batch/batch-root/batch-root.component.ts","./src/app/modules/batch/batch-root/batch-root.component.html"],"names":[],"mappings":"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","file":"src-app-modules-batch-batch-module-es2015.js","sourcesContent":["import { HttpResponse } from '@angular/common/http';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ConfirmationDialogMethod, QuestionData } from '@src/app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { BatchExecState } from '@src/app/enums/BatchExecState';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { BatchService } from '@src/app/services/batch/batch.service';\r\nimport { BatchData } from '@src/app/services/batch/BatchData';\r\nimport { BatchesResult } from '@src/app/services/batch/BatchesResult';\r\nimport { BatchExexStatusService } from '@src/app/services/batch/BatchExecStatusService';\r\nimport { SettingsService } from '@src/app/services/settings/settings.service';\r\nimport * as fileSaver from 'file-saver';\r\n\r\n\r\n@Component({\r\n    selector: 'batch-list',\r\n    templateUrl: './batch-list.component.html',\r\n    styleUrls: ['./batch-list.component.scss']\r\n})\r\nexport class BatchListComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    batchesResult: BatchesResult;\r\n    isFiltered: boolean;\r\n    dataSource: MatTableDataSource<BatchData.BatchExecInfo> = new MatTableDataSource([]);\r\n    columnsToDisplay: string[] = ['id', 'createdOn', 'Owner', 'isBatchConsistent', 'sourceCode', 'execState', 'bts'];\r\n\r\n    constructor(\r\n        private batchService: BatchService,\r\n        readonly authenticationService: AuthenticationService,\r\n        readonly dialog: MatDialog,\r\n        readonly translate: TranslateService,\r\n        private batchExexStatusService: BatchExexStatusService,\r\n        private settingsService: SettingsService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.isFiltered = this.settingsService.events.value.settings.batchFilter;\r\n        this.updateTable('0', this.isFiltered);\r\n        this.subscribeSubscription(this.batchExexStatusService.getStatuses.subscribe({\r\n            next: statuses => {\r\n                this.batchExexStatusService.updateBatchesResultByStatuses(this.batchesResult, statuses);\r\n            }\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeSubscriptions();\r\n    }\r\n\r\n    updateTable(pageNumbder: string, isFiltered: boolean): void {\r\n        this.isLoading = true;\r\n        this.batchService\r\n            .batches(pageNumbder, isFiltered)\r\n            .subscribe({\r\n                next: batchesResult => {\r\n                    this.batchesResult = batchesResult;\r\n                    this.columnsToDisplay = this.authenticationService.isRoleOperator() ?\r\n                        ['id', 'createdOn', 'Owner', 'sourceCode', 'execState', 'bts'] :\r\n                        ['id', 'createdOn', 'Owner', 'isBatchConsistent', 'sourceCode', 'execState', 'bts'];\r\n                    this.dataSource = new MatTableDataSource(batchesResult.batches.content || []);\r\n                    this.isLoading = false;\r\n                }\r\n            });\r\n    }\r\n\r\n    toggleFilter(): void {\r\n        this.isFiltered = !this.isFiltered;\r\n        this.settingsService.toggleBatchFilter(this.isFiltered);\r\n        this.updateTable('0', this.isFiltered);\r\n    }\r\n\r\n    isDeletedRow(b: BatchData.BatchExecInfo): boolean {\r\n        return false;\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (event: Event, batchData: BatchData.BatchExecInfo): QuestionData => {\r\n            event.stopPropagation();\r\n            return {\r\n                text: marker('batch.delete-dialog.Do you want to delete Batch _batchId_'),\r\n                params: { batchId: batchData.batch.id }\r\n            };\r\n        },\r\n        rejectTitle: `${marker('batch.delete-dialog.Cancel')}`,\r\n        resolveTitle: `${marker('batch.delete-dialog.Delete')}`,\r\n    })\r\n    delete(event: Event, batchData: BatchData.BatchExecInfo): void {\r\n        this.batchService\r\n            .processResourceDeleteCommit(batchData.batch.id.toString())\r\n            .subscribe({\r\n                next: () => {\r\n                    this.updateTable((this.batchesResult.batches.number).toString(), this.isFiltered);\r\n                }\r\n            });\r\n    }\r\n\r\n    downloadFile(event: Event, batchId: string): void {\r\n        event.stopPropagation();\r\n        this.batchService.downloadFile(batchId)\r\n            .subscribe((res: HttpResponse<Blob>) => {\r\n                const tryname: string = res.headers.get('Content-Disposition')?.split?.('\\'\\'')?.[1];\r\n                fileSaver.saveAs(res.body, tryname ? tryname : 'result.zip');\r\n            });\r\n    }\r\n\r\n    downloadSelectedRows(): void {\r\n        this.batchService.batchDownloader.download();\r\n    }\r\n\r\n    discardSelectedRows(): void {\r\n        this.batchService.batchDownloader.clear();\r\n    }\r\n\r\n    isSelectedRow(batchData: BatchData.BatchExecInfo): boolean {\r\n        return this.batchService.batchDownloader.isSelected(batchData);\r\n    }\r\n\r\n    selectRow(event: Event, batchData: BatchData.BatchExecInfo): void {\r\n        event.stopPropagation();\r\n        if (batchData.ok &&\r\n            batchData.execState === BatchExecState.Finished) {\r\n            this.batchService.batchDownloader.toggle(batchData);\r\n        }\r\n    }\r\n\r\n    countOfSelectedRows(): number {\r\n        return this.batchService.batchDownloader.size;\r\n    }\r\n\r\n    nextPage(): void {\r\n        this.updateTable((this.batchesResult.batches.number + 1).toString(), this.isFiltered);\r\n    }\r\n\r\n    prevPage(): void {\r\n        this.updateTable((this.batchesResult.batches.number - 1).toString(), this.isFiltered);\r\n    }\r\n}\r\n","<ct-section *ngIf=\"batchesResult\">\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-flex justify-content=\"space-between\" align-items=\"center\" gap=\"unit(1)\">\r\n                <ct-flex-item>\r\n                    <ct-heading>{{ 'batch.Batch' | translate }} </ct-heading>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <ct-flex justify-content=\"flex-end\" align-items=\"center\" gap=\"unit(1)\">\r\n                        <ct-flex-item>\r\n                            <ng-container *ngTemplateOutlet=\"uploadFilesButton\"></ng-container>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-stroked-button (click)=\"toggleFilter()\" [disabled]=\"false\">\r\n                                <span *ngIf=\"isFiltered\" style=\"vertical-align: baseline;\">✓&nbsp;&nbsp;</span>\r\n                                <span *ngIf=\"!isFiltered\" style=\"vertical-align: baseline;\">✗&nbsp;&nbsp;</span>\r\n                                <span>{{ 'batch.onlyMyBatches' | translate }}</span>\r\n                            </button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-table [isWaiting]=\"isLoading\">\r\n                <table mat-table [dataSource]=\"dataSource\">\r\n                    <ng-container matColumnDef=\"id\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{ 'batch.Id' | translate }}</th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.batch.id}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"createdOn\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{ 'batch.Created On' | translate }}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            {{el.batch.createdOn | date:'MMM d, yyyy, HH:mm:ss'}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"Owner\">\r\n                        <th mat-header-cell *matHeaderCellDef>{{ 'batch.Owner\\'s username' | translate }}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.username}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"isBatchConsistent\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            {{ 'batch.Is Batch Consistent?' | translate }} </th>\r\n                        <td mat-cell *matCellDef=\"let el\"> <span *ngIf=\"el.ok\">{{ 'batch.isBatchConsistent.true' |\r\n                                translate }}</span><span *ngIf=\"!el.ok\">{{ 'batch.isBatchConsistent.false' | translate\r\n                                }}</span></td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"sourceCode\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            <div class=\"no-wrap\">{{ 'batch.Source Code' | translate }}</div>\r\n                            <div class=\"no-wrap\">{{ 'batch.File name' | translate }}</div>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <div class=\"no-wrap\">{{el.sourceCodeUid}}</div>\r\n                            <div class=\"no-wrap\">{{el.uploadedFileName}}</div>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"execState\">\r\n                        <th mat-header-cell *matHeaderCellDef> {{ 'batch.Exec State' | translate }}\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <span *ngIf=\"el.execState === -1\">\r\n                                {{ 'batch.isBatchConsistent.Error' | translate }}\r\n                            </span>\r\n                            <span *ngIf=\"el.execState === 2\">\r\n                                {{ 'batch.isBatchConsistent.Preparing' | translate }}\r\n                            </span>\r\n                            <span *ngIf=\"el.execState === 3\">\r\n                                {{ 'batch.isBatchConsistent.Processing' | translate }}\r\n                            </span>\r\n                            <span *ngIf=\"el.execState === 4\">\r\n                                {{ 'batch.isBatchConsistent.Finished' | translate }}\r\n                            </span>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"bts\">\r\n                        <th mat-header-cell *matHeaderCellDef> </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <ct-flex justify-content=\"flex-end\" gap=\"9px\">\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button size=\"forTableRow\" [disabled]=\"el.execContextDeleted\"\r\n                                        [routerLink]=\"['/batch',el.batch.id,'source-code',el.batch.sourceCodeId,'exec-context',el.batch.execContextId, 'state']\"\r\n                                        color=\"primary\">\r\n                                        {{ 'batch.Task states' | translate }}</button>\r\n                                </ct-flex-item>\r\n\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button size=\"forTableRow\"\r\n                                        [disabled]=\"el.execState !== 4 || el.execContextDeleted\"\r\n                                        [routerLink]=\"['/batch',el.batch.id,'status']\" color=\"primary\">\r\n                                        {{ 'batch.Status' | translate }}</button>\r\n                                </ct-flex-item>\r\n\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button size=\"forTableRow\" color=\"primary\"\r\n                                        [disabled]=\"el.execState !== 4 || el.execContextDeleted\"\r\n                                        (click)=\"downloadFile($event, el.batch.id)\">\r\n                                        {{ 'batch.Download Result' | translate }}</button>\r\n                                </ct-flex-item>\r\n\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button color=\"warn\" size=\"forTableRow\" (click)=\"delete($event, el)\"\r\n                                        title=\"Delete\">\r\n                                        <mat-icon>delete</mat-icon>\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                            </ct-flex>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"> </tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"\r\n                        [class.deleted-table-row]=\"isDeletedRow(row)\" [class.selected-color]=\"isSelectedRow(row)\"\r\n                        (click)=\"selectRow($event,row)\"></tr>\r\n                </table>\r\n            </ct-table>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"space-between\" align-items=\"center\">\r\n                <ct-flex-item>\r\n                    <ct-table-pagination (prev)=\"prevPage()\" (next)=\"nextPage()\"\r\n                        [pageableDefault]=\"batchesResult.batches\"></ct-table-pagination>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item *ngIf=\"countOfSelectedRows()\">\r\n                    <ct-flex justify-content=\"center\" align-items=\"center\" gap=\"unit(1)\">\r\n                        <ct-flex-item>\r\n                            <div class=\"selected-count\">\r\n                                {{ 'batch.Batch' | translate}} × {{countOfSelectedRows()}}\r\n                            </div>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button color=\"primary\" (click)=\"downloadSelectedRows()\">{{ 'batch.Download'\r\n                                | translate}}</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button color=\"primary\" (click)=\"discardSelectedRows()\">{{ 'batch.Discard'\r\n                                | translate}}</button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item>\r\n                    <ng-container *ngTemplateOutlet=\"uploadFilesButton\"></ng-container>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>\r\n\r\n\r\n\r\n<ng-template #uploadFilesButton>\r\n    <button mat-flat-button color=\"primary\" [disabled]=\"false\" routerLink=\"/batch/add\">\r\n        {{ 'batch.Upload files and start processing' | translate }}</button>\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<ng-template #uploadFilesButton>\r\n    <button mat-flat-button color=\"primary\" [disabled]=\"false\" routerLink=\"/batch/add\">\r\n        {{ 'batch.Upload files and start processing' | translate }}</button>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'batch-state',\r\n  templateUrl: './batch-state.component.html',\r\n  styleUrls: ['./batch-state.component.sass']\r\n})\r\nexport class BatchStateComponent {\r\n  sourceCodeId: string;\r\n  execContextId: string;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    this.sourceCodeId = this.route.snapshot.paramMap.get('sourceCodeId');\r\n    this.execContextId = this.route.snapshot.paramMap.get('execContextId');\r\n  }\r\n}\r\n","<ct-section>\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>State of Tasks</ct-heading>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-state-of-tasks [sourceCodeId]=\"sourceCodeId\" [execContextId]=\"execContextId\"></ct-state-of-tasks>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n</ct-section>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadStates } from '@app/enums/LoadStates';\r\nimport { BatchService } from '@app/services/batch/batch.service';\r\nimport { SourceCode } from '@app/services/source-codes/SourceCode';\r\nimport { SourceCodeUid } from '@app/services/source-codes/SourceCodeUid';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { OperationStatus } from '@src/app/enums/OperationStatus';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { SettingsService, SettingsServiceEventChange } from '@src/app/services/settings/settings.service';\r\nimport { SourceCodeUidsForCompany } from '@src/app/services/source-codes/SourceCodeUidsForCompany';\r\nimport { CtFileUploadComponent } from '../../ct/ct-file-upload/ct-file-upload.component';\r\n\r\n@Component({\r\n    selector: 'batch-add',\r\n    templateUrl: './batch-add.component.html',\r\n    styleUrls: ['./batch-add.component.scss']\r\n})\r\n\r\nexport class BatchAddComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    currentStates: Set<LoadStates> = new Set();\r\n    response: SourceCodeUidsForCompany;\r\n    uploadResponse: OperationStatusRest;\r\n\r\n    sourceCode: SourceCode;\r\n    file: File;\r\n    listOfSourceCodes: SourceCodeUid[] = [];\r\n    @ViewChild('fileUpload') fileUpload: CtFileUploadComponent;\r\n\r\n    constructor(\r\n        private batchService: BatchService,\r\n        private router: Router,\r\n        private route: ActivatedRoute,\r\n        private translate: TranslateService,\r\n        private settingsService: SettingsService,\r\n        readonly authenticationService: AuthenticationService,\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscribeSubscription(this.settingsService.events.subscribe(event => {\r\n            if (event instanceof SettingsServiceEventChange) {\r\n                this.translate.use(event.settings.language);\r\n            }\r\n        }));\r\n\r\n        this.updateResponse();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeSubscriptions();\r\n    }\r\n\r\n    updateResponse(): void {\r\n        this.batchService\r\n            .batchAdd()\r\n            .subscribe((response) => {\r\n                this.response = response;\r\n                this.listOfSourceCodes = this.response.items;\r\n            });\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(['../'], { relativeTo: this.route });\r\n    }\r\n\r\n    upload(): void {\r\n        this.batchService\r\n            .uploadFile(this.sourceCode.id.toString(), this.fileUpload.fileInput.nativeElement.files[0])\r\n            .subscribe((response) => {\r\n                if (response.status === OperationStatus.OK) {\r\n                    this.back();\r\n                }\r\n                this.uploadResponse = response;\r\n            });\r\n    }\r\n\r\n    fileUploadChanged(): void {\r\n        this.file = this.fileUpload.fileInput.nativeElement.files[0] || false;\r\n    }\r\n}","<ct-cols *ngIf=\"response\">\r\n    <ct-col size=\"6\">\r\n        <ct-section>\r\n            <ct-section-header>\r\n                <ct-section-header-row>\r\n                    <ct-heading>{{ 'batch-add.Upload file for processing' | translate }}</ct-heading>\r\n                </ct-section-header-row>\r\n            </ct-section-header>\r\n            <ct-section-body>\r\n                <ct-section-body-row>\r\n                    <mat-form-field appearance=\"outline\">\r\n                        <mat-label> {{ 'batch-add.List of Source Codes' | translate }}</mat-label>\r\n                        <mat-select [(ngModel)]=\"sourceCode\">\r\n                            <div *ngFor=\"let sourceCode of listOfSourceCodes\">\r\n                                <mat-option [value]=\"sourceCode\">{{sourceCode.uid}}</mat-option>\r\n                            </div>\r\n                        </mat-select>\r\n                        <mat-hint>{{ 'batch-add.This is a required field.' | translate }}</mat-hint>\r\n                    </mat-form-field>\r\n\r\n                    <br>\r\n                    <br>\r\n\r\n                    <div>\r\n                        <ct-file-upload #fileUpload acceptTypes=\".zip, .xml\"\r\n                            buttonTitle=\"{{'batch-add.Select File' | translate}}\" (changed)=\"fileUploadChanged()\">\r\n                        </ct-file-upload>\r\n                        <ct-hint>{{ 'batch-add.This is a required field.' | translate }}</ct-hint>\r\n                        <ct-hint>{{ 'batch-add.Only .xml and .zip files are supported' | translate }}</ct-hint>\r\n                    </div>\r\n                </ct-section-body-row>\r\n            </ct-section-body>\r\n            <ct-section-footer>\r\n                <ct-section-footer-row>\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                        <ct-flex-item>\r\n                            <button mat-stroked-button=\"mat-stroked-button\" (click)=\"back()\">\r\n                                {{ 'batch-add.Cancel' | translate }}</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" color=\"primary\" [disabled]=\"!sourceCode || !file\"\r\n                                (click)=\"upload()\"> {{ 'batch-add.Upload-File-button' | translate }}</button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-footer-row>\r\n            </ct-section-footer>\r\n        </ct-section>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status [content]=\"uploadResponse\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialAppModule } from '../../ngmaterial.module';\r\nimport { BatchStatusComponent } from './batch-status/batch-status.component';\r\nimport { BatchAddComponent } from './batch-add/batch-add.component';\r\nimport { CtModule } from '../ct/ct.module';\r\nimport { BatchRootComponent } from './batch-root/batch-root.component';\r\nimport { CopyRightModule } from '../copy-right/copy-right.module';\r\nimport { BatchStateComponent } from './batch-state/batch-state.component';\r\nimport { BatchListComponent } from './batch-list/batch-list.component';\r\nimport { RoleRouteGuard } from '@src/app/guards/role-route.guard';\r\nimport { Role } from '@src/app/services/authentication';\r\n\r\nconst commonRequiredRoles: Role[] = [Role.Admin, Role.Data, Role.Manager, Role.Operator];\r\n\r\nexport const BatchRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: BatchRootComponent,\r\n        canActivate: [RoleRouteGuard],\r\n        data: { requiredRoles: commonRequiredRoles },\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: BatchListComponent,\r\n                canActivate: [RoleRouteGuard],\r\n                data: { requiredRoles: commonRequiredRoles },\r\n            },\r\n            {\r\n                path: ':batchId/status',\r\n                component: BatchStatusComponent,\r\n                canActivate: [RoleRouteGuard],\r\n                data: {\r\n                    backConfig: ['../', '../'],\r\n                    requiredRoles: commonRequiredRoles\r\n                }\r\n            },\r\n            {\r\n                path: 'add',\r\n                component: BatchAddComponent,\r\n                canActivate: [RoleRouteGuard],\r\n                data: {\r\n                    backConfig: ['../'],\r\n                    requiredRoles: commonRequiredRoles\r\n                }\r\n            },\r\n            {\r\n                path: ':batchId/source-code/:sourceCodeId/exec-context/:execContextId/state',\r\n                component: BatchStateComponent,\r\n                canActivate: [RoleRouteGuard],\r\n                data: {\r\n                    backConfig: ['../', '../', '../', '../', '../', '../'],\r\n                    requiredRoles: commonRequiredRoles\r\n                }\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(BatchRoutes)],\r\n    exports: [RouterModule],\r\n    declarations: []\r\n})\r\nexport class BatchRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        BatchRoutingModule,\r\n        CtModule,\r\n        MaterialAppModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CopyRightModule,\r\n        TranslateModule.forChild({})\r\n    ],\r\n    declarations: [\r\n        BatchRootComponent,\r\n        BatchStatusComponent,\r\n        BatchAddComponent,\r\n        BatchStateComponent,\r\n        BatchListComponent\r\n    ]\r\n})\r\nexport class BatchModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadStates } from '@app/enums/LoadStates';\r\nimport { BatchService } from '@app/services/batch/batch.service';\r\nimport { Status } from '@src/app/services/batch/Status';\r\n\r\n@Component({\r\n    selector: 'batch-status',\r\n    templateUrl: './batch-status.component.html',\r\n    styleUrls: ['./batch-status.component.scss']\r\n})\r\n\r\nexport class BatchStatusComponent implements OnInit {\r\n    readonly states = LoadStates;\r\n    currentState: LoadStates = LoadStates.firstLoading;\r\n\r\n    response: Status;\r\n    batchId: string;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private batchService: BatchService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.batchId = this.route.snapshot.paramMap.get('batchId');\r\n        this.updateResponse();\r\n    }\r\n    updateResponse() {\r\n        this.batchService\r\n            .getProcessingResourceStatus(this.batchId)\r\n            .subscribe(response => {\r\n                this.response = response;\r\n                this.currentState = this.states.show;\r\n            });\r\n    }\r\n}","\r\n<ct-section>\r\n  <ct-section-header>\r\n    <ct-section-header-row>\r\n      <ct-heading>  \r\n        <div>{{ 'batch-status.Status of execution of batch _batchId_' | translate:{batchId: batchId} }} </div>\r\n      </ct-heading>\r\n    </ct-section-header-row>\r\n  </ct-section-header>\r\n  <ct-section-body>\r\n    <ct-section-body-row *ngIf=\"[states.wait,states.show].includes(currentState)\"> \r\n      <ct-pre>{{response.console}}</ct-pre>\r\n    </ct-section-body-row>\r\n  </ct-section-body>\r\n</ct-section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'batch-root',\r\n  templateUrl: './batch-root.component.html',\r\n  styleUrls: ['./batch-root.component.sass']\r\n})\r\nexport class BatchRootComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ct-content>\r\n    <router-outlet></router-outlet>\r\n    <ct-back-button></ct-back-button>\r\n    <copy-right></copy-right>\r\n</ct-content>"],"sourceRoot":"webpack:///"}