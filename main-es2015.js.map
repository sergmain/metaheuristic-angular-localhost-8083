{"version":3,"sources":["./src/app/modules/ct/ct-env-msg-outer/ct-env-msg-outer.component.ts","./src/app/modules/ct/ct-env-msg-outer/ct-env-msg-outer.component.html","./src/app/services/batch/BatchSelector.ts","./src/app/modules/ct/ct-rest-status/ct-rest-status.component.html","./src/app/modules/ct/ct-rest-status/ct-rest-status.component.ts","./src/app/modules/ct/ct-section-header/ct-section-header.component.ts","./src/app/modules/ct/ct-section-header/ct-section-header.component.html","./src/app/modules/ct/ct-section-header-row/ct-section-header-row.component.ts","./src/app/modules/ct/ct-section-header-row/ct-section-header-row.component.html","./src/app/modules/ct/ct-section/ct-section.component.ts","./src/app/modules/ct/ct-section/ct-section.component.html","./src/app/modules/ct/ct-state-of-tasks/ct-state-of-tasks.component.ts","./src/app/modules/ct/ct-state-of-tasks/ct-state-of-tasks.component.html","./src/app/modules/angular2-notifications/components/notification/notification.component.ts","./src/app/modules/angular2-notifications/components/notification/notification.component.html","./src/app/modules/ct/ct-back-button/ct-back-button.component.ts","./src/app/modules/ct/ct-back-button/ct-back-button.component.html","./src/app/modules/angular2-notifications/enums/notification-animation-type.enum.ts","./src/app/modules/ct/ct-table/ct-table.component.ts","./src/app/modules/ct/ct-table/ct-table.component.html","./src/app/modules/ct/ct.module.ts","./src/environments/environment.ts","./src/app/components/pilot/pilot.component.ts","./src/app/components/pilot/pilot.component.html","./src/app/components/lorem-index/lorem-index.component.ts","./src/app/components/lorem-index/lorem-index.component.html","./src/app/modules/angular2-notifications/enums/notification-type.enum.ts","./src/app/modules/ct/ct-flex/ct-flex.component.ts","./src/app/modules/ct/ct-flex/ct-flex.component.html","./src/app/services/batch/BatchDownloader.ts","./src/app/modules/ct/ct-section-footer/ct-section-footer.component.ts","./src/app/modules/ct/ct-section-footer/ct-section-footer.component.html","./src/app/models/UIStateComponent.ts","./src/app/components/app-view/app-view.component.ts","./src/app/components/app-view/app-view.component.html","./src/app/services/batch/batch.service.ts","./src/app/modules/ct/ct-cols/ct-cols.component.ts","./src/app/modules/ct/ct-cols/ct-cols.component.html","./src/app/modules/ct/ct-pre/ct-pre.component.ts","./src/app/modules/ct/ct-pre/ct-pre.component.html","./src/app/modules/ct/ct-section-body-row/ct-section-body-row.component.ts","./src/app/modules/ct/ct-section-body-row/ct-section-body-row.component.html","./src/app/services/batch/BatchExecStatusService.ts","./src/app/services/settings/settings.service.ts","./src/app/services/authentication/Role.ts","./src/app/modules/ct/ct-col/ct-col.component.ts","./src/app/modules/ct/ct-col/ct-col.component.html","./src/app/modules/ct/ct-file-upload/ct-file-upload.component.ts","./src/app/modules/ct/ct-file-upload/ct-file-upload.component.html","./src/app/modules/ct/ct-section-body/ct-section-body.component.ts","./src/app/modules/ct/ct-section-body/ct-section-body.component.html","./src/app/modules/ct/ct-flex-item/ct-flex-item.component.ts","./src/app/modules/ct/ct-flex-item/ct-flex-item.component.html","./src/app/services/authentication/User.ts","./src/app/components/billing/billing.component.ts","./src/app/components/billing/billing.component.html","./src/app/modules/ct/ct-hint/ct-hint.component.ts","./src/app/modules/ct/ct-hint/ct-hint.component.html","./src/app/components/nav-pilot/nav-pilot.component.ts","./src/app/components/nav-pilot/nav-pilot.component.html","./src/app/modules/angular2-notifications/components/simple-notifications/simple-notifications.component.ts","./src/app/modules/angular2-notifications/components/simple-notifications/simple-notifications.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/batch/BatchExexStatusComparer.ts","./src/app/modules/angular2-notifications/consts/default-icons.const.ts","./src/app/modules/ct/ct-section-footer-row/ct-section-footer-row.component.ts","./src/app/modules/ct/ct-section-footer-row/ct-section-footer-row.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/modules/ct/ct-table-pagination/ct-table-pagination.component.ts","./src/app/modules/ct/ct-table-pagination/ct-table-pagination.component.html","./src/app/modules/ct/ct-content/ct-content.component.ts","./src/app/modules/ct/ct-content/ct-content.component.html","./src/app/modules/ct/ct-heading/ct-heading.component.ts","./src/app/modules/ct/ct-heading/ct-heading.component.html","./src/app/services/settings/Settings.ts","./src/app/app.module.ts","./src/app/services/exec-context/exec-context.service.ts","./src/app/components/batch-change-notification/batch-change-notification.component.ts","./src/app/components/batch-change-notification/batch-change-notification.component.html","./src/app/modules/angular2-notifications/consts/default-options.const.ts","./src/app/modules/angular2-notifications/services/notifications.service.ts","./src/app/helpers/generateFormData.ts","./src/app/modules/ct/ct-section-content/ct-section-content.component.ts","./src/app/modules/ct/ct-section-content/ct-section-content.component.html","./src/app/guards/auth/auth.guard.ts","./src/app/jwt.interceptor.ts","./src/app/notifications.interceptor.ts","./src/app/modules/angular2-notifications/simple-notifications.module.ts","./src/app/components/app-dialog-confirmation/app-dialog-confirmation.component.ts","./src/app/components/app-dialog-confirmation/app-dialog-confirmation.component.html","./src/app/app.routing.module.ts","./src/app/modules/ct/ct-section-caption/ct-section-caption.component.ts","./src/app/modules/ct/ct-section-caption/ct-section-caption.component.html","./src/app/modules/ct/ct-wrap-block/ct-wrap-block.component.ts","./src/app/modules/ct/ct-wrap-block/ct-wrap-block.component.html","./src/app/services/authentication/index.ts","./src/app/services/audioNotification/audioNotification.service.ts","./src/app/components/app-index/app-index.component.ts","./src/app/components/app-index/app-index.component.html","./src/app/modules/copy-right/copy-right/copy-right.component.ts","./src/app/modules/copy-right/copy-right/copy-right.component.html","./src/app/services/authentication/authentication.service.ts","./src/app/services/accounts/accounts.service.ts","./src/app/enums/OperationStatus.ts","./src/app/ngmaterial.module.ts","./src/app/modules/copy-right/copy-right.module.ts","./src/app/modules/ct/ct-alert/ct-alert.component.ts","./src/app/modules/ct/ct-alert/ct-alert.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { environment } from '@src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'ct-env-msg-outer',\r\n  templateUrl: './ct-env-msg-outer.component.html',\r\n  styleUrls: ['./ct-env-msg-outer.component.sass']\r\n})\r\nexport class CtEnvMsgOuterComponent implements OnInit {\r\n  @Input() propertyName: string;\r\n  content: SafeHtml;\r\n\r\n  constructor(\r\n    private domSanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.propertyName) {\r\n      this.content = this.domSanitizer.bypassSecurityTrustHtml(environment[this.propertyName]);\r\n    }\r\n  }\r\n}\r\n","<div [innerHtml]=\"content\"></div>","import { BatchData } from './BatchData';\r\n\r\nexport class BatchSelector {\r\n    constructor() { }\r\n\r\n    protected list: number[] = [];\r\n\r\n    protected getId(batchData: BatchData.BatchExecInfo): number {\r\n        return batchData.batch.id;\r\n    }\r\n\r\n    toggle(batchData: BatchData.BatchExecInfo): void {\r\n        if (this.isSelected(batchData)) {\r\n            this.list.splice(this.list.indexOf(this.getId(batchData)), 1);\r\n        } else {\r\n            this.list.push(this.getId(batchData));\r\n        }\r\n        this.list.sort((a, z) => a - z);\r\n    }\r\n\r\n    isSelected(batchData: BatchData.BatchExecInfo): boolean {\r\n        if (this.list.indexOf(this.getId(batchData)) === -1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.list = [];\r\n    }\r\n\r\n    get size(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    getList(): number[] {\r\n        return [...this.list];\r\n    }\r\n}\r\n","<ct-section *ngIf=\"content\">\r\n    <ct-section-body>\r\n        <ct-section-body-row *ngIf=\"content.status\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">STATUS:</div>\r\n            <ct-heading>{{content.status}}</ct-heading>\r\n        </ct-section-body-row>\r\n\r\n        <ct-section-body-row *ngIf=\"content.validationResult\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">STATUS:</div>\r\n            <ct-heading>{{content.validationResult.status}}</ct-heading>\r\n        </ct-section-body-row>\r\n\r\n        <ct-section-body-row *ngIf=\"content.errorMessages?.length\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">ERRORS:</div>\r\n            <ul class=\"code\">\r\n                <li *ngFor=\"let error of content.errorMessages; index as i; \">{{error}}</li>\r\n            </ul>\r\n        </ct-section-body-row>\r\n\r\n        <ct-section-body-row *ngIf=\"content.infoMessages?.length\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">INFO:</div>\r\n            <ul class=\"code\">\r\n                <li *ngFor=\"let info of content.infoMessages; index as i; \">{{info}}</li>\r\n            </ul>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n</ct-section>","import { Component, Input } from '@angular/core';\r\nimport { DefaultResponse } from '@src/app/models/DefaultResponse';\r\n\r\n@Component({\r\n  selector: 'ct-rest-status',\r\n  templateUrl: './ct-rest-status.component.html',\r\n  styleUrls: ['./ct-rest-status.component.scss']\r\n})\r\nexport class CtRestStatusComponent {\r\n  @Input() content: DefaultResponse;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-header',\r\n  templateUrl: './ct-section-header.component.html',\r\n  styleUrls: ['./ct-section-header.component.scss']\r\n})\r\nexport class CtSectionHeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-header-row',\r\n  templateUrl: './ct-section-header-row.component.html',\r\n  styleUrls: ['./ct-section-header-row.component.scss']\r\n})\r\nexport class CtSectionHeaderRowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section',\r\n  templateUrl: './ct-section.component.html',\r\n  styleUrls: ['./ct-section.component.scss']\r\n})\r\nexport class CtSectionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ExecContextService } from '@src/app/services/exec-context/exec-context.service';\r\nimport { ExecContextStateResult } from '@src/app/services/source-codes/ExecContextStateResult';\r\n\r\n@Component({\r\n  selector: 'ct-state-of-tasks',\r\n  templateUrl: './ct-state-of-tasks.component.html',\r\n  styleUrls: ['./ct-state-of-tasks.component.scss']\r\n})\r\nexport class CtStateOfTasksComponent implements OnInit {\r\n  @Input() sourceCodeId: string;\r\n  @Input() execContextId: string;\r\n\r\n  response: ExecContextStateResult;\r\n\r\n  constructor(\r\n    private execContextService: ExecContextService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.sourceCodeId && this.execContextId) {\r\n      this.execContextService\r\n        .execContextsState(this.sourceCodeId, this.execContextId)\r\n        .subscribe(response => {\r\n          this.response = response;\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"response\">\r\n    <table class=\"info-table\">\r\n        <tr>\r\n            <td>UID: </td>\r\n            <td>{{response.sourceCodeUid}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Is valid:</td>\r\n            <td>{{response.sourceCodeValid}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Type: </td>\r\n            <td>{{response.sourceCodeType}}</td>\r\n        </tr>\r\n    </table>\r\n    <br>\r\n    <table class=\"state-table\">\r\n        <thead>\r\n            <tr>\r\n                <td></td>\r\n                <td *ngFor=\"let elem of response.header\">\r\n                    <div>{{elem.process}}</div>\r\n                    <div>{{elem.functionCode}}</div>\r\n                </td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let row of response.lines\">\r\n                <td>{{row.context}}</td>\r\n                <td *ngFor=\"let cell of row.cells\">\r\n                    <div *ngIf=\"!cell.empty\">\r\n                        <div>{{cell.taskId}}</div>\r\n                        <div>{{cell.state}}</div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, Input, NgZone, OnDestroy, OnInit, TemplateRef, ViewEncapsulation, ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { NotificationAnimationType } from '../../enums/notification-animation-type.enum';\r\nimport { Notification } from '../../interfaces/notification.type';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'simple-notification',\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('enterLeave', [\r\n\r\n      // Fade\r\n      state('fade', style({opacity: 1})),\r\n      transition('* => fade', [\r\n        style({opacity: 0}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fadeOut', style({opacity: 0})),\r\n      transition('fade => fadeOut', [\r\n        style({opacity: 1}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from top\r\n      state('fromTop', style({opacity: 1, transform: 'translateY(0)'})),\r\n      transition('* => fromTop', [\r\n        style({opacity: 0, transform: 'translateY(-5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromTopOut', style({opacity: 0, transform: 'translateY(5%)'})),\r\n      transition('fromTop => fromTopOut', [\r\n        style({opacity: 1, transform: 'translateY(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from right\r\n      state('fromRight', style({opacity: 1, transform: 'translateX(0)'})),\r\n      transition('* => fromRight', [\r\n        style({opacity: 0, transform: 'translateX(5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromRightOut', style({opacity: 0, transform: 'translateX(-5%)'})),\r\n      transition('fromRight => fromRightOut', [\r\n        style({opacity: 1, transform: 'translateX(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from bottom\r\n      state('fromBottom', style({opacity: 1, transform: 'translateY(0)'})),\r\n      transition('* => fromBottom', [\r\n        style({opacity: 0, transform: 'translateY(5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromBottomOut', style({opacity: 0, transform: 'translateY(-5%)'})),\r\n      transition('fromBottom => fromBottomOut', [\r\n        style({opacity: 1, transform: 'translateY(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from left\r\n      state('fromLeft', style({opacity: 1, transform: 'translateX(0)'})),\r\n      transition('* => fromLeft', [\r\n        style({opacity: 0, transform: 'translateX(-5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromLeftOut', style({opacity: 0, transform: 'translateX(5%)'})),\r\n      transition('fromLeft => fromLeftOut', [\r\n        style({opacity: 1, transform: 'translateX(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Rotate\r\n      state('scale', style({opacity: 1, transform: 'scale(1)'})),\r\n      transition('* => scale', [\r\n        style({opacity: 0, transform: 'scale(0)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('scaleOut', style({opacity: 0, transform: 'scale(0)'})),\r\n      transition('scale => scaleOut', [\r\n        style({opacity: 1, transform: 'scale(1)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n\r\n      // Scale\r\n      state('rotate', style({opacity: 1, transform: 'rotate(0deg)'})),\r\n      transition('* => rotate', [\r\n        style({opacity: 0, transform: 'rotate(5deg)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('rotateOut', style({opacity: 0, transform: 'rotate(-5deg)'})),\r\n      transition('rotate => rotateOut', [\r\n        style({opacity: 1, transform: 'rotate(0deg)'}),\r\n        animate('400ms ease-in-out')\r\n      ])\r\n    ])\r\n  ],\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NotificationComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() timeOut: number;\r\n  @Input() showProgressBar: boolean;\r\n  @Input() pauseOnHover: boolean;\r\n  @Input() clickToClose: boolean;\r\n  @Input() clickIconToClose: boolean;\r\n  @Input() maxLength: number;\r\n  @Input() theClass: string;\r\n  @Input() rtl: boolean;\r\n  @Input() animate: NotificationAnimationType;\r\n  @Input() position: number;\r\n  @Input() item: Notification;\r\n\r\n\r\n  // Progress bar variables\r\n  title: any;\r\n  content: any;\r\n\r\n  titleIsTemplate = false;\r\n  contentIsTemplate = false;\r\n  htmlIsTemplate = false;\r\n\r\n  progressWidth = 0;\r\n  safeSvg: SafeHtml;\r\n  safeInputHtml: SafeHtml;\r\n\r\n  private stopTime = false;\r\n  private timer: any;\r\n  private framesPerSecond = 40;\r\n  private sleepTime: number;\r\n  private startTime: number;\r\n  private endTime: number;\r\n  private pauseStart: number;\r\n\r\n  private icon: string;\r\n\r\n  constructor(\r\n    private notificationService: NotificationsService,\r\n    private domSanitizer: DomSanitizer,\r\n    private cd: ChangeDetectorRef,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.item.override) {\r\n      this.attachOverrides();\r\n    }\r\n\r\n    if (this.animate) {\r\n      this.item.state = this.animate;\r\n    }\r\n\r\n    if (this.timeOut !== 0) {\r\n      this.startTimeOut();\r\n    }\r\n\r\n    this.contentType(this.item.title, 'title');\r\n    this.contentType(this.item.content, 'content');\r\n    this.contentType(this.item.html, 'html');\r\n\r\n    this.safeSvg = this.domSanitizer.bypassSecurityTrustHtml(this.icon || this.item.icon);\r\n    this.safeInputHtml = this.domSanitizer.bypassSecurityTrustHtml(this.item.html);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearTimeout(this.timer);\r\n    this.cd.detach();\r\n  }\r\n\r\n  startTimeOut(): void {\r\n    this.sleepTime = 1000 / this.framesPerSecond /* ms */;\r\n    this.startTime = new Date().getTime();\r\n    this.endTime = this.startTime + this.timeOut;\r\n    this.zone.runOutsideAngular(() => this.timer = setTimeout(this.instance, this.sleepTime));\r\n  }\r\n\r\n  onEnter() {\r\n    if (this.pauseOnHover) {\r\n      this.stopTime = true;\r\n      this.pauseStart = new Date().getTime();\r\n    }\r\n  }\r\n\r\n  onLeave() {\r\n    if (this.pauseOnHover) {\r\n      this.stopTime = false;\r\n      this.startTime += (new Date().getTime() - this.pauseStart);\r\n      this.endTime += (new Date().getTime() - this.pauseStart);\r\n      this.zone.runOutsideAngular(() => setTimeout(this.instance, this.sleepTime));\r\n    }\r\n  }\r\n\r\n  onClick(event: MouseEvent) {\r\n    this.item.click!.emit(event);\r\n\r\n    if (this.clickToClose) {\r\n      this.remove();\r\n    }\r\n  }\r\n\r\n  onClickIcon(event: MouseEvent) {\r\n    this.item.clickIcon!.emit(event);\r\n\r\n    if (this.clickIconToClose) {\r\n      this.remove();\r\n    }\r\n  }\r\n\r\n  // Attach all the overrides\r\n  attachOverrides() {\r\n    Object.keys(this.item.override).forEach(a => {\r\n      if (this.hasOwnProperty(a)) {\r\n        (this as any)[a] = this.item.override[a];\r\n      }\r\n    });\r\n  }\r\n\r\n  private instance = () => {\r\n    const now = new Date().getTime();\r\n\r\n    if (this.endTime < now) {\r\n      this.remove();\r\n      this.item.timeoutEnd!.emit();\r\n    } else if (!this.stopTime) {\r\n      if (this.showProgressBar) {\r\n        // We add this.sleepTime just to have 100% before close\r\n        this.progressWidth = Math.min((now - this.startTime + this.sleepTime) * 100 / this.timeOut, 100);\r\n      }\r\n\r\n      this.timer = setTimeout(this.instance, this.sleepTime);\r\n    }\r\n    this.zone.run(() => {\r\n      if (!(this.cd as ViewRef).destroyed) {\r\n        this.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  private remove() {\r\n    if (this.animate) {\r\n      this.item.state = this.animate + 'Out';\r\n      setTimeout(() => {\r\n        this.notificationService.set(this.item, false);\r\n      }, 310);\r\n    } else {\r\n      this.notificationService.set(this.item, false);\r\n    }\r\n  }\r\n\r\n  private contentType(item: any, key: string) {\r\n    if (item instanceof TemplateRef) {\r\n      this[key] = item;\r\n    } else {\r\n      this[key] = this.domSanitizer.bypassSecurityTrustHtml(item);\r\n    }\r\n\r\n    this[key + 'IsTemplate'] = item instanceof TemplateRef;\r\n  }\r\n}\r\n","<div class=\"simple-notification\"\r\n     [@enterLeave]=\"item.state\"\r\n     (click)=\"onClick($event)\"\r\n     [class]=\"theClass\"\r\n     [ngClass]=\"{\r\n            'alert': item.type === 'alert',\r\n            'error': item.type === 'error',\r\n            'warn': item.type === 'warn',\r\n            'success': item.type === 'success',\r\n            'info': item.type === 'info',\r\n            'bare': item.type === 'bare',\r\n            'rtl-mode': rtl,\r\n            'has-icon': item.icon !== 'bare'\r\n        }\"\r\n     (mouseenter)=\"onEnter()\"\r\n     (mouseleave)=\"onLeave()\">\r\n\r\n    <div *ngIf=\"!item.html\">\r\n\r\n        <div class=\"sn-title\" *ngIf=\"titleIsTemplate; else regularTitle\">\r\n            <ng-container *ngTemplateOutlet=\"title; context: item.context\"></ng-container>\r\n        </div>\r\n\r\n        <ng-template #regularTitle>\r\n            <div class=\"sn-title\" [innerHTML]=\"title\"></div>\r\n        </ng-template>\r\n\r\n        <div class=\"sn-content\" *ngIf=\"contentIsTemplate else regularContent\">\r\n            <ng-container *ngTemplateOutlet=\"content; context: item.context\"></ng-container>\r\n        </div>\r\n\r\n        <ng-template #regularContent>\r\n            <div class=\"sn-content\" [innerHTML]=\"content\"></div>\r\n        </ng-template>\r\n\r\n        <div class=\"icon\" *ngIf=\"item.icon !== 'bare'\" [innerHTML]=\"safeSvg\"></div>\r\n    </div>\r\n    <div *ngIf=\"item.html\">\r\n        <div class=\"sn-html\" *ngIf=\"htmlIsTemplate; else regularHtml\">\r\n            <ng-container *ngTemplateOutlet=\"item.html; context: item.context\"></ng-container>\r\n        </div>\r\n\r\n        <ng-template #regularHtml>\r\n            <div class=\"sn-content\" [innerHTML]=\"safeInputHtml\"></div>\r\n        </ng-template>\r\n\r\n        <div class=\"icon\" [class.icon-hover]=\"clickIconToClose\" *ngIf=\"item.icon\" [innerHTML]=\"safeSvg\" (click)=\"onClickIcon($event)\"></div>\r\n    </div>\r\n\r\n    <div class=\"sn-progress-loader\" *ngIf=\"showProgressBar\">\r\n        <span [ngStyle]=\"{'width': progressWidth + '%'}\"></span>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface MenuItem {\r\n    label: string;\r\n    url: string;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'ct-back-button',\r\n    templateUrl: './ct-back-button.component.html',\r\n    styleUrls: ['./ct-back-button.component.sass']\r\n})\r\nexport class CtBackButtonComponent implements OnInit, OnDestroy {\r\n\r\n    subs: Subscription[] = [];\r\n\r\n    config: string[];\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.subs.push(this.router.events.subscribe(() => {\r\n            this.setConfig();\r\n        }));\r\n        this.subs.push(this.activatedRoute.firstChild.data.subscribe(() => {\r\n            this.setConfig();\r\n        }));\r\n    }\r\n\r\n    setConfig(): void {\r\n        this.config = this.activatedRoute?.snapshot?.firstChild?.data?.backConfig;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(this.serialize(this.config));\r\n    }\r\n\r\n    serialize(config: string[]): string[] {\r\n        let list: string[] = [].concat(this.router.url.split('/')).concat(config);\r\n        config.forEach(() => list = fn(list));\r\n\r\n        function fn(l: string[]): string[] {\r\n            const i: number = l.indexOf('../') + 1;\r\n            if (i) {\r\n                l[l.indexOf('../') - 1] = null;\r\n                l[l.indexOf('../')] = null;\r\n            }\r\n            return l.filter(v => v ? v : false);\r\n        }\r\n        return list;\r\n    }\r\n}\r\n","<div *ngIf=\"config\">\r\n    <ct-flex justify-content=\"flex-end\">\r\n        <ct-flex-item>\r\n            <button mat-fab color=\"primary\" (click)=\"back()\">{{'ctBackButton.back' | translate}} </button>\r\n        </ct-flex-item>\r\n    </ct-flex>\r\n</div>","export enum NotificationAnimationType {\r\n  Fade = 'fade',\r\n  FromTop = 'fromTop',\r\n  FromRight = 'fromRight',\r\n  FromBottom = 'fromBottom',\r\n  FromLeft = 'fromLeft',\r\n  Scale = 'scale',\r\n  Rotate = 'rotate'\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ChangeDetectorRef,\r\n    Input,\r\n    OnChanges\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'ct-table',\r\n    templateUrl: './ct-table.component.html',\r\n    styleUrls: ['./ct-table.component.scss']\r\n})\r\nexport class CtTableComponent implements OnInit, OnDestroy, OnChanges {\r\n    @Input() isWaiting: boolean;\r\n\r\n    state = {\r\n        wait: false\r\n    };\r\n\r\n    isFnMode: boolean;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.isWaiting === undefined) {\r\n            this.isFnMode = true;\r\n        } else {\r\n            this.isFnMode = false;\r\n            this.state.wait = this.isWaiting;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.changeDetector.detach();\r\n\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (this.isFnMode) {\r\n\r\n        } else {\r\n            this.state.wait = this.isWaiting;\r\n        }\r\n    }\r\n\r\n    wait(): void {\r\n        if (this.isFnMode) {\r\n            this.state.wait = true;\r\n            // tslint:disable-next-line: no-string-literal\r\n            if (!this.changeDetector['destroyed']) {\r\n                this.changeDetector.detectChanges();\r\n            }\r\n        }\r\n    }\r\n    show(): void {\r\n        if (this.isFnMode) {\r\n            this.state.wait = false;\r\n            // tslint:disable-next-line: no-string-literal\r\n            if (!this.changeDetector['destroyed']) {\r\n                this.changeDetector.detectChanges();\r\n            }\r\n        }\r\n    }\r\n}","<div class=\"ct-table\" [class.ct-table--wait]=\"state.wait\">\r\n    <div class=\"ct-table__body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n    <div class=\"ct-table__wait\">\r\n        <mat-spinner></mat-spinner>\r\n    </div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { CtSectionContentComponent } from './ct-section-content/ct-section-content.component';\r\nimport { CtPreComponent } from './ct-pre/ct-pre.component';\r\nimport { CtHeadingComponent } from './ct-heading/ct-heading.component';\r\nimport { CtSectionBodyRowComponent } from './ct-section-body-row/ct-section-body-row.component';\r\nimport { CtSectionFooterRowComponent } from './ct-section-footer-row/ct-section-footer-row.component';\r\nimport { CtSectionFooterComponent } from './ct-section-footer/ct-section-footer.component';\r\nimport { CtColComponent } from './ct-col/ct-col.component';\r\nimport { CtColsComponent } from './ct-cols/ct-cols.component';\r\nimport { CtSectionCaptionComponent } from './ct-section-caption/ct-section-caption.component';\r\nimport { CtTableComponent } from './ct-table/ct-table.component';\r\nimport { CtWrapBlockComponent } from './ct-wrap-block/ct-wrap-block.component';\r\nimport { CtFileUploadComponent } from './ct-file-upload/ct-file-upload.component';\r\nimport { CtSectionHeaderComponent } from './ct-section-header/ct-section-header.component';\r\nimport { CtSectionComponent } from './ct-section/ct-section.component';\r\nimport { CtSectionHeaderRowComponent } from './ct-section-header-row/ct-section-header-row.component';\r\nimport { CtFlexComponent } from './ct-flex/ct-flex.component';\r\nimport { CtFlexItemComponent } from './ct-flex-item/ct-flex-item.component';\r\nimport { CtSectionBodyComponent } from './ct-section-body/ct-section-body.component';\r\nimport { CtHintComponent } from './ct-hint/ct-hint.component';\r\nimport { CtContentComponent } from './ct-content/ct-content.component';\r\nimport { CtRestStatusComponent } from './ct-rest-status/ct-rest-status.component';\r\nimport { CtBackButtonComponent } from './ct-back-button/ct-back-button.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CtEnvMsgOuterComponent } from './ct-env-msg-outer/ct-env-msg-outer.component';\r\nimport { CtTablePaginationComponent } from './ct-table-pagination/ct-table-pagination.component';\r\nimport { CtStateOfTasksComponent } from './ct-state-of-tasks/ct-state-of-tasks.component';\r\nimport { CtAlertComponent } from './ct-alert/ct-alert.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MaterialAppModule,\r\n        TranslateModule.forChild({})\r\n\r\n    ],\r\n    declarations: [\r\n        CtSectionContentComponent,\r\n        CtPreComponent,\r\n        CtHeadingComponent,\r\n        CtSectionBodyRowComponent,\r\n        CtSectionFooterRowComponent,\r\n        CtSectionFooterComponent,\r\n        CtColComponent,\r\n        CtColsComponent,\r\n        CtSectionCaptionComponent,\r\n        CtTableComponent,\r\n        CtWrapBlockComponent,\r\n        CtFileUploadComponent,\r\n        CtSectionHeaderComponent,\r\n        CtSectionComponent,\r\n        CtSectionHeaderRowComponent,\r\n        CtFlexComponent,\r\n        CtFlexItemComponent,\r\n        CtSectionBodyComponent,\r\n        CtHintComponent,\r\n        CtContentComponent,\r\n        CtRestStatusComponent,\r\n        CtBackButtonComponent,\r\n        CtEnvMsgOuterComponent,\r\n        CtTablePaginationComponent,\r\n        CtStateOfTasksComponent,\r\n        CtAlertComponent\r\n    ],\r\n    exports: [\r\n        CtSectionContentComponent,\r\n        CtPreComponent,\r\n        CtHeadingComponent,\r\n        CtSectionBodyRowComponent,\r\n        CtSectionFooterRowComponent,\r\n        CtSectionFooterComponent,\r\n        CtColComponent,\r\n        CtColsComponent,\r\n        CtSectionCaptionComponent,\r\n        CtTableComponent,\r\n        CtWrapBlockComponent,\r\n        CtFileUploadComponent,\r\n        CtSectionHeaderComponent,\r\n        CtSectionComponent,\r\n        CtSectionHeaderRowComponent,\r\n        CtFlexComponent,\r\n        CtFlexItemComponent,\r\n        CtSectionBodyComponent,\r\n        CtHintComponent,\r\n        CtContentComponent,\r\n        CtRestStatusComponent,\r\n        CtBackButtonComponent,\r\n        CtEnvMsgOuterComponent,\r\n        CtTablePaginationComponent,\r\n        CtStateOfTasksComponent,\r\n        CtAlertComponent\r\n    ]\r\n})\r\n\r\nexport class CtModule { }","import { IEnvironment } from './IEnvironment';\r\n\r\nexport const environment: IEnvironment = {\r\n    production: false,\r\n    baseUrl: 'http://localhost:8080/rest/v1/',\r\n    hashLocationStrategy: true,\r\n    userLifeTime: 30 * 60 * 1000, // 30 minutes\r\n    isSslRequired: false,\r\n    batchInterval: 10 * 1000, // pause between requests in milliseconds, 0 means a disable of any requests\r\n    language: 'EN',\r\n    brandingTitle: 'Metaheuristic',\r\n    brandingMsg: '<b>Metaheuristic platform</b><p>Metaheuristic is an application which implements (or intended to) a Turing complete machine.' +\r\n    'The main use of MH is a management of distributed tasks. Right now there are two main areas where MH is being used:</p>' +\r\n    '<ul><li>' +\r\n        '<p>AI model’s hyper-parameter optimization purpose.</p>' +\r\n            'Each optimization is presented as Experiment. An Experiment consists of some Tasks. Tasks are created at Dispatcher and distributed to Processor. ' +\r\n        'For evaluating a performance of models, metrics and other data are collected and evaluated later by Metaheuristic.' +\r\n        '</li>' +\r\n        '<li>' +\r\n        '<p>Batch processing.</p>' +\r\n        'Common usage of batch processing - split data, create tasks for processing each part of data, process Tasks, aggregate results' +\r\n        '</li>' +\r\n    '</ul>'\r\n    ,\r\n    brandingMsgIndex: '<b>Metaheuristic platform</b><p>Metaheuristic is an application which implements (or intended to) a Turing complete machine.' +\r\n        'The main use of MH is a management of distributed tasks. Right now there are two main areas where MH is being used:</p>' +\r\n        '<ul><li>' +\r\n        '<p>AI model’s hyper-parameter optimization purpose.</p>' +\r\n        'Each optimization is presented as Experiment. An Experiment consists of some Tasks. Tasks are created at Dispatcher and distributed to Processor. ' +\r\n        'For evaluating a performance of models, metrics and other data are collected and evaluated later by Metaheuristic.' +\r\n        '</li>' +\r\n        '<li>' +\r\n        '<p>Batch processing.</p>' +\r\n        'Common usage of batch processing - split data, create tasks for processing each part of data, process Tasks, aggregate results' +\r\n        '</li>' +\r\n        '</ul>',\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pilot-view',\r\n  templateUrl: './pilot.component.html',\r\n  styleUrls: ['./pilot.component.scss']\r\n})\r\nexport class PilotComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h1>Pilot</h1>\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from '@src/environments/environment';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'lorem-index',\r\n    templateUrl: './lorem-index.component.html',\r\n    styleUrls: ['./lorem-index.component.sass']\r\n})\r\nexport class LoremIndexComponent {\r\n    content: SafeHtml;\r\n    constructor(private domSanitizer: DomSanitizer) {\r\n        this.content = domSanitizer.bypassSecurityTrustHtml(environment.brandingMsg);\r\n    }\r\n}","<ct-content>\r\n    <ct-cols>\r\n        <ct-col size=\"1\"></ct-col>\r\n        <ct-col size=\"10\">\r\n            <ct-section>\r\n                <ct-section-header>\r\n                    <ct-section-header-row>\r\n                        <ct-heading>Lorem Index</ct-heading>\r\n                    </ct-section-header-row>\r\n                </ct-section-header>\r\n                <ct-section-body>\r\n                    <ct-section-body-row > \r\n                        <div [innerHtml]=\"content\"></div>\r\n                    </ct-section-body-row>\r\n                </ct-section-body>\r\n            </ct-section>\r\n        </ct-col>\r\n    </ct-cols>\r\n</ct-content>\r\n<copy-right></copy-right>","export enum NotificationType {\r\n  Success = 'success',\r\n  Error = 'error',\r\n  Alert = 'alert',\r\n  Info = 'info',\r\n  Warn = 'warn',\r\n  Bare = 'bare'\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-flex',\r\n  templateUrl: './ct-flex.component.html',\r\n  styleUrls: ['./ct-flex.component.scss']\r\n})\r\nexport class CtFlexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { BatchData } from './BatchData';\r\nimport * as JSZip from 'jszip';\r\nimport * as fileSaver from 'file-saver';\r\nimport { from, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, concatMap } from 'rxjs/operators';\r\nimport { BatchSelector } from './BatchSelector';\r\n\r\ninterface ProcessableItem {\r\n    id: number;\r\n    response: HttpResponse<Blob>;\r\n    fileName: string;\r\n}\r\n\r\nexport class BatchDownloader extends BatchSelector {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private url: (s: string) => string\r\n    ) { super(); }\r\n\r\n\r\n    download(): void {\r\n        const zipFileName: string = 'result ' + this.list.toString() + '.zip';\r\n        const zip: JSZip = new JSZip();\r\n        const processable: ProcessableItem[] = this.list.map(el => ({\r\n            id: el,\r\n            fileName: 'empty',\r\n            response: null,\r\n        }));\r\n\r\n        from(processable)\r\n            .pipe(\r\n                concatMap(item => this.downloadBatch(item.id.toString())\r\n                    .pipe(\r\n                        catchError(err => of(err)),\r\n                        this.parseProcessableItemOperator(item),\r\n                    )\r\n                )\r\n            )\r\n            .subscribe({\r\n                next: e => { },\r\n                error: error => { },\r\n                complete: () => {\r\n                    processable.forEach(item => {\r\n                        zip.file(item.fileName, item.response.body);\r\n                    });\r\n                    zip.generateAsync({ type: 'blob' }).then((blob: Blob) => {\r\n                        fileSaver.saveAs(blob, zipFileName);\r\n                    });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    private parseProcessableItemOperator(item: ProcessableItem): (source: Observable<HttpResponse<Blob>>) => Observable<Subscription> {\r\n        return (source: Observable<HttpResponse<Blob>>) =>\r\n            new Observable<Subscription>(observer => {\r\n                return source.subscribe(\r\n                    {\r\n                        next: response => {\r\n                            item.response = response;\r\n                            item.fileName = response.ok ?\r\n                                `${item.id}.zip` :\r\n                                `${item.id} error`;\r\n                            observer.next();\r\n                        },\r\n                        error: error => observer.error(error),\r\n                        complete: () => observer.complete(),\r\n                    }\r\n                );\r\n            });\r\n    }\r\n\r\n    private downloadBatch(batchId: string): Observable<HttpResponse<Blob>> {\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/octet-stream');\r\n        return this.http.get(this.url(`batch-download-result/${batchId}/result.zip`), {\r\n            headers,\r\n            observe: 'response',\r\n            responseType: 'blob'\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-footer',\r\n  templateUrl: './ct-section-footer.component.html',\r\n  styleUrls: ['./ct-section-footer.component.scss']\r\n})\r\nexport class CtSectionFooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Subscription } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication';\r\n\r\nexport class UIStateComponent {\r\n    isLoading: boolean = false;\r\n    subs: Subscription[] = [];\r\n\r\n    constructor(readonly authenticationService: AuthenticationService) { }\r\n\r\n    get isRole(): {\r\n        Admin: boolean;\r\n        Manager: boolean;\r\n        Operator: boolean;\r\n        Data: boolean;\r\n        MasterAdmin: boolean;\r\n        MasterOperator: boolean;\r\n        MasterSupport: boolean;\r\n        MasterAssetManager: boolean;\r\n    } {\r\n        return {\r\n            Admin: this.authenticationService.isRoleAdmin(),\r\n            Manager: this.authenticationService.isRoleManager(),\r\n            Operator: this.authenticationService.isRoleOperator(),\r\n            Data: this.authenticationService.isRoleData(),\r\n            MasterAdmin: this.authenticationService.isRoleMasterAdmin(),\r\n            MasterOperator: this.authenticationService.isRoleMasterOperator(),\r\n            MasterSupport: this.authenticationService.isRoleMasterSupport(),\r\n            MasterAssetManager: this.authenticationService.isRoleMasterAssetManager()\r\n        };\r\n    }\r\n\r\n    subscribeSubscription(s: Subscription): void {\r\n        this.subs.push(s);\r\n    }\r\n\r\n    unsubscribeSubscriptions(): void {\r\n        // console.log(this.subs.length);\r\n        this.subs.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    setIsLoadingStart(): void {\r\n        this.isLoading = true;\r\n    }\r\n\r\n    setIsLoadingEnd(): void {\r\n        this.isLoading = false;\r\n    }\r\n\r\n}","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\r\nimport { MatSlideToggle, MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { ActivationEnd, Router } from '@angular/router';\r\nimport { AuthenticationService } from '@app/services/authentication/authentication.service';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { setOfLanguages, SettingsLanguage, SettingsTheme } from '@src/app/services/settings/Settings';\r\nimport { SettingsService, SettingsServiceEventChange } from '@src/app/services/settings/settings.service';\r\nimport { environment } from '@src/environments/environment';\r\n\r\n\r\n@Component({\r\n    selector: 'app-view',\r\n    templateUrl: './app-view.component.html',\r\n    styleUrls: ['./app-view.component.scss']\r\n})\r\n\r\nexport class AppViewComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    htmlContent: SafeHtml;\r\n    sidenavButtonDisable: boolean = false;\r\n    sidenav: boolean = false;\r\n    theme: SettingsTheme;\r\n    lang: {\r\n        list?: Set<SettingsLanguage>;\r\n        current?: SettingsLanguage;\r\n    } = {};\r\n    brandingTitle: string = environment.brandingTitle;\r\n\r\n    @ViewChild('matSlideToggleTheme') matSlideToggleTheme: MatSlideToggle;\r\n    @ViewChild('matSelectLanguage') matSelectLanguage: MatSelect;\r\n\r\n    constructor(\r\n        readonly authenticationService: AuthenticationService,\r\n        private domSanitizer: DomSanitizer,\r\n        private settingsService: SettingsService,\r\n        private router: Router\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.htmlContent = this.domSanitizer.bypassSecurityTrustHtml(\r\n            environment.brandingMsgIndex\r\n        );\r\n        this.lang.list = setOfLanguages;\r\n        this.subscribeSubscription(this.router.events.subscribe((event) => {\r\n            if (event instanceof ActivationEnd) {\r\n                this.sidenavButtonDisable = !event.snapshot?.data?.sidenavExist;\r\n            }\r\n        }));\r\n        this.subscribeSubscription(\r\n            this.settingsService.events.subscribe(event => {\r\n                if (event instanceof SettingsServiceEventChange) {\r\n                    this.theme = event.settings.theme;\r\n                    this.lang.current = event.settings.language;\r\n                    this.sidenav = event.settings.sidenav;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeSubscriptions();\r\n    }\r\n\r\n    isAuth(): boolean {\r\n        return this.authenticationService.isAuth();\r\n    }\r\n\r\n    toggleSideNav(): void {\r\n        this.settingsService.toggleSidenav();\r\n    }\r\n\r\n    toggleTheme(event: MatSlideToggleChange): void {\r\n        this.settingsService.toggleTheme();\r\n    }\r\n\r\n    toggleLanguage(event: MatSelectChange): void {\r\n        this.settingsService.toggleLanguage(event.value);\r\n    }\r\n\r\n    logout(): void {\r\n        this.authenticationService.logout().subscribe();\r\n    }\r\n}","<div class=\"app-view\" *ngIf=\"isAuth()\">\r\n    <div class=\"app-view__header\">\r\n        <mat-toolbar class=\"toolbar\" color=\"primary\">\r\n            <mat-toolbar-row>\r\n                <ng-container *ngTemplateOutlet=\"isAuthToolbar\"></ng-container>\r\n            </mat-toolbar-row>\r\n        </mat-toolbar>\r\n    </div>\r\n    <div class=\"app-view__body\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"app-view\" *ngIf=\"!isAuth()\">\r\n    <div class=\"app-view__header\">\r\n        <mat-toolbar class=\"toolbar\" color=\"primary\">\r\n            <mat-toolbar-row class=\"toolbar__row\">\r\n                <div class=\"toolbar__left\">\r\n                    <button class=\"mat-button\" mat-button routerLink=\"/\">{{brandingTitle}}</button>\r\n                </div>\r\n                <div class=\"toolbar__right\"></div>\r\n            </mat-toolbar-row>\r\n        </mat-toolbar>\r\n    </div>\r\n    <div class=\"app-view__body\">\r\n        <ct-content>\r\n            <ct-flex justify-content=\"flex-start\" align-items=\"flex-start\" gap=\"9px\">\r\n                <ct-flex-item flex=\"2\">\r\n                    <ct-section>\r\n                        <ct-section-body>\r\n                            <ct-section-body-row>\r\n                                <div [innerHtml]=\"htmlContent\"></div>\r\n                            </ct-section-body-row>\r\n                        </ct-section-body>\r\n                    </ct-section>\r\n                </ct-flex-item>\r\n                <ct-flex-item flex=\"1\">\r\n                    <login-view> </login-view>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-content>\r\n    </div>\r\n    <div class=\"app-view__footer\">\r\n        <ct-flex justify-content=\"center\">\r\n            <ct-flex-item>Powered by Metaheuristic</ct-flex-item>\r\n        </ct-flex>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<ng-template #isAuthToolbar>\r\n    <ct-flex justify-content=\"space-between\" align-items=\"center\">\r\n        <ct-flex-item>\r\n            <ct-flex justify-content=\"flex-start\" gap=\"9px\" align-items=\"center\">\r\n\r\n                <ct-flex-item>\r\n                    <button \r\n                        class=\"mat-button mat-button--sidenav\" \r\n                        [class.active]=\"sidenav\"\r\n                        mat-button \r\n                        [disabled]=\"sidenavButtonDisable\" \r\n                        (click)=\"toggleSideNav()\">\r\n                        <mat-icon class=\"mat-icon\">menu</mat-icon>\r\n                    </button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item>\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" routerLink=\"\">{{brandingTitle}}</button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item *ngIf=\"\r\n                    isRole.Admin ||\r\n                    isRole.Data ||\r\n                    isRole.Manager \">\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/ai\">{{ 'app-view.Ai' | translate }}</button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item *ngIf=\"\r\n                    isRole.Admin ||\r\n                    isRole.Data ||\r\n                    isRole.Manager ||\r\n                    isRole.Operator \">\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/batch\">{{ 'app-view.Batch' | translate }}</button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item *ngIf=\"\r\n                    isRole.MasterAdmin ||\r\n                    isRole.MasterOperator ||\r\n                    isRole.MasterSupport ||\r\n                    isRole.MasterAssetManager ||\r\n                    isRole.Admin ||\r\n                    isRole.Data || \r\n                    isRole.Manager \">\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/dispatcher\">{{ 'app-view.Dispatcher' | translate }}</button>\r\n                </ct-flex-item>\r\n\r\n            </ct-flex>\r\n        </ct-flex-item>\r\n\r\n        <ct-flex-item>\r\n            <batch-change-notification></batch-change-notification>\r\n        </ct-flex-item>\r\n\r\n        <ct-flex-item>\r\n            <ct-flex justify-content=\"flex-end\" gap=\"9px\" align-items=\"center\">\r\n                <ct-flex-item>\r\n                    <mat-slide-toggle #matSlideToggleTheme [checked]=\"theme === 'dark'\" (change)=\"toggleTheme($event)\">\r\n                    </mat-slide-toggle>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <mat-select #matSelectLanguage [(value)]=\"lang.current\" (selectionChange)=\"toggleLanguage($event)\">\r\n                        <mat-option *ngFor=\"let language of lang.list\" [value]=\"language\">{{language}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/about\">{{ 'app-view.About' | translate }}</button>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button (click)=\"logout()\">{{ 'app-view.Logout' | translate }}</button>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-flex-item>\r\n    </ct-flex>\r\n</ng-template>","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData } from '@src/app/helpers/generateFormData';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { SourceCodeUidsForCompany } from '../source-codes/SourceCodeUidsForCompany';\r\nimport { BatchDownloader } from './BatchDownloader';\r\nimport { BatchesResult } from './BatchesResult';\r\nimport { BatchExexStatusComparer } from './BatchExexStatusComparer';\r\nimport { ExecStatuses } from './ExecStatuses';\r\nimport { Status } from './Status';\r\n\r\nconst url = (urlString: string): string => `${environment.baseUrl}dispatcher/batch/${urlString}`;\r\n\r\nconst FINISHED_STATE: number = 4;\r\nconst ERROR_STATE: number = -1;\r\n\r\nexport interface GetBatchesParams {\r\n    page: number;\r\n    filterBatches: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BatchService {\r\n    batchDownloader: BatchDownloader;\r\n    batchExexStatusComparer: BatchExexStatusComparer;\r\n    finishedNotification: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n    ) {\r\n        this.batchDownloader = new BatchDownloader(http, url);\r\n        this.batchExexStatusComparer = new BatchExexStatusComparer([FINISHED_STATE, ERROR_STATE]);\r\n        this.batchExexStatusComparer.notification.subscribe((s: boolean) => {\r\n            this.finishedNotification.next(s);\r\n        });\r\n    }\r\n\r\n    batches(page: string, filterBatches: boolean): Observable<BatchesResult> {\r\n        return this.http.get<BatchesResult>(\r\n            url(`batches`),\r\n            { params: { page, filterBatches: filterBatches ? 'true' : 'false' } }\r\n        );\r\n    }\r\n\r\n    batchExecStatuses(): Observable<ExecStatuses> {\r\n        return this.http.get<ExecStatuses>(url(`batch-exec-statuses`));\r\n    }\r\n\r\n    batchAdd(): Observable<SourceCodeUidsForCompany> {\r\n        return this.http.get<SourceCodeUidsForCompany>(url(`batch-add`));\r\n    }\r\n\r\n    processResourceDelete(batchId: string): Observable<Status> {\r\n        return this.http.get<Status>(url(`batch-delete/${batchId}`));\r\n    }\r\n\r\n    processResourceDeleteCommit(batchId: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`batch-delete-commit`), generateFormData({ batchId }));\r\n    }\r\n\r\n    uploadFile(sourceCodeId: string, file: File): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`batch-upload-from-file`), generateFormData({ file, sourceCodeId }));\r\n    }\r\n\r\n    getProcessingResourceStatus(batchId: string): Observable<Status> {\r\n        return this.http.get<Status>(url(`batch-status/${batchId}`));\r\n    }\r\n\r\n    downloadFile(batchId: string): Observable<HttpResponse<Blob>> {\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/octet-stream');\r\n\r\n        return this.http.get(url(`batch-download-result/${batchId}/result.zip`), {\r\n            headers,\r\n            observe: 'response',\r\n            responseType: 'blob'\r\n        });\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-cols',\r\n  templateUrl: './ct-cols.component.html',\r\n  styleUrls: ['./ct-cols.component.scss']\r\n})\r\nexport class CtColsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-pre',\r\n  templateUrl: './ct-pre.component.html',\r\n  styleUrls: ['./ct-pre.component.scss']\r\n})\r\nexport class CtPreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-body-row',\r\n  templateUrl: './ct-section-body-row.component.html',\r\n  styleUrls: ['./ct-section-body-row.component.scss']\r\n})\r\nexport class CtSectionBodyRowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Injectable } from '@angular/core';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BatchService } from './batch.service';\r\nimport { BatchesResult } from './BatchesResult';\r\nimport { ExecStatuses } from './ExecStatuses';\r\n\r\nexport interface BatchExexStatusChangesResult {\r\n    isNew: boolean;\r\n    isFinished: boolean;\r\n    isError: boolean;\r\n}\r\n\r\nconst FINISHED_STATE: number = 4;\r\nconst ERROR_STATE: number = -1;\r\n\r\nclass StatusChecker {\r\n    private records: ExecStatuses[] = [];\r\n\r\n    write(execStatuses: ExecStatuses): void {\r\n        this.records.push(execStatuses);\r\n    }\r\n\r\n    masterCheck(callback: (result: BatchExexStatusChangesResult) => void): void {\r\n        const next: ExecStatuses = this.records[this.records.length - 1];\r\n        const prev: ExecStatuses = this.records[this.records.length - 2];\r\n        if (next && prev) {\r\n            const nextExecStatusMap: Map<number, number> = new Map(next.statuses.map(v => [v.id, v.state]));\r\n            const prevExecStatusMap: Map<number, number> = new Map(prev.statuses.map(v => [v.id, v.state]));\r\n\r\n            const isNew: boolean = this.isNew(prevExecStatusMap, nextExecStatusMap);\r\n            const isFinished: boolean = this.checkState(prevExecStatusMap, nextExecStatusMap, FINISHED_STATE);\r\n            const isError: boolean = this.checkState(prevExecStatusMap, nextExecStatusMap, ERROR_STATE);\r\n\r\n            this.records = [next];\r\n            if (callback) { callback({ isNew, isFinished, isError }); }\r\n        }\r\n    }\r\n\r\n    private isNew(prevMap: Map<number, number>, nextMap: Map<number, number>): boolean {\r\n        const checks: boolean[] = [];\r\n        nextMap.forEach((value, key) => {\r\n            if (prevMap.has(key)) {\r\n                checks.push(false);\r\n            } else {\r\n                checks.push(true);\r\n            }\r\n        });\r\n        if (checks.indexOf(true) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    checkState(\r\n        prevMap: Map<number, number>,\r\n        nextMap: Map<number, number>,\r\n        state: number\r\n    ): boolean {\r\n        const checks: boolean[] = [];\r\n        prevMap.forEach((value, key) => {\r\n            if (prevMap.has(key) && nextMap.has(key)) {\r\n                if (nextMap.get(key) === state) {\r\n                    if (prevMap.get(key) !== state) {\r\n                        checks.push(true);\r\n                    } else {\r\n                        checks.push(false);\r\n                    }\r\n                } else {\r\n                    checks.push(false);\r\n                }\r\n            } else {\r\n                checks.push(false);\r\n            }\r\n        });\r\n        if (checks.indexOf(true) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BatchExexStatusService {\r\n    private isIntervalStarted: boolean = false;\r\n    private interval: number = environment.batchInterval || 15000;\r\n    private statusChecker: StatusChecker = new StatusChecker();\r\n\r\n    getStatuses: BehaviorSubject<ExecStatuses> = new BehaviorSubject(null);\r\n    getChanges: BehaviorSubject<BatchExexStatusChangesResult> = new BehaviorSubject(null);\r\n\r\n    constructor(private batchService: BatchService) { }\r\n\r\n    stopIntervalRequset(): void {\r\n        this.isIntervalStarted = false;\r\n    }\r\n\r\n    startIntervalRequset(): void {\r\n        if (this.isIntervalStarted) { }\r\n        else {\r\n            this.isIntervalStarted = true;\r\n            this.intervalRequset();\r\n        }\r\n    }\r\n\r\n    private intervalRequset(): void {\r\n        if (this.isIntervalStarted) {\r\n            this.batchService.batchExecStatuses().subscribe({\r\n                next: result => {\r\n                    this.statusChecker.write(result);\r\n                    this.statusChecker.masterCheck(r => this.getChanges.next(r));\r\n                    this.getStatuses.next(result);\r\n                    this.repeatRequest();\r\n                },\r\n                error: () => { }\r\n            });\r\n        }\r\n    }\r\n\r\n    private repeatRequest(): void {\r\n        if (this.isIntervalStarted) {\r\n            setTimeout(() => this.intervalRequset(), this.interval);\r\n        }\r\n    }\r\n\r\n    updateBatchesResultByStatuses(batchesResult: BatchesResult, statuses: ExecStatuses): void {\r\n        batchesResult?.batches.content.forEach(batch => {\r\n            statuses?.statuses.forEach(status => {\r\n                if (batch.batch.id === status.id) {\r\n                    batch.execState = status.state;\r\n                    batch.batch.execState = status.state;\r\n                }\r\n            });\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { settings } from 'cluster';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AuthenticationService, AuthenticationServiceEventChange, AuthenticationServiceEventLogin } from '../authentication';\r\nimport { defaultSettings, Settings, SettingsLanguage, SettingsTheme } from './Settings';\r\n\r\nexport class SettingsServiceEventChange {\r\n    settings: Settings;\r\n    constructor(settings: Settings) { this.settings = JSON.parse(JSON.stringify(settings)); }\r\n}\r\nexport type SettingsServiceEvent = SettingsServiceEventChange;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SettingsService {\r\n    private localStorageName: string = 'settingsService';\r\n    private storageDefaultData: Settings = defaultSettings;\r\n\r\n    events: BehaviorSubject<SettingsServiceEvent> = new BehaviorSubject<SettingsServiceEvent>(null);\r\n\r\n    constructor(\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.events.subscribe(event => {\r\n            if (event instanceof AuthenticationServiceEventChange) {\r\n                if (event.user && event.user.username) {\r\n                    this.localStorageName = event.user.username + ':' + 'settingsService';\r\n                    this.getSettings(settings => {\r\n                        this.updateTheme(settings.theme);\r\n                        this.update(settings);\r\n                    });\r\n                } else {\r\n                    this.localStorageName = 'settingsService';\r\n                    this.getSettings(settings => {\r\n                        this.updateTheme(settings.theme);\r\n                        this.update({ ...settings, ...defaultSettings });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (event instanceof AuthenticationServiceEventLogin) {\r\n                this.getSettings(settings => this.update({\r\n                    ...settings,\r\n                    sidenav: true\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    private update(newStorageData: Settings): void {\r\n        this.setToLocalStorage(newStorageData);\r\n        this.events.next(new SettingsServiceEventChange(newStorageData));\r\n    }\r\n\r\n    toggleSidenav(): void {\r\n        this.getSettings(settings => this.update({\r\n            ...settings,\r\n            sidenav: !settings.sidenav\r\n        }));\r\n    }\r\n\r\n    toggleLanguage(value: SettingsLanguage): void {\r\n        this.getSettings(settings => this.update({\r\n            ...settings,\r\n            language: value\r\n        }));\r\n    }\r\n\r\n    toggleTheme(): void {\r\n        this.getSettings(settings => {\r\n            const theme: SettingsTheme = (settings.theme === SettingsTheme.Dark) ?\r\n                SettingsTheme.Light : SettingsTheme.Dark;\r\n            this.updateTheme(theme);\r\n            this.update({ ...settings, theme });\r\n        });\r\n    }\r\n\r\n    toggleBatchFilter(value: boolean): void {\r\n        this.getSettings(settings => this.update({\r\n            ...settings,\r\n            batchFilter: value\r\n        }));\r\n    }\r\n\r\n    private getSettings(callback: (settings: Settings) => void): void {\r\n        const settings: Settings = this.getFromLocalStorage();\r\n        callback(settings as Settings);\r\n    }\r\n\r\n    private updateTheme(theme: SettingsTheme): void {\r\n        const body: HTMLElement = document.querySelector('body');\r\n        body.classList.remove('dark-theme');\r\n        body.classList.remove('light-theme');\r\n        switch (theme) {\r\n            case SettingsTheme.Dark:\r\n                body.classList.add('dark-theme');\r\n                break;\r\n            case SettingsTheme.Light:\r\n                body.classList.add('light-theme');\r\n                break;\r\n            default:\r\n                body.classList.add('light-theme');\r\n                break;\r\n        }\r\n    }\r\n\r\n    clearLocalStorage(): void {\r\n        localStorage.removeItem(this.localStorageName);\r\n    }\r\n\r\n    private setToLocalStorage(newStorageData: Settings): void {\r\n        localStorage.setItem(this.localStorageName,\r\n            JSON.stringify(Object.assign(\r\n                {},\r\n                this.storageDefaultData,\r\n                newStorageData)\r\n            )\r\n        );\r\n    }\r\n\r\n    private getFromLocalStorage(): Settings {\r\n        return Object.assign(\r\n            {},\r\n            this.storageDefaultData,\r\n            JSON.parse(localStorage.getItem(this.localStorageName))\r\n        );\r\n    }\r\n}","export enum Role {\r\n    ROLE_MANAGER = 'ROLE_MANAGER',\r\n    ROLE_OPERATOR = 'ROLE_OPERATOR',\r\n    ROLE_DATA = 'ROLE_DATA',\r\n\r\n    ROLE_SERVER_REST_ACCESS = 'ROLE_SERVER_REST_ACCESS',\r\n    ROLE_ASSET_REST_ACCESS = 'ROLE_ASSET_REST_ACCESS',\r\n    ROLE_BILLING = 'ROLE_BILLING',\r\n\r\n    ROLE_MASTER_ADMIN = 'ROLE_MASTER_ADMIN',\r\n    ROLE_MASTER_OPERATOR = 'ROLE_MASTER_OPERATOR',\r\n    ROLE_MASTER_SUPPORT = 'ROLE_MASTER_SUPPORT',\r\n    ROLE_MASTER_ASSET_MANAGER = 'ROLE_MASTER_ASSET_MANAGER',\r\n\r\n    ROLE_ADMIN = 'ROLE_ADMIN',\r\n\r\n    // \r\n\r\n    Manager = 'ROLE_MANAGER',\r\n    Operator = 'ROLE_OPERATOR',\r\n    Data = 'ROLE_DATA',\r\n\r\n    ServerrestAccess = 'ROLE_SERVER_REST_ACCESS',\r\n    AssetRestAccess = 'ROLE_ASSET_REST_ACCESS',\r\n    Billing = 'ROLE_BILLING',\r\n\r\n    MasterAdmin = 'ROLE_MASTER_ADMIN',\r\n    MasterOpertator = 'ROLE_MASTER_OPERATOR',\r\n    MasterSupport = 'ROLE_MASTER_SUPPORT',\r\n    MasterAssetManager = 'ROLE_MASTER_ASSET_MANAGER',\r\n\r\n    Admin = 'ROLE_ADMIN'\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-col',\r\n  templateUrl: './ct-col.component.html',\r\n  styleUrls: ['./ct-col.component.scss']\r\n})\r\nexport class CtColComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, ElementRef, OnInit, ViewChild, Input, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'ct-file-upload',\r\n    templateUrl: './ct-file-upload.component.html',\r\n    styleUrls: ['./ct-file-upload.component.scss']\r\n})\r\nexport class CtFileUploadComponent implements OnInit, OnChanges {\r\n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    @ViewChild('fileInput', { static: true }) fileInput: ElementRef;\r\n    @Input() buttonTitle: string;\r\n    @Input() acceptTypes: string = '';\r\n\r\n\r\n    value: string = '';\r\n    buttonTitleString: string;\r\n    accept: string;\r\n\r\n    ngOnInit(): void {\r\n        this.buttonTitleString = this.buttonTitle || 'Select File';\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.buttonTitleString = this.buttonTitle || 'Select File';\r\n    }\r\n\r\n    fileChanged(): void {\r\n        this.value = this.fileInput.nativeElement.value;\r\n        this.changed.emit('fileChanged');\r\n    }\r\n\r\n    removeFile(): void {\r\n        this.fileInput.nativeElement.value = '';\r\n        this.value = '';\r\n        this.changed.emit('fileChanged');\r\n    }\r\n}","<input #fileInput hidden=\"hidden\" type=\"file\" name=\"file\" (change)=\"fileChanged()\" accept=\"{{acceptTypes}}\" />\r\n<button *ngIf=\"!value\" mat-flat-button=\"mat-flat-button\" wide=\"wide\" color=\"primary\"\r\n    (click)=\"fileInput.click()\">{{buttonTitleString}}</button>\r\n<div class=\"file\" *ngIf=\"value\">\r\n    <div class=\"file__value\">{{value}}</div>\r\n    <div class=\"file__close\" (click)=\"removeFile()\">\r\n        <mat-icon>close</mat-icon>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-body',\r\n  templateUrl: './ct-section-body.component.html',\r\n  styleUrls: ['./ct-section-body.component.scss']\r\n})\r\nexport class CtSectionBodyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-flex-item',\r\n  templateUrl: './ct-flex-item.component.html',\r\n  styleUrls: ['./ct-flex-item.component.scss']\r\n})\r\nexport class CtFlexItemComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Authority } from './Authority';\r\n\r\nexport class User {\r\n    authorities: Authority[];\r\n    publicName: string;\r\n    username: string;\r\n    token: string;\r\n\r\n    constructor(data: User) {\r\n        this.publicName = data?.publicName || '';\r\n        this.username = data?.username || '';\r\n        this.authorities = data?.authorities || [];\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'billing',\r\n  templateUrl: './billing.component.html',\r\n  styleUrls: ['./billing.component.scss']\r\n})\r\nexport class BillingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  billing works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-hint',\r\n  templateUrl: './ct-hint.component.html',\r\n  styleUrls: ['./ct-hint.component.scss']\r\n})\r\nexport class CtHintComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nav-pilot',\r\n  templateUrl: './nav-pilot.component.html',\r\n  styleUrls: ['./nav-pilot.component.scss']\r\n})\r\nexport class NavPilotComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-list class=\"page-sidenav-list\" color=\"primary\">\r\n    <mat-list-item>\r\n        <button class=\"mat-button\" mat-button=\"\" routerLinkActive=\"active\" routerLink=\"/pilot/process-resources\">Process Resource</button>\r\n    </mat-list-item>\r\n</mat-list>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation, ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NotificationAnimationType } from '../../enums/notification-animation-type.enum';\r\nimport { Notification } from '../../interfaces/notification.type';\r\nimport { Options, Position } from '../../interfaces/options.type';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'simple-notifications',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './simple-notifications.component.html',\r\n  styleUrls: ['./simple-notifications.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SimpleNotificationsComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private service: NotificationsService,\r\n    private cd: ChangeDetectorRef\r\n  ) { }\r\n\r\n  @Input() set options(opt: Options) {\r\n    this.usingComponentOptions = true;\r\n    this.attachChanges(opt);\r\n  }\r\n\r\n  @Output() create = new EventEmitter();\r\n  @Output() destroy = new EventEmitter();\r\n\r\n  notifications: Notification[] = [];\r\n  position: Position = ['bottom', 'right'];\r\n\r\n  private lastNotificationCreated: Notification;\r\n  private listener: Subscription;\r\n\r\n  // Received values\r\n  private lastOnBottom = true;\r\n  private maxStack = 8;\r\n  private preventLastDuplicates: any = false;\r\n  private preventDuplicates = false;\r\n\r\n  // Sent values\r\n  timeOut = 0;\r\n  maxLength = 0;\r\n  clickToClose = true;\r\n  clickIconToClose = false;\r\n  showProgressBar = true;\r\n  pauseOnHover = true;\r\n  theClass = '';\r\n  rtl = false;\r\n  animate: NotificationAnimationType = NotificationAnimationType.FromRight;\r\n\r\n  private usingComponentOptions = false;\r\n\r\n  ngOnInit() {\r\n\r\n    /**\r\n     * Only attach global options if config\r\n     * options were never sent through input\r\n     */\r\n    if (!this.usingComponentOptions) {\r\n      this.attachChanges(\r\n        this.service.globalOptions\r\n      );\r\n    }\r\n\r\n    this.listener = this.service.emitter\r\n      .subscribe(item => {\r\n        switch (item.command) {\r\n          case 'cleanAll':\r\n            this.notifications = [];\r\n            break;\r\n\r\n          case 'clean':\r\n            this.cleanSingle(item.id!);\r\n            break;\r\n\r\n          case 'set':\r\n            if (item.add) {\r\n              this.add(item.notification!);\r\n            } else {\r\n              this.defaultBehavior(item);\r\n            }\r\n            break;\r\n\r\n          default:\r\n            this.defaultBehavior(item);\r\n            break;\r\n        }\r\n        if (!(this.cd as ViewRef).destroyed) {\r\n          this.cd.detectChanges();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.listener) {\r\n      this.listener.unsubscribe();\r\n    }\r\n    this.cd.detach();\r\n  }\r\n\r\n  // Default behavior on event\r\n  defaultBehavior(value: any): void {\r\n    this.notifications.splice(this.notifications.indexOf(value.notification), 1);\r\n    this.destroy.emit(this.buildEmit(value.notification, false));\r\n  }\r\n\r\n\r\n  // Add the new notification to the notification array\r\n  add(item: Notification): void {\r\n    item.createdOn = new Date();\r\n\r\n    const toBlock: boolean = this.preventLastDuplicates || this.preventDuplicates ? this.block(item) : false;\r\n\r\n    // Save this as the last created notification\r\n    this.lastNotificationCreated = item;\r\n    // Override icon if set\r\n    if (item.override && item.override.icons && item.override.icons[item.type]) {\r\n      item.icon = item.override.icons[item.type];\r\n    }\r\n\r\n    if (!toBlock) {\r\n      // Check if the notification should be added at the start or the end of the array\r\n      if (this.lastOnBottom) {\r\n        if (this.notifications.length >= this.maxStack) {\r\n          this.notifications.splice(0, 1);\r\n        }\r\n\r\n        this.notifications.push(item);\r\n      } else {\r\n        if (this.notifications.length >= this.maxStack) {\r\n          this.notifications.splice(this.notifications.length - 1, 1);\r\n        }\r\n\r\n        this.notifications.splice(0, 0, item);\r\n      }\r\n\r\n      this.create.emit(this.buildEmit(item, true));\r\n    }\r\n  }\r\n\r\n  // Check if notifications should be prevented\r\n  block(item: Notification): boolean {\r\n\r\n    const toCheck = item.html ? this.checkHtml : this.checkStandard;\r\n\r\n    if (this.preventDuplicates && this.notifications.length > 0) {\r\n      for (const notification of this.notifications) {\r\n        if (toCheck(notification, item)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.preventLastDuplicates) {\r\n\r\n      let comp: Notification;\r\n\r\n      if (this.preventLastDuplicates === 'visible' && this.notifications.length > 0) {\r\n        if (this.lastOnBottom) {\r\n          comp = this.notifications[this.notifications.length - 1];\r\n        } else {\r\n          comp = this.notifications[0];\r\n        }\r\n      } else if (this.preventLastDuplicates === 'all' && this.lastNotificationCreated) {\r\n        comp = this.lastNotificationCreated;\r\n      } else {\r\n        return false;\r\n      }\r\n      return toCheck(comp, item);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  checkStandard(checker: Notification, item: Notification): boolean {\r\n    return checker.type === item.type && checker.title === item.title && checker.content === item.content;\r\n  }\r\n\r\n  checkHtml(checker: Notification, item: Notification): boolean {\r\n    return checker.html ?\r\n      checker.type === item.type && checker.title === item.title && checker.content === item.content && checker.html === item.html :\r\n      false;\r\n  }\r\n\r\n  // Attach all the changes received in the options object\r\n  attachChanges(options: any) {\r\n    for (const key in options) {\r\n      if (this.hasOwnProperty(key)) {\r\n        (this as any)[key] = options[key];\r\n      } else if (key === 'icons') {\r\n        this.service.icons = options[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  buildEmit(notification: Notification, to: boolean) {\r\n    const toEmit: Notification = {\r\n      createdOn: notification.createdOn,\r\n      type: notification.type,\r\n      icon: notification.icon,\r\n      id: notification.id\r\n    };\r\n\r\n    if (notification.html) {\r\n      toEmit.html = notification.html;\r\n    } else {\r\n      toEmit.title = notification.title;\r\n      toEmit.content = notification.content;\r\n    }\r\n\r\n    if (!to) {\r\n      toEmit.destroyedOn = new Date();\r\n    }\r\n\r\n    return toEmit;\r\n  }\r\n\r\n  cleanSingle(id: string): void {\r\n    let indexOfDelete = 0;\r\n    let doDelete = false;\r\n    let noti;\r\n\r\n    this.notifications.forEach((notification, idx) => {\r\n      if (notification.id === id) {\r\n        indexOfDelete = idx;\r\n        noti = notification;\r\n        doDelete = true;\r\n      }\r\n    });\r\n\r\n    if (doDelete) {\r\n      this.notifications.splice(indexOfDelete, 1);\r\n      this.destroy.emit(this.buildEmit(noti, false));\r\n    }\r\n  }\r\n}\r\n","<div class=\"simple-notification-wrapper\" [ngClass]=\"position\">\r\n    <simple-notification\r\n            *ngFor=\"let a of notifications; let i = index\"\r\n            [item]=\"a\"\r\n            [timeOut]=\"timeOut\"\r\n            [clickToClose]=\"clickToClose\"\r\n            [clickIconToClose]=\"clickIconToClose\"\r\n            [maxLength]=\"maxLength\"\r\n            [showProgressBar]=\"showProgressBar\"\r\n            [pauseOnHover]=\"pauseOnHover\"\r\n            [theClass]=\"theClass\"\r\n            [rtl]=\"rtl\"\r\n            [animate]=\"animate\"\r\n            [position]=\"i\">\r\n    </simple-notification>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UIStateComponent } from './models/UIStateComponent';\r\nimport { AuthenticationService, AuthenticationServiceEventChange, AuthenticationServiceEventLogin, AuthenticationServiceEventLogout } from './services/authentication';\r\nimport { BatchExexStatusService } from './services/batch/BatchExecStatusService';\r\nimport { SettingsService, SettingsServiceEventChange } from './services/settings/settings.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    constructor(\r\n        private translate: TranslateService,\r\n        private batchExexStatusService: BatchExexStatusService,\r\n        readonly authenticationService: AuthenticationService,\r\n        private settingsService: SettingsService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscribeSubscription(\r\n            this.settingsService.events.subscribe(event => {\r\n                if (event instanceof SettingsServiceEventChange) {\r\n                    this.translate.use(event.settings.language);\r\n                }\r\n            })\r\n        );\r\n\r\n        this.subscribeSubscription(\r\n            this.authenticationService.events.subscribe(event => {\r\n                if (event instanceof AuthenticationServiceEventChange) {\r\n                    if (event.user) {\r\n                        this.batchExexStatusService.startIntervalRequset();\r\n                    }\r\n                }\r\n\r\n                if (event instanceof AuthenticationServiceEventLogout) {\r\n                    this.batchExexStatusService.stopIntervalRequset();\r\n                }\r\n            })\r\n        );\r\n    }\r\n    ngOnDestroy(): void { this.unsubscribeSubscriptions(); }\r\n}","<app-view></app-view>\r\n<simple-notifications></simple-notifications>\r\n","import { BatchExecStatus } from './BatchExecStatus';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport class BatchExexStatusComparer {\r\n    private isFirstBacth = true;\r\n\r\n    private list: BatchExecStatus[] = [];\r\n    private statuses: number[] = [];\r\n\r\n    notification: BehaviorSubject < boolean > = new BehaviorSubject(false);\r\n\r\n    constructor(statuses: number[]) {\r\n        this.statuses = statuses;\r\n    }\r\n\r\n    takeApart(newList: BatchExecStatus[]) {\r\n        if (this.isFirstBacth) {\r\n            this.isFirstBacth = false;\r\n        } else {\r\n            const differenceList: BatchExecStatus[] = [];\r\n\r\n            newList.forEach(newElem => {\r\n                let elem = this.list.find(elem => elem.id === newElem.id);\r\n                if (elem) {\r\n                    // find difference state\r\n                    if (elem.state !== newElem.state) {\r\n                        differenceList.push(newElem);\r\n                    }\r\n                } else {\r\n                    //  new elem\r\n                    differenceList.push(newElem);\r\n                }\r\n            });\r\n\r\n            this.checkStatus(differenceList);\r\n        }\r\n        this.list = Array.from(newList);\r\n    }\r\n\r\n    private checkStatus(list: BatchExecStatus[]) {\r\n        let exist: boolean = false;\r\n        list.forEach( (elem: BatchExecStatus) => {\r\n            const index: number = this.statuses.findIndex((i: number) => i === elem.state) + 1;\r\n            if (index) {\r\n                exist = true;\r\n            }\r\n        });\r\n        this.notification.next(exist);\r\n    }\r\n}","import {Icons} from '../interfaces/icons';\r\n\r\nexport const DEFAULT_ICONS: Icons = {\r\n  alert: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\r\n        </svg>\r\n    `,\r\n  error: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n            <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\r\n        </svg>\r\n    `,\r\n  info: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"/>\r\n        </svg>\r\n    `,\r\n  success: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\r\n        </svg>\r\n    `,\r\n  warn: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" width=\"64\" viewBox=\"0 0 64 64\" height=\"64\">\r\n          <circle cx=\"32.086\" cy=\"50.142\" r=\"2.256\"/>\r\n          <path d=\"M30.08 25.012V42.32c0 1.107.897 2.005 2.006 2.005s2.006-.897 2.006-2.005V25.012c0-1.107-.897-2.006-2.006-2.006s-2.006.898-2.006 2.006z\"/>\r\n          <path d=\"M63.766 59.234L33.856 3.082c-.697-1.308-2.844-1.308-3.54 0L.407 59.234c-.331.622-.312 1.372.051 1.975.362.605 1.015.975 1.72.975h59.816c.705 0 1.357-.369 1.721-.975.361-.603.381-1.353.051-1.975zM5.519 58.172L32.086 8.291l26.568 49.881H5.519z\"/>\r\n        </svg>\r\n    `\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-footer-row',\r\n  templateUrl: './ct-section-footer-row.component.html',\r\n  styleUrls: ['./ct-section-footer-row.component.scss']\r\n})\r\nexport class CtSectionFooterRowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '@app/services/authentication/authentication.service';\r\n@Component({\r\n    selector: 'login-view',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n    username: string = '';\r\n    password: string = '';\r\n\r\n    form: FormGroup = new FormGroup({\r\n        username: new FormControl('', [Validators.required, Validators.minLength(1)]),\r\n        password: new FormControl('', [Validators.required, Validators.minLength(1)]),\r\n    });\r\n\r\n    constructor(\r\n        private authenticationService: AuthenticationService,\r\n    ) { }\r\n\r\n    login(): void {\r\n        if (this.form.valid) {\r\n            this.authenticationService.login(\r\n                this.form.value.username,\r\n                this.form.value.password\r\n            );\r\n        }\r\n    }\r\n}","\r\n<ct-section>\r\n  <form action=\"\" [formGroup]=\"form\" novalidate=\"novalidate\" autocomplete=\"off\">\r\n    <ct-section-header>\r\n      <ct-section-header-row>\r\n        <ct-heading>Sign In</ct-heading>\r\n      </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n      <ct-section-body-row>\r\n        <ct-section-content>\r\n          <mat-form-field appearance=\"outline\" style=\" margin-bottom: -1.34375em\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput=\"matInput\" formControlName=\"username\" autocomplete=\"off\"/>\r\n          </mat-form-field>\r\n        </ct-section-content>\r\n      </ct-section-body-row>\r\n      <ct-section-body-row>\r\n        <ct-section-content>\r\n          <mat-form-field appearance=\"outline\" style=\" margin-bottom: -1.34375em\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput=\"matInput\" type=\"password\" autocomplete=\"off\" formControlName=\"password\"/>\r\n          </mat-form-field>\r\n        </ct-section-content>\r\n      </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n      <ct-section-footer-row>\r\n        <ct-flex justify-content=\"space-between\" gap=\"8px\" align-items=\"center\">\r\n          <ct-flex-item>\r\n            <button class=\"mat-flat-button\" mat-button=\"\" (click)=\"login()\" color=\"primary\" title=\"\">Sign In</button>\r\n          </ct-flex-item>\r\n        </ct-flex>\r\n      </ct-section-footer-row>\r\n    </ct-section-footer>\r\n  </form>\r\n</ct-section>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PageableDefault } from '@src/app/models/PageableDefault';\r\n\r\n@Component({\r\n    selector: 'ct-table-pagination',\r\n    templateUrl: './ct-table-pagination.component.html',\r\n    styleUrls: ['./ct-table-pagination.component.sass']\r\n})\r\nexport class CtTablePaginationComponent {\r\n    @Output() next: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() prev: EventEmitter<void> = new EventEmitter<void>();\r\n    @Input() globalDisable: boolean;\r\n    @Input() pageableDefault: PageableDefault;\r\n\r\n    _next(): void {\r\n        this.next.emit();\r\n    }\r\n    _prev(): void {\r\n        this.prev.emit();\r\n    }\r\n}\r\n","<ct-flex justify-content=\"flex-start\" gap=\"8px\" *ngIf=\"pageableDefault\">\r\n    <ct-flex-item>\r\n        <button mat-flat-button color=\"primary\" (click)=\"_prev()\" [disabled]=\"globalDisable || pageableDefault.first\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n    </ct-flex-item>\r\n    <ct-flex-item>\r\n        <button mat-flat-button color=\"primary\" (click)=\"_next()\" [disabled]=\"globalDisable || pageableDefault.last\">\r\n            <mat-icon>arrow_forward_ios</mat-icon>\r\n        </button>\r\n    </ct-flex-item>\r\n</ct-flex>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-content',\r\n  templateUrl: './ct-content.component.html',\r\n  styleUrls: ['./ct-content.component.scss']\r\n})\r\nexport class CtContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-heading',\r\n  templateUrl: './ct-heading.component.html',\r\n  styleUrls: ['./ct-heading.component.scss']\r\n})\r\nexport class CtHeadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { environment } from '@src/environments/environment';\r\n\r\nexport enum SettingsTheme {\r\n    Dark = 'dark',\r\n        Light = 'light'\r\n}\r\n\r\nexport enum SettingsLanguage {\r\n    RU = 'RU',\r\n        EN = 'EN'\r\n}\r\n\r\nexport interface Settings {\r\n    theme: SettingsTheme;\r\n    sidenav: boolean;\r\n    sidenavButton: boolean;\r\n    language: SettingsLanguage;\r\n    batchFilter: boolean;\r\n}\r\n\r\nexport const setOfLanguages: Set < SettingsLanguage > = new Set([\r\n    SettingsLanguage.EN,\r\n    SettingsLanguage.RU,\r\n]);\r\n\r\nexport const defaultSettings: Settings = {\r\n    theme: SettingsTheme.Light,\r\n    batchFilter: false,\r\n    sidenav: true,\r\n    sidenavButton: true,\r\n    language: setOfLanguages.has(environment.language as SettingsLanguage) ?\r\n        (environment.language as SettingsLanguage) : SettingsLanguage.EN\r\n};","import { CommonModule } from '@angular/common';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AuthGuard } from '@app/guards/auth/auth.guard';\r\nimport { AccountsService } from '@app/services/accounts/accounts.service';\r\nimport { AuthenticationService } from '@app/services/authentication/authentication.service';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { AppDialogConfirmationComponent } from './components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { AppIndexComponent } from './components/app-index/app-index.component';\r\nimport { AppViewComponent } from './components/app-view/app-view.component';\r\nimport { BatchChangeNotificationComponent } from './components/batch-change-notification/batch-change-notification.component';\r\nimport { BillingComponent } from './components/billing/billing.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoremIndexComponent } from './components/lorem-index/lorem-index.component';\r\nimport { NavPilotComponent } from './components/nav-pilot/nav-pilot.component';\r\nimport { PilotComponent } from './components/pilot/pilot.component';\r\nimport { JwtInterceptor } from './jwt.interceptor';\r\nimport { SimpleNotificationsModule } from './modules/angular2-notifications/simple-notifications.module';\r\nimport { CopyRightModule } from './modules/copy-right/copy-right.module';\r\nimport { CtModule } from './modules/ct/ct.module';\r\nimport { MaterialAppModule } from './ngmaterial.module';\r\nimport { NotificationsInterceptor } from './notifications.interceptor';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http, './assets/i18n/');\r\n}\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        AppViewComponent,\r\n        AppIndexComponent,\r\n        PilotComponent,\r\n        NavPilotComponent,\r\n        LoginComponent,\r\n        BillingComponent,\r\n        BatchChangeNotificationComponent,\r\n        LoremIndexComponent,\r\n        AppDialogConfirmationComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MaterialAppModule,\r\n        CtModule,\r\n        CopyRightModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SimpleNotificationsModule.forRoot()\r\n    ],\r\n    entryComponents: [\r\n        AppDialogConfirmationComponent,\r\n    ],\r\n    providers: [\r\n        AuthGuard,\r\n        AuthenticationService,\r\n        AccountsService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: JwtInterceptor,\r\n            multi: true\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: NotificationsInterceptor,\r\n            multi: true\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData } from '@src/app/helpers/generateFormData';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { ExecContextResult } from '../source-codes/ExecContextResult';\r\nimport { ExecContextsResult } from '../source-codes/ExecContextsResult';\r\nimport { ExecContextStateResult } from '../source-codes/ExecContextStateResult';\r\nimport { SimpleExecContextAddingResult } from '../source-codes/SimpleExecContextAddingResult';\r\nimport { TaskExecInfo } from './TaskExecInfo';\r\n\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher/source-code/${s}`;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ExecContextService {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    execContexts(sourceCodeId: string, page: string): Observable<ExecContextsResult> {\r\n        return this.http.get<ExecContextsResult>(\r\n            url(`exec-contexts/${sourceCodeId}`),\r\n            { params: { page } }\r\n        );\r\n    }\r\n\r\n    execContextAddCommitUID(uid: string, variable: string): Observable<SimpleExecContextAddingResult> {\r\n        return this.http.post<SimpleExecContextAddingResult>(\r\n            url(`uid-exec-context-add-commit`),\r\n            generateFormData({ uid, variable })\r\n        );\r\n    }\r\n\r\n    execContextAddCommit(sourceCodeId: string, variable: string): Observable<ExecContextResult> {\r\n        return this.http.post<ExecContextResult>(\r\n            url(`exec-context-add-commit`),\r\n            generateFormData({ sourceCodeId, variable })\r\n        );\r\n    }\r\n\r\n    execContextEdit(sourceCodeId: string, execContextId: string): Observable<ExecContextResult> {\r\n        return this.http.get<ExecContextResult>(url(`exec-context/${sourceCodeId}/${execContextId}`));\r\n    }\r\n\r\n    execContextDeleteCommit(sourceCodeId: string, execContextId: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(\r\n            url(`exec-context-delete-commit/`),\r\n            generateFormData({ sourceCodeId, execContextId })\r\n        );\r\n    }\r\n\r\n    execContextTargetState(sourceCodeId: string, state: string, id: string): Observable<OperationStatusRest> {\r\n        return this.http.get<OperationStatusRest>(url(`exec-context-target-state/${sourceCodeId}/${state}/${id}`));\r\n\r\n    }\r\n\r\n    execContextsState(sourceCodeId: string, execContextId: string): Observable<ExecContextStateResult> {\r\n        return this.http.get<ExecContextStateResult>(url(`exec-context-state/${sourceCodeId}/${execContextId}`));\r\n    }\r\n\r\n\r\n\r\n    // @GetMapping(\"/exec-context-task-exec-info/{sourceCodeId}/{execContextId}/{taskId}\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA', 'MANAGER', 'OPERATOR')\")\r\n    // public ExecContextApiData.TaskExecInfo taskExecInfo(@PathVariable Long sourceCodeId, @PathVariable Long execContextId, @PathVariable Long taskId, Authentication authentication) {\r\n    //     DispatcherContext context = userContextService.getContext(authentication);\r\n    //     ExecContextApiData.TaskExecInfo execContextState = execContextTopLevelService.getTaskExecInfo(sourceCodeId, execContextId, taskId);\r\n    //     return execContextState;\r\n    // }\r\n    taskExecInfo(sourceCodeId: string, execContextId: string, taskId: string): Observable<TaskExecInfo> {\r\n        return this.http.get<TaskExecInfo>(url(`exec-context-task-exec-info/${sourceCodeId}/${execContextId}/${taskId}`));\r\n    }\r\n\r\n\r\n    downloadVariable(execContextId: string, variableId: string): Observable<HttpResponse<Blob>> {\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/octet-stream');\r\n        return this.http.get(url(`exec-context/${execContextId}/download-variable/${variableId}`), {\r\n            headers,\r\n            observe: 'response',\r\n            responseType: 'blob'\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AudioNotification } from '@src/app/services/audioNotification/audioNotification.service';\r\nimport { BatchExexStatusService } from '@src/app/services/batch/BatchExecStatusService';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'batch-change-notification',\r\n    templateUrl: './batch-change-notification.component.html',\r\n    styleUrls: ['./batch-change-notification.component.sass']\r\n})\r\nexport class BatchChangeNotificationComponent implements OnInit, OnDestroy {\r\n    isActive: boolean = false;\r\n    subs: Subscription[] = []\r\n\r\n    constructor(\r\n        private batchExexStatusService: BatchExexStatusService,\r\n        private audioNotification: AudioNotification,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.batchExexStatusService.getChanges.subscribe(result => {\r\n            if (result?.isFinished) {\r\n                this.audioNotification.play();\r\n                this.isActive = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subs.forEach(s => s.unsubscribe())\r\n    }\r\n    \r\n    hide() {\r\n        this.isActive = false;\r\n    }\r\n}\r\n","<ct-flex justify-content=\"space-between\" align-items=\"center\">\r\n    <mat-icon class=\"mat-icon\" style=\"transform: scale(1.25); user-select: none;\" aria-hidden=\"true\" *ngIf=\"isActive\" (click)=\"hide()\">check_circle_outline</mat-icon>\r\n</ct-flex>","import {DEFAULT_ICONS} from './default-icons.const';\r\nimport {Options} from '../interfaces/options.type';\r\nimport {NotificationAnimationType} from '../enums/notification-animation-type.enum';\r\n\r\nexport const DEFAULT_OPTIONS: Options = {\r\n  position: ['bottom', 'right'],\r\n  timeOut: 0,\r\n  showProgressBar: true,\r\n  pauseOnHover: true,\r\n  lastOnBottom: true,\r\n  clickToClose: true,\r\n  clickIconToClose: false,\r\n  maxLength: 0,\r\n  maxStack: 8,\r\n  preventDuplicates: false,\r\n  preventLastDuplicates: false,\r\n  theClass: '',\r\n  rtl: false,\r\n  animate: NotificationAnimationType.FromRight,\r\n  icons: DEFAULT_ICONS\r\n};\r\n","import { EventEmitter, Inject, Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DEFAULT_ICONS } from '../consts/default-icons.const';\r\nimport { NotificationType } from '../enums/notification-type.enum';\r\nimport { Icons } from '../interfaces/icons';\r\nimport { NotificationEvent } from '../interfaces/notification-event.type';\r\nimport { Notification } from '../interfaces/notification.type';\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n  constructor(\r\n    @Inject('options') public globalOptions: any\r\n  ) { }\r\n\r\n  emitter = new Subject<NotificationEvent>();\r\n  icons: Icons = DEFAULT_ICONS;\r\n\r\n  set(notification: Notification, to: boolean): Notification {\r\n    notification.id = notification.override && notification.override.id ?\r\n      notification.override.id :\r\n      Math.random().toString(36).substring(3);\r\n    notification.click = new EventEmitter<{}>();\r\n    notification.clickIcon = new EventEmitter<{}>();\r\n    notification.timeoutEnd = new EventEmitter<{}>();\r\n\r\n    this.emitter.next({ command: 'set', notification, add: to });\r\n    return notification;\r\n  }\r\n\r\n  success(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Success, icon: this.icons.success, override, context }, true);\r\n  }\r\n\r\n  error(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Error, icon: this.icons.error, override, context }, true);\r\n  }\r\n\r\n  alert(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Alert, icon: this.icons.alert, override, context }, true);\r\n  }\r\n\r\n  info(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Info, icon: this.icons.info, override, context }, true);\r\n  }\r\n\r\n  warn(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Warn, icon: this.icons.warn, override, context }, true);\r\n  }\r\n\r\n  bare(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Bare, icon: 'bare', override, context }, true);\r\n  }\r\n\r\n  // With type method\r\n  create(title: any = '', content: any = '', type = NotificationType.Success, override?: any, context?: any): Notification {\r\n    return this.set({ title, content, type, icon: (this.icons as any)[type], override, context }, true);\r\n  }\r\n\r\n  // HTML Notification method\r\n  html(html: any, type = NotificationType.Success, override?: any, icon = 'bare', context?: any): Notification {\r\n    return this.set({ html, type, icon: (this.icons as any)[icon], override, context }, true);\r\n  }\r\n\r\n  // Remove all notifications method\r\n  remove(id?: string): void {\r\n    if (id) {\r\n      this.emitter.next({ command: 'clean', id });\r\n    } else {\r\n      this.emitter.next({ command: 'cleanAll' });\r\n    }\r\n  }\r\n}\r\n","export function generateFormData(params: any): FormData {\r\n    const formData: FormData = new FormData();\r\n    for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            formData.append(key, params[key]);\r\n        }\r\n    }\r\n    return formData;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-content',\r\n  templateUrl: './ct-section-content.component.html',\r\n  styleUrls: ['./ct-section-content.component.scss']\r\n})\r\nexport class CtSectionContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>  ","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n        return true;\r\n\r\n    }\r\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from './services/authentication';\r\n\r\n@Injectable()\r\n\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\r\n        if (this.authenticationService.isAuth()) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: this.authenticationService.getToken(),\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { DefaultResponse } from './models/DefaultResponse';\r\nimport { OperationStatus } from './enums/OperationStatus';\r\nimport { NotificationsService } from './modules/angular2-notifications/services/notifications.service';\r\n\r\n@Injectable()\r\n\r\nexport class NotificationsInterceptor implements HttpInterceptor {\r\n\r\n    options = {\r\n        timeOut: 10000,\r\n        showProgressBar: true,\r\n        pauseOnHover: true,\r\n        clickToClose: false,\r\n    };\r\n\r\n    constructor(\r\n        private notificationsService: NotificationsService\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(req).pipe(\r\n            tap((event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse) {\r\n                    event = event.clone({\r\n                        body: this.modifyBody(event.body)\r\n                    });\r\n                }\r\n                return event;\r\n            }),\r\n            catchError((error: HttpErrorResponse) => {\r\n                if (error.status >= 400) {\r\n                    if (error.error) {\r\n                        const title = error.error.status ? error.error.status : error.status\r\n                        const content = error.error.message ? error.error.message : error.message\r\n                        this.notificationsService.error(title, content, {\r\n                            // timeOut: 10000,\r\n                            // showProgressBar: true,\r\n                            pauseOnHover: true,\r\n                            clickToClose: true,\r\n                        });\r\n                    }\r\n                }\r\n                if (error.status === 0) {\r\n                    const title = 'Server offline'\r\n                    const content = ''\r\n                    this.notificationsService.error(title, content, {\r\n                        // timeOut: 10000,\r\n                        // showProgressBar: true,\r\n                        pauseOnHover: true,\r\n                        clickToClose: true,\r\n                    });\r\n                }\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private modifyBody(response: DefaultResponse): void {\r\n        const status: OperationStatus = response.status;\r\n        const errors: string[] = response.errorMessages || [];\r\n        const infos: string[] = response.infoMessages || [];\r\n\r\n        errors.forEach((err: string) => {\r\n            this.notificationsService.error(status, err, {\r\n                // timeOut: 10000,\r\n                // showProgressBar: true,\r\n                pauseOnHover: true,\r\n                clickToClose: true,\r\n            });\r\n        });\r\n\r\n        infos.forEach((info: string) => {\r\n            if (status === OperationStatus.OK) {\r\n                this.notificationsService.success(status, info, {\r\n                    timeOut: 10000,\r\n                    showProgressBar: true,\r\n                    pauseOnHover: true,\r\n                    clickToClose: true,\r\n                });\r\n            } else {\r\n                this.notificationsService.info(status, info, {\r\n                    // timeOut: 10000,\r\n                    // showProgressBar: true,\r\n                    pauseOnHover: true,\r\n                    clickToClose: true,\r\n                });\r\n            }\r\n        });\r\n\r\n        if (errors.length === 0 && infos.length === 0 && status) {\r\n            this.notificationsService.success(status, null, {\r\n                timeOut: 10000,\r\n                showProgressBar: true,\r\n                pauseOnHover: true,\r\n                clickToClose: true,\r\n            });\r\n        }\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NotificationComponent } from './components/notification/notification.component';\r\nimport { SimpleNotificationsComponent } from './components/simple-notifications/simple-notifications.component';\r\nimport { DEFAULT_OPTIONS } from './consts/default-options.const';\r\nimport { Options } from './interfaces/options.type';\r\nimport { NotificationsService } from './services/notifications.service';\r\n\r\nexport const OPTIONS = new InjectionToken<Options>('options');\r\nexport function optionsFactory(options) {\r\n  return {\r\n    ...DEFAULT_OPTIONS,\r\n    ...options\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    SimpleNotificationsComponent,\r\n    NotificationComponent\r\n  ],\r\n  exports: [SimpleNotificationsComponent]\r\n})\r\nexport class SimpleNotificationsModule {\r\n  static forRoot(options: Options = {}): ModuleWithProviders<SimpleNotificationsModule> {\r\n    return {\r\n      ngModule: SimpleNotificationsModule,\r\n      providers: [\r\n        NotificationsService,\r\n        {\r\n          provide: OPTIONS,\r\n          useValue: options\r\n        },\r\n        {\r\n          provide: 'options',\r\n          useFactory: optionsFactory,\r\n          deps: [OPTIONS]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nexport interface QuestionData {\r\n    text: string;\r\n    params: any;\r\n}\r\n\r\nexport interface DialogData {\r\n    resolveTitle: string;\r\n    rejectTitle: string;\r\n    question ?(...data: any[]) : QuestionData | string;\r\n}\r\n\r\nexport interface ConfirmationDialogInterface {\r\n    readonly dialog: MatDialog;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'app-dialog-confirmation',\r\n    templateUrl: './app-dialog-confirmation.component.html',\r\n    styleUrls: ['./app-dialog-confirmation.component.scss']\r\n})\r\n\r\n\r\nexport class AppDialogConfirmationComponent {\r\n    constructor(\r\n        public dialogRef: MatDialogRef < AppDialogConfirmationComponent > ,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n    ) {\r\n        // console.log(data);\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close(0);\r\n    }\r\n\r\n    onYesClick(): void {\r\n        this.dialogRef.close(1);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * require MatDialog\r\n *\r\n * constructor(\r\n *     private dialog: MatDialog\r\n * ) {}\r\n *\r\n */\r\nexport function ConfirmationDialogMethod(dialogData: DialogData) {\r\n    return function fn(\r\n        target: object,\r\n        propertyName: string,\r\n        propertyDesciptor: PropertyDescriptor,\r\n    ): PropertyDescriptor {\r\n        const method: any = propertyDesciptor.value;\r\n        propertyDesciptor.value = function(...args: any[]) {\r\n\r\n            let questionData: QuestionData = {\r\n                text: '',\r\n                params: false\r\n            };\r\n\r\n            if (typeof dialogData.question(...args) === 'string') {\r\n                questionData.text = dialogData.question(...args) as string;\r\n            } else {\r\n                questionData = dialogData.question(...args) as QuestionData;\r\n            }\r\n\r\n            if (!this.dialog) { dialogError(); }\r\n            if (questionData.params && !this.translate) { translateError(); }\r\n\r\n            if (this.translate) {\r\n                forkJoin(\r\n                        this.translate.get(questionData.text, questionData.params),\r\n                        this.translate.get(dialogData.resolveTitle),\r\n                        this.translate.get(dialogData.rejectTitle)\r\n                    )\r\n                    .subscribe(\r\n                        (response: any) => {\r\n                            this.dialog.open(AppDialogConfirmationComponent, {\r\n                                    width: '500px',\r\n                                    data: {\r\n                                        question: response[0],\r\n                                        resolveTitle: response[1],\r\n                                        rejectTitle: response[2]\r\n                                    }\r\n                                })\r\n                                .afterClosed()\r\n                                .subscribe((result: boolean) => {\r\n                                    if (result) {\r\n                                        method.apply(this, args);\r\n                                    }\r\n                                });\r\n                        }\r\n                    );\r\n            } else {\r\n                this.dialog.open(AppDialogConfirmationComponent, {\r\n                        width: '500px',\r\n                        data: {\r\n                            question: questionData.text,\r\n                            resolveTitle: dialogData.resolveTitle,\r\n                            rejectTitle: dialogData.rejectTitle\r\n                        }\r\n                    })\r\n                    .afterClosed()\r\n                    .subscribe((result: boolean) => {\r\n                        if (result) {\r\n                            method.apply(this, args);\r\n                        }\r\n                    });\r\n            }\r\n        };\r\n\r\n        return propertyDesciptor;\r\n    };\r\n}\r\n\r\nfunction dialogError() {\r\n    throw new Error(`\r\ncomponent require MatDialog\r\n\r\nimport { MatDialog } from '@angular/material';\r\n...\r\nconstructor(\r\n    ...\r\n    private dialog: MatDialog\r\n    ...\r\n) {}\r\n                `);\r\n}\r\n\r\nfunction translateError() {\r\n    throw new Error(`\r\ncomponent require TranslateService\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n...\r\nconstructor(\r\n    ...\r\n    private translate: TranslateService\r\n    ...\r\n) {}\r\n                `);\r\n}","<div class=\"mat-dialog-content\">{{data.question}}</div><br />\r\n<div class=\"mat-dialog-actions\">\r\n  <div class=\"mat-dialog-action\">\r\n    <button mat-stroked-button=\"mat-stroked-button\" (click)=\"onNoClick()\">{{data.rejectTitle}}</button>\r\n  </div>\r\n  <div class=\"mat-dialog-action\">\r\n    <button mat-flat-button=\"mat-flat-button\" color=\"warn\" (click)=\"onYesClick()\">{{data.resolveTitle}}</button>\r\n  </div>\r\n</div> ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, ExtraOptions } from '@angular/router';\r\nimport { AuthGuard } from '@app/guards/auth/auth.guard';\r\nimport { BillingComponent } from './components/billing/billing.component';\r\nimport { PilotComponent } from './components/pilot/pilot.component';\r\nimport { environment } from '@src/environments/environment';\r\nimport { AppIndexComponent } from './components/app-index/app-index.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AppIndexComponent,\r\n    },\r\n    {\r\n        path: 'dispatcher',\r\n        canActivate: [AuthGuard],\r\n        loadChildren: () => import('src/app/modules/dispatcher/dispatcher.module').then(m => m.DispatcherModule),\r\n        data: { sidenavExist: true }\r\n    },\r\n    {\r\n        path: 'billing',\r\n        canActivate: [AuthGuard],\r\n        component: BillingComponent,\r\n    },\r\n    {\r\n        path: 'pilot',\r\n        component: PilotComponent,\r\n    },\r\n    {\r\n        path: 'ai',\r\n        loadChildren: () => import('src/app/modules/ai/ai.module').then(m => m.AiModule),\r\n        data: { sidenavExist: true }\r\n    },\r\n\r\n    {\r\n        path: 'batch',\r\n        loadChildren: () => import('src/app/modules/batch/batch.module').then(m => m.BatchModule),\r\n    },\r\n    {\r\n        path: 'about',\r\n        loadChildren: () => import('src/app/modules/about/about.module').then(m => m.AboutModule),\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\nconst extraOptions: ExtraOptions = {\r\n    useHash: environment.hashLocationStrategy,\r\n    onSameUrlNavigation: 'reload',\r\n    relativeLinkResolution: 'legacy'\r\n};\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, extraOptions)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-caption',\r\n  templateUrl: './ct-section-caption.component.html',\r\n  styleUrls: ['./ct-section-caption.component.scss']\r\n})\r\nexport class CtSectionCaptionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'ct-wrap-block',\r\n    templateUrl: './ct-wrap-block.component.html',\r\n    styleUrls: ['./ct-wrap-block.component.scss']\r\n})\r\nexport class CtWrapBlockComponent implements OnInit, OnDestroy {\r\n\r\n    state = {\r\n        wait: false\r\n    };\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    ngOnDestroy() {\r\n        this.changeDetector.detach();\r\n    }\r\n\r\n\r\n    wait() {\r\n        this.state.wait = true;\r\n        // tslint:disable-next-line: no-string-literal\r\n        if (!this.changeDetector['destroyed']) {\r\n            this.changeDetector.detectChanges();\r\n        }\r\n    }\r\n    show() {\r\n        this.state.wait = false;\r\n        // tslint:disable-next-line: no-string-literal\r\n        if (!this.changeDetector['destroyed']) {\r\n            this.changeDetector.detectChanges();\r\n        }\r\n    }\r\n}","\r\n<div class=\"ct-wrap-block\" [class.ct-wrap-block--wait]=\"state.wait\">\r\n  <div class=\"ct-wrap-block__body\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <div class=\"ct-wrap-block__wait\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n</div>","export * from './Role';\r\nexport * from './User';\r\nexport * from './UserRoleInterface';\r\nexport * from './authentication.service';\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AudioNotification {\r\n    track: HTMLAudioElement = new Audio();\r\n    constructor() {\r\n        this.track.src = 'assets/audio/splash_1_1_1.mp3';\r\n        this.track.volume = 0.75;\r\n        this.track.load();\r\n    }\r\n    play() {\r\n        this.track.play();\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-index',\r\n    templateUrl: './app-index.component.html',\r\n    styleUrls: ['./app-index.component.scss']\r\n})\r\nexport class AppIndexComponent { }","<ct-content>\r\n    <ct-cols>\r\n        <ct-col size=\"1\"></ct-col>\r\n        <ct-col size=\"10\">\r\n            <ct-section>\r\n                <ct-section-body>\r\n                    <ct-section-body-row>\r\n                        <ct-env-msg-outer propertyName=\"brandingMsgIndex\"></ct-env-msg-outer>\r\n                    </ct-section-body-row>\r\n                </ct-section-body>\r\n            </ct-section>\r\n        </ct-col>\r\n    </ct-cols>\r\n</ct-content>\r\n<copy-right></copy-right>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'copy-right',\r\n  templateUrl: './copy-right.component.html',\r\n  styleUrls: ['./copy-right.component.scss']\r\n})\r\nexport class CopyRightComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","Powered by Metaheuristic","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Authority } from './Authority';\r\nimport { Role } from './Role';\r\nimport { User } from './User';\r\n\r\nexport class AuthenticationServiceEventLogin { }\r\nexport class AuthenticationServiceEventLogout { }\r\nexport class AuthenticationServiceEventChange {\r\n    user: User;\r\n    constructor(user: User) { this.user = JSON.parse(JSON.stringify(user)); }\r\n}\r\nexport type AuthenticationServiceEvent = AuthenticationServiceEventLogin | AuthenticationServiceEventLogout | AuthenticationServiceEventChange;\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n    private localStorageName: string = 'authenticationService';\r\n    private userLifeTimeExpiredName: string = '__last';\r\n    user: User;\r\n    events: BehaviorSubject<AuthenticationServiceEvent> = new BehaviorSubject(null);\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private router: Router,\r\n    ) {\r\n        this.user = this.getLocalStorageData();\r\n        this.events.next(new AuthenticationServiceEventChange(this.user));\r\n\r\n    }\r\n\r\n    private updateData(user: User): void {\r\n        this.user = user;\r\n        this.setLocalStorageData(user);\r\n        this.events.next(new AuthenticationServiceEventChange(user));\r\n    }\r\n\r\n\r\n    convertRolesToString(roles?: Role[]): string {\r\n        return roles.map(role => {\r\n            const s: string[] = role.replace('ROLE_', '')\r\n                .toLowerCase()\r\n                .split('_')\r\n                .map(v => {\r\n                    const ss: string[] = [...v];\r\n                    ss[0] = ss[0].toUpperCase();\r\n                    return ss.join('');\r\n                });\r\n            return s.join('');\r\n        }).join(', ');\r\n    }\r\n\r\n    getData(): Observable<User> {\r\n        return new Observable<User>(subscriber => {\r\n            subscriber.next(this.getLocalStorageData() as User);\r\n            subscriber.complete();\r\n        });\r\n    }\r\n\r\n    isAuth(): boolean {\r\n        if (this.user && this.user.token) {\r\n            if (this.isUserLifeTimeExpired()) {\r\n                this.logout();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getUserRole(): Set<Role> {\r\n        const set: Set<Role> = new Set();\r\n        if (this.user && this.user.authorities) {\r\n            this.user.authorities.forEach((authority: Authority) => {\r\n                set.add(authority.authority);\r\n            });\r\n        }\r\n        return set;\r\n    }\r\n\r\n    getToken(): string {\r\n        return this.user?.token;\r\n    }\r\n\r\n    login(username: string, password: string): void {\r\n        const url: string = environment.baseUrl + 'user';\r\n        const token: string = this.generateUserToken(username, password);\r\n        const headers: HttpHeaders = new HttpHeaders({ Authorization: token });\r\n        this.http\r\n            .post(url, { username, password }, { headers })\r\n            .subscribe((user: User) => {\r\n                if (user.username) {\r\n                    this.events.next(new AuthenticationServiceEventLogin());\r\n                    this.updateData(Object.assign({}, user, { token }));\r\n                    this.aboutUser().log();\r\n                }\r\n            });\r\n    }\r\n\r\n    private generateUserToken(username: string, password: string): string {\r\n        return 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    private getLocalStorageData(): User {\r\n        return JSON.parse(localStorage.getItem(this.localStorageName)) as User;\r\n    }\r\n\r\n    private setLocalStorageData(content: User): void {\r\n        localStorage.setItem(this.localStorageName, JSON.stringify(content));\r\n    }\r\n\r\n\r\n    isUserLifeTimeExpired(): boolean {\r\n        if (environment.userLifeTime) {\r\n            const userLifeTime: number = environment.userLifeTime;\r\n            const last: number = parseInt(localStorage.getItem(this.userLifeTimeExpiredName), 10) || 0;\r\n            const now: number = Date.now();\r\n            const passedTime: number = now - last;\r\n\r\n            if (last === 0) {\r\n                localStorage.setItem(this.userLifeTimeExpiredName, now.toString());\r\n                return false;\r\n            }\r\n\r\n            if (passedTime > userLifeTime) {\r\n                localStorage.removeItem(this.userLifeTimeExpiredName);\r\n                return true;\r\n            } else {\r\n                localStorage.setItem(this.userLifeTimeExpiredName, now.toString());\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    logout(): Observable<null> {\r\n        return new Observable(subscriber => {\r\n            localStorage.removeItem(this.localStorageName);\r\n            localStorage.removeItem(this.userLifeTimeExpiredName);\r\n            sessionStorage.clear();\r\n            this.events.next(new AuthenticationServiceEventLogout());\r\n            this.user = null;\r\n            this.router.navigate(['/']);\r\n            subscriber.next();\r\n            subscriber.complete();\r\n        });\r\n    }\r\n\r\n    private aboutUser(user?: User): { aboutStr: string, log: () => void } {\r\n        user = user || this.user;\r\n        const usernameAsString: string = user.username ? user.username : '';\r\n        const rolesAsString: string = user.authorities ?\r\n            this.convertRolesToString(user.authorities.map(v => v.authority)) : '';\r\n        const aboutStr: string = `${usernameAsString}: ${rolesAsString}`;\r\n        const log = () => {\r\n            if (user && user.username) {\r\n                console.log('%c%s', 'color:blue; font-size:125%', aboutStr);\r\n            }\r\n        };\r\n        return { aboutStr, log };\r\n    }\r\n\r\n    isRoleManager(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MANAGER); }\r\n    isRoleOperator(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_OPERATOR); }\r\n    isRoleData(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_DATA); }\r\n\r\n    isRoleServerRestAccess(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_SERVER_REST_ACCESS); }\r\n    isRoleAssetRestAccess(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_ASSET_REST_ACCESS); }\r\n    isRoleBilling(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_BILLING); }\r\n\r\n    isRoleMasterAdmin(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_ADMIN); }\r\n    isRoleMasterOperator(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_OPERATOR); }\r\n    isRoleMasterSupport(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_SUPPORT); }\r\n    isRoleMasterAssetManager(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_ASSET_MANAGER); }\r\n\r\n    isRoleAdmin(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_ADMIN); }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { OperationStatusRest } from '../../models/OperationStatusRest';\r\nimport { AccountResult } from './AccountResult';\r\nimport { AccountsResult } from './AccountsResult';\r\nimport { NewAccount } from './NewAccount';\r\n\r\nconst url = (urlString: string): string => `${environment.baseUrl}dispatcher/account/${urlString}`;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountsService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    accounts(page: string): Observable<AccountsResult> {\r\n        return this.http.get<AccountsResult>(url(`accounts`), { params: { page } });\r\n    }\r\n\r\n    addFormCommit(account: NewAccount): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-add-commit`), account);\r\n    }\r\n\r\n    getAccount(id: string): Observable<AccountResult> {\r\n        return this.http.get<AccountResult>(url(`account/${id}`));\r\n    }\r\n\r\n    editFormCommit(id: string, publicName: string, enabled: boolean): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-edit-commit`), formData({ id, publicName, enabled }));\r\n    }\r\n\r\n    roleFormCommit(accountId: string, roles: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-role-commit`), formData({ accountId, roles }));\r\n    }\r\n\r\n    passwordEditFormCommit(id: string, password: string, password2: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-password-edit-commit`), formData({ id, password, password2 }));\r\n    }\r\n}\r\n","export enum OperationStatus {\r\n    OK = 'OK',\r\n    ERROR = 'ERROR'\r\n}","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\n\r\nexport class MaterialAppModule {}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CopyRightComponent } from './copy-right/copy-right.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [CopyRightComponent],\r\n    exports: [CopyRightComponent]\r\n})\r\n\r\nexport class CopyRightModule {}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-alert',\r\n  templateUrl: './ct-alert.component.html',\r\n  styleUrls: ['./ct-alert.component.scss']\r\n})\r\nexport class CtAlertComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.isSslRequired) {\r\n    if (window.location.protocol === 'http:') {\r\n        window.location.href = window.location.href.replace('http', 'https');\r\n    }\r\n}\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}