{"version":3,"sources":["./src/app/modules/functions/add-function/add-function.component.ts","./src/app/modules/functions/add-function/add-function.component.html","./src/app/modules/functions/functions.module.ts","./src/app/services/functions/functions.service.ts","./src/app/modules/functions/functions/functions.component.ts","./src/app/modules/functions/functions/functions.component.html"],"names":[],"mappings":"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","file":"src-app-modules-functions-functions-module-es2015.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OperationStatus } from '@src/app/enums/OperationStatus';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { FuncrionsService } from '@src/app/services/functions/functions.service';\r\nimport { CtFileUploadComponent } from '../../ct/ct-file-upload/ct-file-upload.component';\r\n\r\n@Component({\r\n    selector: 'add-function',\r\n    templateUrl: './add-function.component.html',\r\n    styleUrls: ['./add-function.component.scss']\r\n})\r\n\r\nexport class AddFunctionComponent {\r\n\r\n    response: OperationStatusRest;\r\n\r\n    @ViewChild('fileUpload', { static: true }) fileUpload: CtFileUploadComponent;\r\n\r\n    constructor(\r\n        private funcrionsService: FuncrionsService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    cancel(): void {\r\n        this.router.navigate(['/dispatcher', 'functions']);\r\n    }\r\n\r\n    upload(): void {\r\n        this.funcrionsService\r\n            .uploadFunction(this.fileUpload.fileInput.nativeElement.files[0])\r\n            .subscribe(\r\n                (response) => {\r\n                    this.response = response;\r\n                    if (response.status === OperationStatus.OK) {\r\n                        this.cancel();\r\n                    }\r\n                }\r\n            );\r\n    }\r\n}","<ct-cols>\r\n    <ct-col size=\"6\">\r\n        <ct-section>\r\n            <ct-section-header>\r\n                <ct-section-header-row>\r\n                    <ct-heading>Add Function</ct-heading>\r\n                </ct-section-header-row>\r\n            </ct-section-header>\r\n            <ct-section-body>\r\n                <ct-section-body-row>\r\n                    <ct-file-upload #fileUpload></ct-file-upload>\r\n                </ct-section-body-row>\r\n            </ct-section-body>\r\n            <ct-section-footer>\r\n                <ct-section-footer-row>\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                        <ct-flex-item>\r\n                            <button mat-stroked-button=\"mat-stroked-button\" (click)=\"cancel()\">Cancel </button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" (click)=\"upload()\" color=\"primary\"\r\n                                [disabled]=\"!fileUpload?.fileInput?.nativeElement?.files?.length\">Upload\r\n                                function</button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-footer-row>\r\n            </ct-section-footer>\r\n        </ct-section>\r\n    </ct-col>\r\n    <ct-col size=\"6\" *ngIf=\"response\">\r\n        <ct-rest-status [content]=\"response\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AddFunctionComponent } from './add-function/add-function.component';\r\nimport { FunctionsComponent } from './functions/functions.component';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { CtModule } from '../ct/ct.module';\r\n\r\n\r\nexport const FunctionsRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: FunctionsComponent,\r\n    }, {\r\n        path: 'add',\r\n        component: AddFunctionComponent,\r\n        data: {\r\n            backConfig: ['../']\r\n        }\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(FunctionsRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class FunctionsRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FunctionsRoutingModule,\r\n        CtModule,\r\n        MaterialAppModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateModule.forChild({})\r\n    ],\r\n    declarations: [\r\n        AddFunctionComponent,\r\n        FunctionsComponent\r\n    ]\r\n})\r\nexport class FunctionsModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { FunctionsResult } from './FunctionsResult';\r\n\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher/function/${s}`;\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FuncrionsService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    // @GetMapping(\"/functions\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA', 'MANAGER')\")\r\n    // public FunctionData.FunctionsResult getFunctions() {\r\n    //     return functionTopLevelService.getFunctions();\r\n    // }\r\n    getFunctions(page: string): Observable<FunctionsResult> {\r\n        return this.http.get<FunctionsResult>(url('functions'), { params: { page } });\r\n    }\r\n\r\n\r\n    // @GetMapping(\"/function-delete/{id}\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA')\")\r\n    // public OperationStatusRest deleteCommit(@PathVariable Long id) {\r\n    //     return functionTopLevelService.deleteFunctionById(id);\r\n    // }\r\n    deleteCommit(id: string): Observable<OperationStatusRest> {\r\n        return this.http.get<OperationStatusRest>(url(`function-delete/${id}`));\r\n    }\r\n\r\n\r\n    // @PostMapping(value = \"/function-upload-from-file\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA')\")\r\n    // public OperationStatusRest uploadFunction(final MultipartFile file) {\r\n    //     return functionTopLevelService.uploadFunction(file);\r\n    // }\r\n    uploadFunction(file: File): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url('function-upload-from-file'), formData({ file }));\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmationDialogMethod } from '@app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { DispatcherAssetModeService } from '@src/app/services/dispatcher-asset-mode/dispatcher-asset-mode.service';\r\nimport { FunctionEntity } from '@src/app/services/functions/FunctionEntity';\r\nimport { FuncrionsService } from '@src/app/services/functions/functions.service';\r\nimport { FunctionsResult } from '@src/app/services/functions/FunctionsResult';\r\n\r\n@Component({\r\n    selector: \"functions\",\r\n    templateUrl: './functions.component.html',\r\n    styleUrls: ['./functions.component.scss'],\r\n})\r\nexport class FunctionsComponent extends UIStateComponent implements OnInit {\r\n    functionsResult: FunctionsResult;\r\n    dataSource = new MatTableDataSource<FunctionEntity>([]);\r\n    columnsToDisplay: string[] = ['code', 'type', 'params', 'bts'];\r\n    deletedRows: FunctionEntity[] = [];\r\n    showParams: boolean = false;\r\n\r\n    constructor(\r\n        private functionService: FuncrionsService,\r\n        public dispatcherAssetModeService: DispatcherAssetModeService,\r\n        readonly dialog: MatDialog,\r\n        readonly authenticationService: AuthenticationService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.updateTable(0);\r\n    }\r\n\r\n    updateTable(page: number) {\r\n        this.setIsLoadingStart();\r\n        this.functionService\r\n            .getFunctions(page.toString())\r\n            .subscribe({\r\n                next: functionsResult => {\r\n                    this.functionsResult = functionsResult;\r\n                    this.dataSource = new MatTableDataSource(functionsResult.functions);\r\n                },\r\n                complete: () => {\r\n                    this.setIsLoadingEnd();\r\n                }\r\n            });\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (functionEntity: FunctionEntity): string =>\r\n            `Do you want to delete Function\\xa0#${functionEntity.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete',\r\n    })\r\n    delete(functionEntity: FunctionEntity) {\r\n        this.deletedRows.push(functionEntity);\r\n        this.functionService.deleteCommit(functionEntity.id.toString()).subscribe();\r\n    }\r\n\r\n    // INFO: functionsResult не содержит pageable\r\n    // INFO: листание\r\n    nextPage() {\r\n        // this.updateTable(this...items.number + 1);\r\n    }\r\n\r\n    prevPage() {\r\n        // this.updateTable(this...items.number - 1);\r\n    }\r\n}\r\n","<ct-section *ngIf=\"functionsResult\">\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-flex justify-content=\"space-between\">\r\n                <ct-flex-item>\r\n                    <ct-heading>Functions</ct-heading>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <ct-flex justify-content=\"flex-end\" align-items=\"center\" gap=\"16px\">\r\n                        <ct-flex-item>\r\n                            <mat-slide-toggle [(ngModel)]=\"showParams\">Show Params</mat-slide-toggle>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n                            <ng-container *ngTemplateOutlet=\"addButtonTemplate\"></ng-container>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-header-row>\r\n        <ct-section-header-row *ngIf=\"dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n            <ct-alert theme=\"info\">Upload and deletion of functions are disabled, assetMode is 'replicated'.</ct-alert>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ng-container *ngTemplateOutlet=\"MainTableTemplate\"></ng-container>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"space-between\">\r\n                <ct-flex-item>\r\n                    <!-- <ct-table-pagination [pageableDefault]=\"functionsResult.items\" [globalDisable]=\"false\"\r\n                        (next)=\"nextPage()\" (prev)=\"prevPage()\"></ct-table-pagination> -->\r\n                </ct-flex-item>\r\n                <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n                    <ng-container *ngTemplateOutlet=\"addButtonTemplate\"></ng-container>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>\r\n\r\n\r\n\r\n<ng-template #MainTableTemplate>\r\n    <ct-table [isWaiting]=\"isLoading\">\r\n        <table class=\"mat-table\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\r\n            <ng-container matColumnDef=\"code\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    Code\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let el\">{{ el.code }}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"type\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    Type\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let el\">{{ el.type }}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"params\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    Params\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let el\">\r\n                    <div [hidden]=\"!showParams\">\r\n                        <ct-pre>{{ el.params }}</ct-pre>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"bts\">\r\n                <th mat-header-cell *matHeaderCellDef></th>\r\n                <td mat-cell *matCellDef=\"let el\">\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\"\r\n                        *ngIf=\"!dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button color=\"warn\" size=\"forTableRow\" (click)=\"delete(el)\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay\"\r\n                [class.deleted-table-row]=\"deletedRows.includes(row)\"></tr>\r\n        </table>\r\n    </ct-table>\r\n</ng-template>\r\n\r\n\r\n\r\n<ng-template #addButtonTemplate>\r\n    <a routerLink=\"/dispatcher/functions/add\">\r\n        <button mat-flat-button color=\"primary\"> Add Function </button>\r\n    </a>\r\n</ng-template>"],"sourceRoot":"webpack:///"}