{"version":3,"sources":["webpack:///src/app/modules/processors/processors.module.ts","webpack:///src/app/services/processors/processors.service.ts","webpack:///src/app/modules/processors/processors/processors.component.html","webpack:///src/app/modules/processors/processors/processors.component.ts","webpack:///src/app/modules/processors/edit-processor/edit-processor.component.ts","webpack:///src/app/modules/processors/edit-processor/edit-processor.component.html"],"names":["ProcessorsRoutes","path","component","data","backConfig","ProcessorsRoutingModule","forChild","ProcessorsModule","url","s","baseUrl","ProcessorsService","http","page","get","params","id","station","post","processorIds","join","$event","stopPropagation","selection","ProcessorsComponent","dialog","processorsService","authenticationService","showStatusOfProcessor","dataSource","columnsToDisplay","secondColumnsToDisplay","updateTable","isLoading","init","toString","subscribe","processorResult","items","content","length","filterValue","filter","trim","toLowerCase","selected","isAllSelected","clear","forEach","row","select","number","processor","deleteProcessorCommit","processProcessorBulkDeleteCommit","map","v","question","rejectTitle","resolveTitle","EditProcessorComponent","route","router","getProcessor","snapshot","paramMap","response","processorResponse","formCommit","errorMessages","back","navigate"],"mappings":"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","file":"src-app-modules-processors-processors-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { EditProcessorComponent } from './edit-processor/edit-processor.component';\r\nimport { ProcessorsComponent } from './processors/processors.component';\r\nimport { CtModule } from '../ct/ct.module';\r\n\r\n\r\nexport const ProcessorsRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProcessorsComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: EditProcessorComponent,\r\n        data: {\r\n            backConfig: ['../', '../']\r\n        }\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(ProcessorsRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProcessorsRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ProcessorsRoutingModule,\r\n        CtModule,\r\n        MaterialAppModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateModule.forChild({})\r\n    ],\r\n    declarations: [\r\n        ProcessorsComponent,\r\n        EditProcessorComponent\r\n    ]\r\n})\r\nexport class ProcessorsModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Processor } from './Processor';\r\nimport { ProcessorResult } from './ProcessorResult';\r\nimport { ProcessorsResult } from './ProcessorsResult';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { ProcessorBulkDeleteCommitResult } from './ProcessorBulkDeleteCommitResult';\r\n\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher${s}`;\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class ProcessorsService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    init(page: string): Observable<ProcessorsResult> {\r\n        return this.http.get<ProcessorsResult>(url(`/processors`), { params: { page } });\r\n    }\r\n\r\n    getProcessor(id: string): Observable<ProcessorResult> {\r\n        return this.http.get<ProcessorResult>(url(`/processor/${id}`));\r\n    }\r\n\r\n    formCommit(station: Processor): Observable<ProcessorResult> {\r\n        return this.http.post<ProcessorResult>(url(`/processor-form-commit/`), station);\r\n    }\r\n\r\n    deleteProcessorCommit(id: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`/processor-delete-commit`), formData({ id }));\r\n    }\r\n\r\n\r\n    // @PostMapping(\"/processor-bulk-delete-commit\")\r\n    // @PreAuthorize(\"hasAnyRole('MASTER_OPERATOR')\")\r\n    // public ProcessorData.BulkOperations  processProcessorBulkDeleteCommit(String processorIds) {\r\n    //     ProcessorData.BulkOperations  r = processorTopLevelService.processProcessorBulkDeleteCommit(processorIds);\r\n    //     return r;\r\n    // }\r\n    processProcessorBulkDeleteCommit(processorIds: string[]): Observable<ProcessorBulkDeleteCommitResult> {\r\n        return this.http.post<ProcessorBulkDeleteCommitResult>(url('/processor-bulk-delete-commit'), formData({\r\n            processorIds: processorIds.join()\r\n        }))\r\n    }\r\n\r\n}","<ct-section *ngIf=\"processorResult\">\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-flex justify-content=\"space-between\" align-items=\"center\">\r\n                <ct-flex-item>\r\n                    <ct-heading>Processors</ct-heading>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <mat-slide-toggle [(ngModel)]=\"showStatusOfProcessor\">\r\n                        Show current status of processor\r\n                    </mat-slide-toggle>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-table [isWaiting]=\"isLoading\">\r\n                <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows=\"multiTemplateDataRows\">\r\n                    <ng-container matColumnDef=\"check\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            <mat-checkbox \r\n                                color=\"warn\"\r\n                                (change)=\"$event ? masterToggle() : null\" \r\n                                [checked]=\"selection.hasValue() && isAllSelected()\" \r\n                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n                            </mat-checkbox>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <mat-checkbox \r\n                                color=\"warn\"\r\n                                (click)=\"$event.stopPropagation()\" \r\n                                (change)=\"$event ? selection.toggle(el) : null\" \r\n                                [checked]=\"selection.isSelected(el)\">\r\n                            </mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"id\">\r\n                        <th mat-header-cell *matHeaderCellDef>Id</th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.processor.id}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"ip\">\r\n                        <th mat-header-cell *matHeaderCellDef>IP Address</th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <div>{{el.ip || '—'}}</div>\r\n                            <div>{{el.host || '—'}}</div>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"description\">\r\n                        <th mat-header-cell *matHeaderCellDef>Description</th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.processor.description || '—'}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"empty\">\r\n                        <td mat-cell *matCellDef=\"let el\"> </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"env\">\r\n                        <td mat-cell *matCellDef=\"let el\" [attr.colspan]=\"columnsToDisplay.length - 1\">\r\n                            <b>Status of Processor:</b>\r\n                            <ct-pre>{{el.processor.status || '—'}} </ct-pre>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"reason\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            <div>Is active?</div>\r\n                            <div>problems with functions?</div>\r\n                            <div>Is blacklisted?</div>\r\n                            <div>Reason</div>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <div [class]=\"el.active ? 'alert-success' : 'alert-danger'\"> \r\n                                {{el.active ? 'Yes' : 'No'}}\r\n                            </div>\r\n                            <div [class]=\"el.functionProblem ? 'alert-danger' : 'alert-success'\">\r\n                                {{el.functionProblem ? 'Yes' : 'No'}} </div>\r\n                            <div [class]=\"el.blacklisted ? 'alert-danger' : 'alert-success'\">\r\n                                {{el.blacklisted ? 'Yes' : 'No'}} </div>\r\n                            <div class=\"alert-danger\"> \r\n                                {{el.blacklistReason}}\r\n                            </div>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"lastSeen\">\r\n                        <th mat-header-cell *matHeaderCellDef>Last Seen </th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.lastSeen | date:'MMM d, y, hh:mm'}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"bts\">\r\n                        <th mat-header-cell *matHeaderCellDef> </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <ct-flex justify-content=\"flex-end\" gap=\"unit(1)\">\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button\r\n                                        size=\"forTableRow\" color=\"primary\" \r\n                                        [routerLink]=\"['/dispatcher/processors',el.processor.id,'edit']\">\r\n                                            Edit\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button\r\n                                        size=\"forTableRow\" \r\n                                        color=\"warn\" \r\n                                        (click)=\"delete(el)\">\r\n                                        <mat-icon>delete</mat-icon>\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                            </ct-flex>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n                    <tr class=\"first-row\" mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n                    <tr class=\"second-row\" mat-row *matRowDef=\"let row; columns: secondColumnsToDisplay;\" [hidden]=\"!showStatusOfProcessor\"></tr>\r\n                </table>\r\n            </ct-table>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <button mat-flat-button \r\n                color=\"warn\" \r\n                (click)=\"deleteMany()\" \r\n                [disabled]=\"isLoading || !selection.selected.length\" \r\n                title=\"Delete Checked\">\r\n                    Delete Checked\r\n            </button>\r\n        </ct-section-footer-row>\r\n        <ct-section-footer-row>\r\n            <ct-flex-item>\r\n                <ct-table-pagination \r\n                    (prev)=\"prevPage()\" \r\n                    (next)=\"nextPage()\" \r\n                    [pageableDefault]=\"processorResult.items\">\r\n                </ct-table-pagination>\r\n            </ct-flex-item>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, } from '@angular/material/dialog';\r\nimport { ConfirmationDialogMethod, ConfirmationDialogInterface } from '@app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { ProcessorsService } from '@src/app/services/processors/processors.service';\r\nimport { ProcessorsResult } from '@src/app/services/processors/ProcessorsResult';\r\nimport { ProcessorStatus } from '@src/app/services/processors/ProcessorStatus';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\n\r\n\r\n@Component({\r\n    selector: 'processors',\r\n    templateUrl: './processors.component.html',\r\n    styleUrls: ['./processors.component.scss']\r\n})\r\n\r\nexport class ProcessorsComponent extends UIStateComponent implements OnInit, ConfirmationDialogInterface {\r\n    processorResult: ProcessorsResult;\r\n    showStatusOfProcessor: boolean = false;\r\n    dataSource: MatTableDataSource<ProcessorStatus> = new MatTableDataSource<ProcessorStatus>([]);\r\n    selection: SelectionModel<ProcessorStatus> = new SelectionModel<ProcessorStatus>(true, []);\r\n    columnsToDisplay: string[] = ['check', 'id', 'ip', 'description', 'reason', 'lastSeen', 'bts'];\r\n    secondColumnsToDisplay: string[] = ['empty', 'env'];\r\n\r\n    constructor(\r\n        readonly dialog: MatDialog,\r\n        private processorsService: ProcessorsService,\r\n        readonly authenticationService: AuthenticationService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.updateTable(0);\r\n    }\r\n\r\n    updateTable(page: number): void {\r\n        this.isLoading = true;\r\n        this.processorsService\r\n            .init(page.toString())\r\n            .subscribe(processorResult => {\r\n                this.processorResult = processorResult;\r\n                const items: ProcessorStatus[] = processorResult.items.content || [];\r\n                if (items.length) {\r\n                    this.dataSource = new MatTableDataSource(items);\r\n                }\r\n                this.isLoading = false;\r\n            });\r\n    }\r\n\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    isAllSelected(): boolean {\r\n        return this.selection.selected.length === this.dataSource.data.length;\r\n    }\r\n\r\n    masterToggle(): void {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.dataSource.data.forEach(row => this.selection.select(row));\r\n    }\r\n\r\n    nextPage(): void {\r\n        this.updateTable(this.processorResult.items.number + 1);\r\n    }\r\n\r\n    prevPage(): void {\r\n        this.updateTable(this.processorResult.items.number - 1);\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (processor: ProcessorStatus): string =>\r\n            `Do you want to delete Processor\\xa0#${processor.processor.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    delete(processor: ProcessorStatus): void {\r\n        this.processorsService\r\n            .deleteProcessorCommit(processor.processor.id.toString())\r\n            .subscribe(() => this.updateTable(this.processorResult.items.number));\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (): string => `Do you want to delete Processors`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    deleteMany(): void {\r\n        this.processorsService\r\n            .processProcessorBulkDeleteCommit(this.selection.selected.map(v => v.processor.id.toString()))\r\n            .subscribe(() => this.updateTable(this.processorResult.items.number));\r\n    }\r\n}","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProcessorsService } from '@src/app/services/processors/processors.service';\r\nimport { Processor } from '@src/app/services/processors/Processor';\r\nimport { ProcessorResult } from '@src/app/services/processors/ProcessorResult';\r\n\r\n@Component({\r\n    selector: 'edit-processor',\r\n    templateUrl: './edit-processor.component.html',\r\n    styleUrls: ['./edit-processor.component.scss']\r\n})\r\n\r\nexport class EditProcessorComponent implements OnInit {\r\n    processor: Processor;\r\n    processorResponse: ProcessorResult;\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private processorsService: ProcessorsService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.processorsService\r\n            .getProcessor(this.route.snapshot.paramMap.get('id'))\r\n            .subscribe((response) => {\r\n                this.processorResponse = response;\r\n                this.processor = response.processor;\r\n            });\r\n    }\r\n\r\n    save(): void {\r\n        this.processorsService\r\n            .formCommit(this.processor)\r\n            .subscribe((response) => {\r\n                if (response.errorMessages?.length) {\r\n                    this.processorResponse = response;\r\n                } else {\r\n                    this.back();\r\n                }\r\n            });\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(['/dispatcher', 'processors']);\r\n    }\r\n}","<ct-cols *ngIf=\"processorResponse\">\r\n    <ct-col size=\"6\">\r\n        <ct-section>\r\n            <ct-section-header>\r\n                <ct-section-header-row>\r\n                    <ct-heading>Edit Processor {{processor ? processor.id : '...'}}</ct-heading>\r\n                </ct-section-header-row>\r\n            </ct-section-header>\r\n            <ct-section-body>\r\n                <ct-section-body-row>\r\n                    <ct-section-content>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Description </mat-label>\r\n                            <textarea matInput=\"matInput\" [(ngModel)]=\"processor.description\" value=\"\"\r\n                                cdkTextareaAutosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"5\"> </textarea>\r\n                        </mat-form-field>\r\n                    </ct-section-content>\r\n                </ct-section-body-row>\r\n            </ct-section-body>\r\n            <ct-section-footer>\r\n                <ct-section-footer-row>\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                        <ct-flex-item>\r\n                            <button mat-stroked-button=\"mat-stroked-button\" (click)=\"back()\">Cancel</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" (click)=\"save()\" color=\"primary\">Save</button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-footer-row>\r\n            </ct-section-footer>\r\n        </ct-section>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status [content]=\"processorResponse\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>"]}