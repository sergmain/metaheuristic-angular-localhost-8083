{"version":3,"sources":["./node_modules/@biesbjerg/ngx-translate-extract-marker/__ivy_ngcc__/fesm2015/biesbjerg-ngx-translate-extract-marker.js","./src/app/services/dispatcher-asset-mode/dispatcher-asset-mode.service.ts","./src/app/enums/BatchExecState.ts","./src/app/enums/ExecContextState.ts","./src/app/guards/role-route.guard.ts","./src/app/enums/DispatcherAssetMode.ts","./src/app/enums/LoadStates.ts","./src/app/helpers/state.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;;AAEkB;;AAElB,kE;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAyE;;AAKlE,MAAM,0BAA0B;IAEnC,gBAAgB,CAAC;IAEjB,OAAO,CAAC,KAA0B;QAC9B,IAAI,KAAK,KAAK,sFAAmB,CAAC,KAAK,EAAE;YAAE,OAAO,IAAI;SAAE;QACxD,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,YAAY,CAAC,KAA0B;QACnC,IAAI,KAAK,KAAK,sFAAmB,CAAC,UAAU,EAAE;YAAE,OAAO,IAAI;SAAE;QAC7D,OAAO,KAAK,CAAC;IACjB,CAAC;IACD,QAAQ,CAAC,KAA0B;QAC/B,IAAI,KAAK,KAAK,sFAAmB,CAAC,MAAM,EAAE;YAAE,OAAO,IAAI;SAAE;QACzD,OAAO,KAAK,CAAC;IACjB,CAAC;;oGAfQ,0BAA0B;6GAA1B,0BAA0B,WAA1B,0BAA0B,mBAFvB,MAAM;;;;;;;;;;;;;ACJtB;AAAA;AAAA,IAAY,cAQX;AARD,WAAY,cAAc;IACtB,sDAAU;IACV,yDAAW;IACX,uDAAU;IACV,6DAAa;IACb,+DAAc;IACd,2DAAY;IACZ,2DAAY;AAChB,CAAC,EARW,cAAc,KAAd,cAAc,QAQzB;;;;;;;;;;;;;ACRD;AAAA;AAAA,IAAY,gBAUX;AAVD,WAAY,gBAAgB;IACxB,mCAAe;IACf,uCAAmB;IACnB,iCAAa;IACb,2CAAuB;IACvB,yCAAqB;IACrB,uCAAmB;IACnB,uCAAmB;IACnB,yCAAqB;IACrB,iDAA6B;AACjC,CAAC,EAVW,gBAAgB,KAAhB,gBAAgB,QAU3B;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4G;AAChD;AAEa;;;;AAKlE,MAAM,cAAc;IACvB,YACY,qBAA4C,EAC5C,MAAc;QADd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,WAAM,GAAN,MAAM,CAAQ;IACtB,CAAC;IACL,WAAW,CACP,KAA6B,EAC7B,KAA0B;;QAE1B,IAAI,CAAC,yEAAW,CAAC,UAAU,EAAE;YACzB,OAAO,CAAC,cAAc,CAAC,MAAM,EAAE,eAAe,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3D,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,aAAa,EAC7B,iBAAiB,EACjB,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAC5E,CAAC;YACF,OAAO,CAAC,GAAG,CACP,MAAM,EAAE,aAAa,EACrB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,EAC/C,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,aAC3C,IAAI,CAAC,qBAAqB,CAAC,IAAI,0CAAE,WAAW,0CAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,EACrE,CACJ,CAAC;YACF,OAAO,CAAC,QAAQ,EAAE,CAAC;SACtB;QAED,IAAI,KAAK,GAAY,KAAK,CAAC;QAC3B,MAAM,KAAK,GAAc,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;QAClE,MAAC,WAAK,CAAC,IAAI,0CAAE,aAA6B,0CAAE,OAAO,CAAC,IAAI,CAAC,EAAE;YACvD,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACjB,KAAK,GAAG,IAAI,CAAC;aAChB;QACL,CAAC,EAAE;QACH,OAAO,KAAK,CAAC;IACjB,CAAC;;4EAjCQ,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFX,MAAM;;;;;;;;;;;;;ACPtB;AAAA;AAAA,IAAY,mBAIX;AAJD,WAAY,mBAAmB;IAC3B,sCAAe;IACf,wCAAiB;IACjB,gDAAyB;AAC7B,CAAC,EAJW,mBAAmB,KAAnB,mBAAmB,QAI9B;;;;;;;;;;;;;ACJD;AAAA;AAAA,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,2CAAI;IACJ,iDAAO;IACP,6CAAK;IACL,2CAAI;IACJ,2DAAY;AAChB,CAAC,EANW,UAAU,KAAV,UAAU,QAMrB;;;;;;;;;;;;;ACND;AAAA;AAAA,MAAM,KAAK,GAAQ;IACf,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;IAClB,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;IACZ,YAAY,EAAE,cAAc;CAC/B,CAAC;AAEe","file":"common-es2015.js","sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} key\n * @return {?}\n */\nfunction marker(key) {\n    return key;\n}\n\nexport { marker };\n\n//# sourceMappingURL=biesbjerg-ngx-translate-extract-marker.js.map","import { Injectable } from '@angular/core';\r\nimport { DispatcherAssetMode } from '@src/app/enums/DispatcherAssetMode';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DispatcherAssetModeService {\r\n\r\n    constructor() { }\r\n\r\n    isLocal(value: DispatcherAssetMode) {\r\n        if (value === DispatcherAssetMode.local) { return true }\r\n        return false;\r\n    }\r\n    isReplicated(value: DispatcherAssetMode) {\r\n        if (value === DispatcherAssetMode.replicated) { return true }\r\n        return false;\r\n    }\r\n    isSource(value: DispatcherAssetMode) {\r\n        if (value === DispatcherAssetMode.source) { return true }\r\n        return false;\r\n    }\r\n}\r\n","export enum BatchExecState {\r\n    Error = -1,\r\n    Unknown = 0,\r\n    Stored = 1,\r\n    Preparing = 2,\r\n    Processing = 3,\r\n    Finished = 4,\r\n    Archived = 5\r\n}","export enum ExecContextState {\r\n    ERROR = 'ERROR',          // some error in configuration\r\n    UNKNOWN = 'UNKNOWN',        // unknown state\r\n    NONE = 'NONE',            // just created execContext\r\n    PRODUCING = 'PRODUCING',       // producing was just started\r\n    PRODUCED = 'PRODUCED',        // producing was finished\r\n    STARTED = 'STARTED',         // started\r\n    STOPPED = 'STOPPED',         // stopped\r\n    FINISHED = 'FINISHED',        // finished\r\n    DOESNT_EXIST = 'DOESNT_EXIST',    // doesn't exist. this state is needed at processor side to reconcile list of tasks\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService, Role } from '../services/authentication';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RoleRouteGuard implements CanActivate {\r\n    constructor(\r\n        private authenticationService: AuthenticationService,\r\n        private router: Router,\r\n    ) { }\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n        if (!environment.production) {\r\n            console.groupCollapsed('%c%s', 'color:orange;', state.url);\r\n            console.log('%c%s', 'color:blue;',\r\n                'requiredRoles: ',\r\n                this.authenticationService.convertRolesToString(route.data.requiredRoles)\r\n            );\r\n            console.log(\r\n                '%c%s', 'color:blue;',\r\n                this.authenticationService.user.username + ': ',\r\n                this.authenticationService.convertRolesToString(\r\n                    this.authenticationService.user?.authorities?.map(v => v.authority)\r\n                )\r\n            );\r\n            console.groupEnd();\r\n        }\r\n\r\n        let check: boolean = false;\r\n        const roles: Set<Role> = this.authenticationService.getUserRole();\r\n        (route.data?.requiredRoles as Array<Role>)?.forEach(role => {\r\n            if (roles.has(role)) {\r\n                check = true;\r\n            }\r\n        });\r\n        return check;\r\n    }\r\n}\r\n","export enum DispatcherAssetMode {\r\n    local = 'local',\r\n    source = 'source',\r\n    replicated = 'replicated'\r\n}","export enum LoadStates {\r\n    show,\r\n    loading,\r\n    empty,\r\n    wait,\r\n    firstLoading\r\n}","const state: any = {\r\n    show: 'show',\r\n    loading: 'loading',\r\n    empty: 'empty',\r\n    wait: 'wait',\r\n    firstLoading: 'firstLoading'\r\n};\r\n\r\nexport { state };"],"sourceRoot":"webpack:///"}