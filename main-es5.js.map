{"version":3,"sources":["webpack:///src/app/modules/ct/ct-env-msg-outer/ct-env-msg-outer.component.ts","webpack:///src/app/modules/ct/ct-env-msg-outer/ct-env-msg-outer.component.html","webpack:///src/app/services/batch/BatchSelector.ts","webpack:///src/app/modules/ct/ct-rest-status/ct-rest-status.component.html","webpack:///src/app/modules/ct/ct-rest-status/ct-rest-status.component.ts","webpack:///src/app/modules/ct/ct-section-header/ct-section-header.component.ts","webpack:///src/app/modules/ct/ct-section-header/ct-section-header.component.html","webpack:///src/app/modules/ct/ct-section-header-row/ct-section-header-row.component.ts","webpack:///src/app/modules/ct/ct-section-header-row/ct-section-header-row.component.html","webpack:///src/app/modules/ct/ct-section/ct-section.component.ts","webpack:///src/app/modules/ct/ct-section/ct-section.component.html","webpack:///src/app/modules/ct/ct-state-of-tasks/ct-state-of-tasks.component.ts","webpack:///src/app/modules/ct/ct-state-of-tasks/ct-state-of-tasks.component.html","webpack:///src/app/modules/angular2-notifications/components/notification/notification.component.ts","webpack:///src/app/modules/angular2-notifications/components/notification/notification.component.html","webpack:///src/app/modules/ct/ct-back-button/ct-back-button.component.ts","webpack:///src/app/modules/ct/ct-back-button/ct-back-button.component.html","webpack:///src/app/modules/angular2-notifications/enums/notification-animation-type.enum.ts","webpack:///src/app/modules/ct/ct-table/ct-table.component.ts","webpack:///src/app/modules/ct/ct-table/ct-table.component.html","webpack:///src/app/modules/ct/ct.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/pilot/pilot.component.ts","webpack:///src/app/components/pilot/pilot.component.html","webpack:///src/app/components/lorem-index/lorem-index.component.ts","webpack:///src/app/components/lorem-index/lorem-index.component.html","webpack:///src/app/modules/angular2-notifications/enums/notification-type.enum.ts","webpack:///src/app/modules/ct/ct-flex/ct-flex.component.ts","webpack:///src/app/modules/ct/ct-flex/ct-flex.component.html","webpack:///src/app/services/batch/BatchDownloader.ts","webpack:///src/app/modules/ct/ct-section-footer/ct-section-footer.component.ts","webpack:///src/app/modules/ct/ct-section-footer/ct-section-footer.component.html","webpack:///src/app/models/UIStateComponent.ts","webpack:///src/app/components/app-view/app-view.component.ts","webpack:///src/app/components/app-view/app-view.component.html","webpack:///src/app/services/batch/batch.service.ts","webpack:///src/app/modules/ct/ct-cols/ct-cols.component.ts","webpack:///src/app/modules/ct/ct-cols/ct-cols.component.html","webpack:///src/app/modules/ct/ct-pre/ct-pre.component.ts","webpack:///src/app/modules/ct/ct-pre/ct-pre.component.html","webpack:///src/app/modules/ct/ct-section-body-row/ct-section-body-row.component.ts","webpack:///src/app/modules/ct/ct-section-body-row/ct-section-body-row.component.html","webpack:///src/app/services/batch/BatchExecStatusService.ts","webpack:///src/app/services/settings/settings.service.ts","webpack:///src/app/services/authentication/Role.ts","webpack:///src/app/modules/ct/ct-col/ct-col.component.ts","webpack:///src/app/modules/ct/ct-col/ct-col.component.html","webpack:///src/app/modules/ct/ct-file-upload/ct-file-upload.component.ts","webpack:///src/app/modules/ct/ct-file-upload/ct-file-upload.component.html","webpack:///src/app/modules/ct/ct-section-body/ct-section-body.component.ts","webpack:///src/app/modules/ct/ct-section-body/ct-section-body.component.html","webpack:///src/app/modules/ct/ct-flex-item/ct-flex-item.component.ts","webpack:///src/app/modules/ct/ct-flex-item/ct-flex-item.component.html","webpack:///src/app/services/authentication/User.ts","webpack:///src/app/components/billing/billing.component.ts","webpack:///src/app/components/billing/billing.component.html","webpack:///src/app/modules/ct/ct-hint/ct-hint.component.ts","webpack:///src/app/modules/ct/ct-hint/ct-hint.component.html","webpack:///src/app/components/nav-pilot/nav-pilot.component.ts","webpack:///src/app/components/nav-pilot/nav-pilot.component.html","webpack:///src/app/modules/angular2-notifications/components/simple-notifications/simple-notifications.component.ts","webpack:///src/app/modules/angular2-notifications/components/simple-notifications/simple-notifications.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/batch/BatchExexStatusComparer.ts","webpack:///src/app/modules/angular2-notifications/consts/default-icons.const.ts","webpack:///src/app/modules/ct/ct-section-footer-row/ct-section-footer-row.component.ts","webpack:///src/app/modules/ct/ct-section-footer-row/ct-section-footer-row.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/modules/ct/ct-table-pagination/ct-table-pagination.component.ts","webpack:///src/app/modules/ct/ct-table-pagination/ct-table-pagination.component.html","webpack:///src/app/modules/ct/ct-content/ct-content.component.ts","webpack:///src/app/modules/ct/ct-content/ct-content.component.html","webpack:///src/app/modules/ct/ct-heading/ct-heading.component.ts","webpack:///src/app/modules/ct/ct-heading/ct-heading.component.html","webpack:///src/app/services/settings/Settings.ts","webpack:///src/app/app.module.ts","webpack:///src/app/services/exec-context/exec-context.service.ts","webpack:///src/app/components/batch-change-notification/batch-change-notification.component.ts","webpack:///src/app/components/batch-change-notification/batch-change-notification.component.html","webpack:///src/app/modules/angular2-notifications/consts/default-options.const.ts","webpack:///src/app/modules/angular2-notifications/services/notifications.service.ts","webpack:///src/app/helpers/generateFormData.ts","webpack:///src/app/modules/ct/ct-section-content/ct-section-content.component.ts","webpack:///src/app/modules/ct/ct-section-content/ct-section-content.component.html","webpack:///src/app/guards/auth/auth.guard.ts","webpack:///src/app/jwt.interceptor.ts","webpack:///src/app/notifications.interceptor.ts","webpack:///src/app/modules/angular2-notifications/simple-notifications.module.ts","webpack:///src/app/components/app-dialog-confirmation/app-dialog-confirmation.component.ts","webpack:///src/app/components/app-dialog-confirmation/app-dialog-confirmation.component.html","webpack:///src/app/app.routing.module.ts","webpack:///src/app/modules/ct/ct-section-caption/ct-section-caption.component.ts","webpack:///src/app/modules/ct/ct-section-caption/ct-section-caption.component.html","webpack:///src/app/modules/ct/ct-wrap-block/ct-wrap-block.component.ts","webpack:///src/app/modules/ct/ct-wrap-block/ct-wrap-block.component.html","webpack:///src/app/services/authentication/index.ts","webpack:///src/app/services/audioNotification/audioNotification.service.ts","webpack:///src/app/components/app-index/app-index.component.ts","webpack:///src/app/components/app-index/app-index.component.html","webpack:///src/app/modules/copy-right/copy-right/copy-right.component.ts","webpack:///src/app/modules/copy-right/copy-right/copy-right.component.html","webpack:///src/app/services/authentication/authentication.service.ts","webpack:///src/app/services/accounts/accounts.service.ts","webpack:///src/app/enums/OperationStatus.ts","webpack:///src/app/ngmaterial.module.ts","webpack:///src/app/modules/copy-right/copy-right.module.ts","webpack:///src/app/modules/ct/ct-alert/ct-alert.component.ts","webpack:///src/app/modules/ct/ct-alert/ct-alert.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["CtEnvMsgOuterComponent","domSanitizer","propertyName","content","bypassSecurityTrustHtml","BatchSelector","list","batchData","batch","id","isSelected","splice","indexOf","getId","push","sort","a","z","length","CtRestStatusComponent","CtSectionHeaderComponent","CtSectionHeaderRowComponent","CtSectionComponent","CtStateOfTasksComponent","execContextService","sourceCodeId","execContextId","execContextsState","subscribe","response","context","NotificationComponent","notificationService","cd","zone","titleIsTemplate","contentIsTemplate","htmlIsTemplate","progressWidth","stopTime","framesPerSecond","instance","now","Date","getTime","endTime","remove","item","timeoutEnd","emit","showProgressBar","Math","min","startTime","sleepTime","timeOut","timer","setTimeout","run","destroyed","detectChanges","override","attachOverrides","animate","state","startTimeOut","contentType","title","html","safeSvg","icon","safeInputHtml","clearTimeout","detach","runOutsideAngular","pauseOnHover","pauseStart","event","click","clickToClose","clickIcon","clickIconToClose","Object","keys","forEach","hasOwnProperty","set","key","onClick","onEnter","onLeave","opacity","transform","CtBackButtonComponent","router","activatedRoute","subs","events","setConfig","firstChild","data","config","snapshot","backConfig","sub","unsubscribe","navigate","serialize","concat","url","split","fn","l","i","filter","v","NotificationAnimationType","CtTableComponent","changeDetector","wait","isWaiting","undefined","isFnMode","CtModule","forChild","environment","production","baseUrl","hashLocationStrategy","userLifeTime","isSslRequired","batchInterval","language","brandingTitle","brandingMsg","brandingMsgIndex","PilotComponent","LoremIndexComponent","NotificationType","CtFlexComponent","BatchDownloader","http","zipFileName","toString","zip","processable","map","el","fileName","pipe","downloadBatch","err","parseProcessableItemOperator","next","e","error","complete","file","body","generateAsync","type","then","blob","source","observer","ok","batchId","headers","append","get","observe","responseType","CtSectionFooterComponent","UIStateComponent","authenticationService","isLoading","Admin","isRoleAdmin","Manager","isRoleManager","Operator","isRoleOperator","Data","isRoleData","MasterAdmin","isRoleMasterAdmin","MasterOperator","isRoleMasterOperator","MasterSupport","isRoleMasterSupport","MasterAssetManager","isRoleMasterAssetManager","s","AppViewComponent","settingsService","sidenavButtonDisable","sidenav","lang","htmlContent","subscribeSubscription","sidenavExist","theme","settings","current","unsubscribeSubscriptions","isAuth","toggleSidenav","toggleTheme","toggleLanguage","value","logout","urlString","FINISHED_STATE","ERROR_STATE","BatchService","finishedNotification","batchDownloader","batchExexStatusComparer","notification","page","filterBatches","params","post","CtColsComponent","CtPreComponent","CtSectionBodyRowComponent","StatusChecker","records","execStatuses","callback","prev","nextExecStatusMap","Map","statuses","prevExecStatusMap","isNew","isFinished","checkState","isError","prevMap","nextMap","checks","has","BatchExexStatusService","batchService","isIntervalStarted","interval","statusChecker","getStatuses","getChanges","intervalRequset","batchExecStatuses","result","write","masterCheck","r","repeatRequest","batchesResult","batches","status","execState","SettingsServiceEventChange","JSON","parse","stringify","SettingsService","localStorageName","storageDefaultData","user","username","getSettings","updateTheme","update","newStorageData","setToLocalStorage","Dark","Light","batchFilter","getFromLocalStorage","document","querySelector","classList","add","localStorage","removeItem","setItem","assign","getItem","Role","CtColComponent","CtFileUploadComponent","changed","acceptTypes","buttonTitleString","buttonTitle","fileInput","nativeElement","fileChanged","CtSectionBodyComponent","CtFlexItemComponent","User","publicName","authorities","BillingComponent","CtHintComponent","NavPilotComponent","SimpleNotificationsComponent","service","create","destroy","notifications","position","lastOnBottom","maxStack","preventLastDuplicates","preventDuplicates","maxLength","theClass","rtl","FromRight","usingComponentOptions","opt","attachChanges","globalOptions","listener","emitter","command","cleanSingle","defaultBehavior","buildEmit","createdOn","toBlock","block","lastNotificationCreated","icons","toCheck","checkHtml","checkStandard","comp","checker","options","to","toEmit","destroyedOn","indexOfDelete","doDelete","noti","idx","AppComponent","translate","batchExexStatusService","use","startIntervalRequset","stopIntervalRequset","BatchExexStatusComparer","isFirstBacth","newList","differenceList","newElem","elem","find","checkStatus","Array","from","exist","index","findIndex","DEFAULT_ICONS","alert","info","success","warn","CtSectionFooterRowComponent","LoginComponent","password","form","required","minLength","valid","login","CtTablePaginationComponent","CtContentComponent","CtHeadingComponent","SettingsTheme","SettingsLanguage","setOfLanguages","Set","EN","RU","defaultSettings","sidenavButton","HttpLoaderFactory","AppModule","provide","useClass","multi","forRoot","loader","useFactory","deps","ExecContextService","uid","variable","taskId","variableId","BatchChangeNotificationComponent","audioNotification","isActive","play","DEFAULT_OPTIONS","NotificationsService","random","substring","Success","Error","Alert","Info","Warn","Bare","generateFormData","formData","FormData","CtSectionContentComponent","AuthGuard","route","JwtInterceptor","request","clone","setHeaders","Authorization","getToken","handle","NotificationsInterceptor","notificationsService","req","modifyBody","message","errors","errorMessages","infos","infoMessages","OK","OPTIONS","optionsFactory","SimpleNotificationsModule","ngModule","providers","useValue","AppDialogConfirmationComponent","dialogRef","close","onNoClick","onYesClick","ConfirmationDialogMethod","dialogData","target","propertyDesciptor","method","args","questionData","text","question","dialog","dialogError","translateError","resolveTitle","rejectTitle","open","width","afterClosed","apply","routes","path","component","canActivate","loadChildren","m","DispatcherModule","AiModule","BatchModule","AboutModule","redirectTo","pathMatch","extraOptions","useHash","onSameUrlNavigation","relativeLinkResolution","AppRoutingModule","CtSectionCaptionComponent","CtWrapBlockComponent","AudioNotification","track","Audio","src","volume","load","AppIndexComponent","CopyRightComponent","AuthenticationServiceEventLogin","AuthenticationServiceEventLogout","AuthenticationServiceEventChange","AuthenticationService","userLifeTimeExpiredName","getLocalStorageData","setLocalStorageData","roles","role","replace","toLowerCase","ss","toUpperCase","join","subscriber","token","isUserLifeTimeExpired","authority","generateUserToken","updateData","aboutUser","log","btoa","last","parseInt","passedTime","sessionStorage","clear","usernameAsString","rolesAsString","convertRolesToString","aboutStr","console","includes","ROLE_MANAGER","ROLE_OPERATOR","ROLE_DATA","ROLE_SERVER_REST_ACCESS","ROLE_ASSET_REST_ACCESS","ROLE_BILLING","ROLE_MASTER_ADMIN","ROLE_MASTER_OPERATOR","ROLE_MASTER_SUPPORT","ROLE_MASTER_ASSET_MANAGER","ROLE_ADMIN","AccountsService","account","enabled","accountId","password2","OperationStatus","MaterialAppModule","CopyRightModule","CtAlertComponent","window","location","protocol","href","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","code","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { environment } from '@src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'ct-env-msg-outer',\r\n  templateUrl: './ct-env-msg-outer.component.html',\r\n  styleUrls: ['./ct-env-msg-outer.component.sass']\r\n})\r\nexport class CtEnvMsgOuterComponent implements OnInit {\r\n  @Input() propertyName: string;\r\n  content: SafeHtml;\r\n\r\n  constructor(\r\n    private domSanitizer: DomSanitizer\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.propertyName) {\r\n      this.content = this.domSanitizer.bypassSecurityTrustHtml(environment[this.propertyName]);\r\n    }\r\n  }\r\n}\r\n","<div [innerHtml]=\"content\"></div>","import { BatchData } from './BatchData';\r\n\r\nexport class BatchSelector {\r\n    constructor() { }\r\n\r\n    protected list: number[] = [];\r\n\r\n    protected getId(batchData: BatchData.BatchExecInfo): number {\r\n        return batchData.batch.id;\r\n    }\r\n\r\n    toggle(batchData: BatchData.BatchExecInfo): void {\r\n        if (this.isSelected(batchData)) {\r\n            this.list.splice(this.list.indexOf(this.getId(batchData)), 1);\r\n        } else {\r\n            this.list.push(this.getId(batchData));\r\n        }\r\n        this.list.sort((a, z) => a - z);\r\n    }\r\n\r\n    isSelected(batchData: BatchData.BatchExecInfo): boolean {\r\n        if (this.list.indexOf(this.getId(batchData)) === -1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    clear(): void {\r\n        this.list = [];\r\n    }\r\n\r\n    get size(): number {\r\n        return this.list.length;\r\n    }\r\n\r\n    getList(): number[] {\r\n        return [...this.list];\r\n    }\r\n}\r\n","<ct-section *ngIf=\"content\">\r\n    <ct-section-body>\r\n        <ct-section-body-row *ngIf=\"content.status\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">STATUS:</div>\r\n            <ct-heading>{{content.status}}</ct-heading>\r\n        </ct-section-body-row>\r\n\r\n        <ct-section-body-row *ngIf=\"content.validationResult\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">STATUS:</div>\r\n            <ct-heading>{{content.validationResult.status}}</ct-heading>\r\n        </ct-section-body-row>\r\n\r\n        <ct-section-body-row *ngIf=\"content.errorMessages?.length\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">ERRORS:</div>\r\n            <ul class=\"code\">\r\n                <li *ngFor=\"let error of content.errorMessages; index as i; \">{{error}}</li>\r\n            </ul>\r\n        </ct-section-body-row>\r\n\r\n        <ct-section-body-row *ngIf=\"content.infoMessages?.length\">\r\n            <div style=\"font-size: 75%; opacity: 0.75;\">INFO:</div>\r\n            <ul class=\"code\">\r\n                <li *ngFor=\"let info of content.infoMessages; index as i; \">{{info}}</li>\r\n            </ul>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n</ct-section>","import { Component, Input } from '@angular/core';\r\nimport { DefaultResponse } from '@src/app/models/DefaultResponse';\r\n\r\n@Component({\r\n  selector: 'ct-rest-status',\r\n  templateUrl: './ct-rest-status.component.html',\r\n  styleUrls: ['./ct-rest-status.component.scss']\r\n})\r\nexport class CtRestStatusComponent {\r\n  @Input() content: DefaultResponse;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-header',\r\n  templateUrl: './ct-section-header.component.html',\r\n  styleUrls: ['./ct-section-header.component.scss']\r\n})\r\nexport class CtSectionHeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-header-row',\r\n  templateUrl: './ct-section-header-row.component.html',\r\n  styleUrls: ['./ct-section-header-row.component.scss']\r\n})\r\nexport class CtSectionHeaderRowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section',\r\n  templateUrl: './ct-section.component.html',\r\n  styleUrls: ['./ct-section.component.scss']\r\n})\r\nexport class CtSectionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ExecContextService } from '@src/app/services/exec-context/exec-context.service';\r\nimport { ExecContextStateResult } from '@src/app/services/source-codes/ExecContextStateResult';\r\n\r\n@Component({\r\n  selector: 'ct-state-of-tasks',\r\n  templateUrl: './ct-state-of-tasks.component.html',\r\n  styleUrls: ['./ct-state-of-tasks.component.scss']\r\n})\r\nexport class CtStateOfTasksComponent implements OnInit {\r\n  @Input() sourceCodeId: string;\r\n  @Input() execContextId: string;\r\n\r\n  response: ExecContextStateResult;\r\n\r\n  constructor(\r\n    private execContextService: ExecContextService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.sourceCodeId && this.execContextId) {\r\n      this.execContextService\r\n        .execContextsState(this.sourceCodeId, this.execContextId)\r\n        .subscribe(response => {\r\n          this.response = response;\r\n        });\r\n    }\r\n  }\r\n}\r\n","<div *ngIf=\"response\">\r\n    <table class=\"info-table\">\r\n        <tr>\r\n            <td>UID: </td>\r\n            <td>{{response.sourceCodeUid}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Is valid:</td>\r\n            <td>{{response.sourceCodeValid}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Type: </td>\r\n            <td>{{response.sourceCodeType}}</td>\r\n        </tr>\r\n    </table>\r\n    <br>\r\n    <table class=\"state-table\">\r\n        <thead>\r\n            <tr>\r\n                <td></td>\r\n                <td *ngFor=\"let elem of response.header\">\r\n                    <div>{{elem.process}}</div>\r\n                    <div>{{elem.functionCode}}</div>\r\n                </td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let row of response.lines\">\r\n                <td>{{row.context}}</td>\r\n                <td *ngFor=\"let cell of row.cells\">\r\n                    <div *ngIf=\"!cell.empty\">\r\n                        <div>{{cell.taskId}}</div>\r\n                        <div>{{cell.state}}</div>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, Input, NgZone, OnDestroy, OnInit, TemplateRef, ViewEncapsulation, ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { NotificationAnimationType } from '../../enums/notification-animation-type.enum';\r\nimport { Notification } from '../../interfaces/notification.type';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'simple-notification',\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('enterLeave', [\r\n\r\n      // Fade\r\n      state('fade', style({opacity: 1})),\r\n      transition('* => fade', [\r\n        style({opacity: 0}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fadeOut', style({opacity: 0})),\r\n      transition('fade => fadeOut', [\r\n        style({opacity: 1}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from top\r\n      state('fromTop', style({opacity: 1, transform: 'translateY(0)'})),\r\n      transition('* => fromTop', [\r\n        style({opacity: 0, transform: 'translateY(-5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromTopOut', style({opacity: 0, transform: 'translateY(5%)'})),\r\n      transition('fromTop => fromTopOut', [\r\n        style({opacity: 1, transform: 'translateY(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from right\r\n      state('fromRight', style({opacity: 1, transform: 'translateX(0)'})),\r\n      transition('* => fromRight', [\r\n        style({opacity: 0, transform: 'translateX(5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromRightOut', style({opacity: 0, transform: 'translateX(-5%)'})),\r\n      transition('fromRight => fromRightOut', [\r\n        style({opacity: 1, transform: 'translateX(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from bottom\r\n      state('fromBottom', style({opacity: 1, transform: 'translateY(0)'})),\r\n      transition('* => fromBottom', [\r\n        style({opacity: 0, transform: 'translateY(5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromBottomOut', style({opacity: 0, transform: 'translateY(-5%)'})),\r\n      transition('fromBottom => fromBottomOut', [\r\n        style({opacity: 1, transform: 'translateY(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from left\r\n      state('fromLeft', style({opacity: 1, transform: 'translateX(0)'})),\r\n      transition('* => fromLeft', [\r\n        style({opacity: 0, transform: 'translateX(-5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromLeftOut', style({opacity: 0, transform: 'translateX(5%)'})),\r\n      transition('fromLeft => fromLeftOut', [\r\n        style({opacity: 1, transform: 'translateX(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Rotate\r\n      state('scale', style({opacity: 1, transform: 'scale(1)'})),\r\n      transition('* => scale', [\r\n        style({opacity: 0, transform: 'scale(0)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('scaleOut', style({opacity: 0, transform: 'scale(0)'})),\r\n      transition('scale => scaleOut', [\r\n        style({opacity: 1, transform: 'scale(1)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n\r\n      // Scale\r\n      state('rotate', style({opacity: 1, transform: 'rotate(0deg)'})),\r\n      transition('* => rotate', [\r\n        style({opacity: 0, transform: 'rotate(5deg)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('rotateOut', style({opacity: 0, transform: 'rotate(-5deg)'})),\r\n      transition('rotate => rotateOut', [\r\n        style({opacity: 1, transform: 'rotate(0deg)'}),\r\n        animate('400ms ease-in-out')\r\n      ])\r\n    ])\r\n  ],\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NotificationComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() timeOut: number;\r\n  @Input() showProgressBar: boolean;\r\n  @Input() pauseOnHover: boolean;\r\n  @Input() clickToClose: boolean;\r\n  @Input() clickIconToClose: boolean;\r\n  @Input() maxLength: number;\r\n  @Input() theClass: string;\r\n  @Input() rtl: boolean;\r\n  @Input() animate: NotificationAnimationType;\r\n  @Input() position: number;\r\n  @Input() item: Notification;\r\n\r\n\r\n  // Progress bar variables\r\n  title: any;\r\n  content: any;\r\n\r\n  titleIsTemplate = false;\r\n  contentIsTemplate = false;\r\n  htmlIsTemplate = false;\r\n\r\n  progressWidth = 0;\r\n  safeSvg: SafeHtml;\r\n  safeInputHtml: SafeHtml;\r\n\r\n  private stopTime = false;\r\n  private timer: any;\r\n  private framesPerSecond = 40;\r\n  private sleepTime: number;\r\n  private startTime: number;\r\n  private endTime: number;\r\n  private pauseStart: number;\r\n\r\n  private icon: string;\r\n\r\n  constructor(\r\n    private notificationService: NotificationsService,\r\n    private domSanitizer: DomSanitizer,\r\n    private cd: ChangeDetectorRef,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.item.override) {\r\n      this.attachOverrides();\r\n    }\r\n\r\n    if (this.animate) {\r\n      this.item.state = this.animate;\r\n    }\r\n\r\n    if (this.timeOut !== 0) {\r\n      this.startTimeOut();\r\n    }\r\n\r\n    this.contentType(this.item.title, 'title');\r\n    this.contentType(this.item.content, 'content');\r\n    this.contentType(this.item.html, 'html');\r\n\r\n    this.safeSvg = this.domSanitizer.bypassSecurityTrustHtml(this.icon || this.item.icon);\r\n    this.safeInputHtml = this.domSanitizer.bypassSecurityTrustHtml(this.item.html);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearTimeout(this.timer);\r\n    this.cd.detach();\r\n  }\r\n\r\n  startTimeOut(): void {\r\n    this.sleepTime = 1000 / this.framesPerSecond /* ms */;\r\n    this.startTime = new Date().getTime();\r\n    this.endTime = this.startTime + this.timeOut;\r\n    this.zone.runOutsideAngular(() => this.timer = setTimeout(this.instance, this.sleepTime));\r\n  }\r\n\r\n  onEnter() {\r\n    if (this.pauseOnHover) {\r\n      this.stopTime = true;\r\n      this.pauseStart = new Date().getTime();\r\n    }\r\n  }\r\n\r\n  onLeave() {\r\n    if (this.pauseOnHover) {\r\n      this.stopTime = false;\r\n      this.startTime += (new Date().getTime() - this.pauseStart);\r\n      this.endTime += (new Date().getTime() - this.pauseStart);\r\n      this.zone.runOutsideAngular(() => setTimeout(this.instance, this.sleepTime));\r\n    }\r\n  }\r\n\r\n  onClick(event: MouseEvent) {\r\n    this.item.click!.emit(event);\r\n\r\n    if (this.clickToClose) {\r\n      this.remove();\r\n    }\r\n  }\r\n\r\n  onClickIcon(event: MouseEvent) {\r\n    this.item.clickIcon!.emit(event);\r\n\r\n    if (this.clickIconToClose) {\r\n      this.remove();\r\n    }\r\n  }\r\n\r\n  // Attach all the overrides\r\n  attachOverrides() {\r\n    Object.keys(this.item.override).forEach(a => {\r\n      if (this.hasOwnProperty(a)) {\r\n        (this as any)[a] = this.item.override[a];\r\n      }\r\n    });\r\n  }\r\n\r\n  private instance = () => {\r\n    const now = new Date().getTime();\r\n\r\n    if (this.endTime < now) {\r\n      this.remove();\r\n      this.item.timeoutEnd!.emit();\r\n    } else if (!this.stopTime) {\r\n      if (this.showProgressBar) {\r\n        // We add this.sleepTime just to have 100% before close\r\n        this.progressWidth = Math.min((now - this.startTime + this.sleepTime) * 100 / this.timeOut, 100);\r\n      }\r\n\r\n      this.timer = setTimeout(this.instance, this.sleepTime);\r\n    }\r\n    this.zone.run(() => {\r\n      if (!(this.cd as ViewRef).destroyed) {\r\n        this.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  private remove() {\r\n    if (this.animate) {\r\n      this.item.state = this.animate + 'Out';\r\n      setTimeout(() => {\r\n        this.notificationService.set(this.item, false);\r\n      }, 310);\r\n    } else {\r\n      this.notificationService.set(this.item, false);\r\n    }\r\n  }\r\n\r\n  private contentType(item: any, key: string) {\r\n    if (item instanceof TemplateRef) {\r\n      this[key] = item;\r\n    } else {\r\n      this[key] = this.domSanitizer.bypassSecurityTrustHtml(item);\r\n    }\r\n\r\n    this[key + 'IsTemplate'] = item instanceof TemplateRef;\r\n  }\r\n}\r\n","<div class=\"simple-notification\"\r\n     [@enterLeave]=\"item.state\"\r\n     (click)=\"onClick($event)\"\r\n     [class]=\"theClass\"\r\n     [ngClass]=\"{\r\n            'alert': item.type === 'alert',\r\n            'error': item.type === 'error',\r\n            'warn': item.type === 'warn',\r\n            'success': item.type === 'success',\r\n            'info': item.type === 'info',\r\n            'bare': item.type === 'bare',\r\n            'rtl-mode': rtl,\r\n            'has-icon': item.icon !== 'bare'\r\n        }\"\r\n     (mouseenter)=\"onEnter()\"\r\n     (mouseleave)=\"onLeave()\">\r\n\r\n    <div *ngIf=\"!item.html\">\r\n\r\n        <div class=\"sn-title\" *ngIf=\"titleIsTemplate; else regularTitle\">\r\n            <ng-container *ngTemplateOutlet=\"title; context: item.context\"></ng-container>\r\n        </div>\r\n\r\n        <ng-template #regularTitle>\r\n            <div class=\"sn-title\" [innerHTML]=\"title\"></div>\r\n        </ng-template>\r\n\r\n        <div class=\"sn-content\" *ngIf=\"contentIsTemplate else regularContent\">\r\n            <ng-container *ngTemplateOutlet=\"content; context: item.context\"></ng-container>\r\n        </div>\r\n\r\n        <ng-template #regularContent>\r\n            <div class=\"sn-content\" [innerHTML]=\"content\"></div>\r\n        </ng-template>\r\n\r\n        <div class=\"icon\" *ngIf=\"item.icon !== 'bare'\" [innerHTML]=\"safeSvg\"></div>\r\n    </div>\r\n    <div *ngIf=\"item.html\">\r\n        <div class=\"sn-html\" *ngIf=\"htmlIsTemplate; else regularHtml\">\r\n            <ng-container *ngTemplateOutlet=\"item.html; context: item.context\"></ng-container>\r\n        </div>\r\n\r\n        <ng-template #regularHtml>\r\n            <div class=\"sn-content\" [innerHTML]=\"safeInputHtml\"></div>\r\n        </ng-template>\r\n\r\n        <div class=\"icon\" [class.icon-hover]=\"clickIconToClose\" *ngIf=\"item.icon\" [innerHTML]=\"safeSvg\" (click)=\"onClickIcon($event)\"></div>\r\n    </div>\r\n\r\n    <div class=\"sn-progress-loader\" *ngIf=\"showProgressBar\">\r\n        <span [ngStyle]=\"{'width': progressWidth + '%'}\"></span>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface MenuItem {\r\n    label: string;\r\n    url: string;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'ct-back-button',\r\n    templateUrl: './ct-back-button.component.html',\r\n    styleUrls: ['./ct-back-button.component.sass']\r\n})\r\nexport class CtBackButtonComponent implements OnInit, OnDestroy {\r\n\r\n    subs: Subscription[] = [];\r\n\r\n    config: string[];\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.subs.push(this.router.events.subscribe(() => {\r\n            this.setConfig();\r\n        }));\r\n        this.subs.push(this.activatedRoute.firstChild.data.subscribe(() => {\r\n            this.setConfig();\r\n        }));\r\n    }\r\n\r\n    setConfig(): void {\r\n        this.config = this.activatedRoute?.snapshot?.firstChild?.data?.backConfig;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.subs.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(this.serialize(this.config));\r\n    }\r\n\r\n    serialize(config: string[]): string[] {\r\n        let list: string[] = [].concat(this.router.url.split('/')).concat(config);\r\n        config.forEach(() => list = fn(list));\r\n\r\n        function fn(l: string[]): string[] {\r\n            const i: number = l.indexOf('../') + 1;\r\n            if (i) {\r\n                l[l.indexOf('../') - 1] = null;\r\n                l[l.indexOf('../')] = null;\r\n            }\r\n            return l.filter(v => v ? v : false);\r\n        }\r\n        return list;\r\n    }\r\n}\r\n","<div *ngIf=\"config\">\r\n    <ct-flex justify-content=\"flex-end\">\r\n        <ct-flex-item>\r\n            <button mat-fab color=\"primary\" (click)=\"back()\">{{'ctBackButton.back' | translate}} </button>\r\n        </ct-flex-item>\r\n    </ct-flex>\r\n</div>","export enum NotificationAnimationType {\r\n  Fade = 'fade',\r\n  FromTop = 'fromTop',\r\n  FromRight = 'fromRight',\r\n  FromBottom = 'fromBottom',\r\n  FromLeft = 'fromLeft',\r\n  Scale = 'scale',\r\n  Rotate = 'rotate'\r\n}\r\n","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ChangeDetectorRef,\r\n    Input,\r\n    OnChanges\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'ct-table',\r\n    templateUrl: './ct-table.component.html',\r\n    styleUrls: ['./ct-table.component.scss']\r\n})\r\nexport class CtTableComponent implements OnInit, OnDestroy, OnChanges {\r\n    @Input() isWaiting: boolean;\r\n\r\n    state = {\r\n        wait: false\r\n    };\r\n\r\n    isFnMode: boolean;\r\n\r\n    constructor(private changeDetector: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.isWaiting === undefined) {\r\n            this.isFnMode = true;\r\n        } else {\r\n            this.isFnMode = false;\r\n            this.state.wait = this.isWaiting;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.changeDetector.detach();\r\n\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        if (this.isFnMode) {\r\n\r\n        } else {\r\n            this.state.wait = this.isWaiting;\r\n        }\r\n    }\r\n\r\n    wait(): void {\r\n        if (this.isFnMode) {\r\n            this.state.wait = true;\r\n            // tslint:disable-next-line: no-string-literal\r\n            if (!this.changeDetector['destroyed']) {\r\n                this.changeDetector.detectChanges();\r\n            }\r\n        }\r\n    }\r\n    show(): void {\r\n        if (this.isFnMode) {\r\n            this.state.wait = false;\r\n            // tslint:disable-next-line: no-string-literal\r\n            if (!this.changeDetector['destroyed']) {\r\n                this.changeDetector.detectChanges();\r\n            }\r\n        }\r\n    }\r\n}","<div class=\"ct-table\" [class.ct-table--wait]=\"state.wait\">\r\n    <div class=\"ct-table__body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n    <div class=\"ct-table__wait\">\r\n        <mat-spinner></mat-spinner>\r\n    </div>\r\n</div>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { CtSectionContentComponent } from './ct-section-content/ct-section-content.component';\r\nimport { CtPreComponent } from './ct-pre/ct-pre.component';\r\nimport { CtHeadingComponent } from './ct-heading/ct-heading.component';\r\nimport { CtSectionBodyRowComponent } from './ct-section-body-row/ct-section-body-row.component';\r\nimport { CtSectionFooterRowComponent } from './ct-section-footer-row/ct-section-footer-row.component';\r\nimport { CtSectionFooterComponent } from './ct-section-footer/ct-section-footer.component';\r\nimport { CtColComponent } from './ct-col/ct-col.component';\r\nimport { CtColsComponent } from './ct-cols/ct-cols.component';\r\nimport { CtSectionCaptionComponent } from './ct-section-caption/ct-section-caption.component';\r\nimport { CtTableComponent } from './ct-table/ct-table.component';\r\nimport { CtWrapBlockComponent } from './ct-wrap-block/ct-wrap-block.component';\r\nimport { CtFileUploadComponent } from './ct-file-upload/ct-file-upload.component';\r\nimport { CtSectionHeaderComponent } from './ct-section-header/ct-section-header.component';\r\nimport { CtSectionComponent } from './ct-section/ct-section.component';\r\nimport { CtSectionHeaderRowComponent } from './ct-section-header-row/ct-section-header-row.component';\r\nimport { CtFlexComponent } from './ct-flex/ct-flex.component';\r\nimport { CtFlexItemComponent } from './ct-flex-item/ct-flex-item.component';\r\nimport { CtSectionBodyComponent } from './ct-section-body/ct-section-body.component';\r\nimport { CtHintComponent } from './ct-hint/ct-hint.component';\r\nimport { CtContentComponent } from './ct-content/ct-content.component';\r\nimport { CtRestStatusComponent } from './ct-rest-status/ct-rest-status.component';\r\nimport { CtBackButtonComponent } from './ct-back-button/ct-back-button.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CtEnvMsgOuterComponent } from './ct-env-msg-outer/ct-env-msg-outer.component';\r\nimport { CtTablePaginationComponent } from './ct-table-pagination/ct-table-pagination.component';\r\nimport { CtStateOfTasksComponent } from './ct-state-of-tasks/ct-state-of-tasks.component';\r\nimport { CtAlertComponent } from './ct-alert/ct-alert.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MaterialAppModule,\r\n        TranslateModule.forChild({})\r\n\r\n    ],\r\n    declarations: [\r\n        CtSectionContentComponent,\r\n        CtPreComponent,\r\n        CtHeadingComponent,\r\n        CtSectionBodyRowComponent,\r\n        CtSectionFooterRowComponent,\r\n        CtSectionFooterComponent,\r\n        CtColComponent,\r\n        CtColsComponent,\r\n        CtSectionCaptionComponent,\r\n        CtTableComponent,\r\n        CtWrapBlockComponent,\r\n        CtFileUploadComponent,\r\n        CtSectionHeaderComponent,\r\n        CtSectionComponent,\r\n        CtSectionHeaderRowComponent,\r\n        CtFlexComponent,\r\n        CtFlexItemComponent,\r\n        CtSectionBodyComponent,\r\n        CtHintComponent,\r\n        CtContentComponent,\r\n        CtRestStatusComponent,\r\n        CtBackButtonComponent,\r\n        CtEnvMsgOuterComponent,\r\n        CtTablePaginationComponent,\r\n        CtStateOfTasksComponent,\r\n        CtAlertComponent\r\n    ],\r\n    exports: [\r\n        CtSectionContentComponent,\r\n        CtPreComponent,\r\n        CtHeadingComponent,\r\n        CtSectionBodyRowComponent,\r\n        CtSectionFooterRowComponent,\r\n        CtSectionFooterComponent,\r\n        CtColComponent,\r\n        CtColsComponent,\r\n        CtSectionCaptionComponent,\r\n        CtTableComponent,\r\n        CtWrapBlockComponent,\r\n        CtFileUploadComponent,\r\n        CtSectionHeaderComponent,\r\n        CtSectionComponent,\r\n        CtSectionHeaderRowComponent,\r\n        CtFlexComponent,\r\n        CtFlexItemComponent,\r\n        CtSectionBodyComponent,\r\n        CtHintComponent,\r\n        CtContentComponent,\r\n        CtRestStatusComponent,\r\n        CtBackButtonComponent,\r\n        CtEnvMsgOuterComponent,\r\n        CtTablePaginationComponent,\r\n        CtStateOfTasksComponent,\r\n        CtAlertComponent\r\n    ]\r\n})\r\n\r\nexport class CtModule { }","import { IEnvironment } from './IEnvironment';\r\n\r\nexport const environment: IEnvironment = {\r\n    production: false,\r\n    baseUrl: 'http://localhost:8080/rest/v1/',\r\n    hashLocationStrategy: true,\r\n    userLifeTime: 30 * 60 * 1000, // 30 minutes\r\n    isSslRequired: false,\r\n    batchInterval: 10 * 1000, // pause between requests in milliseconds, 0 means a disable of any requests\r\n    language: 'EN',\r\n    brandingTitle: 'Metaheuristic',\r\n    brandingMsg: '<b>Metaheuristic platform</b><p>Metaheuristic is an application which implements (or intended to) a Turing complete machine.' +\r\n    'The main use of MH is a management of distributed tasks. Right now there are two main areas where MH is being used:</p>' +\r\n    '<ul><li>' +\r\n        '<p>AI model’s hyper-parameter optimization purpose.</p>' +\r\n            'Each optimization is presented as Experiment. An Experiment consists of some Tasks. Tasks are created at Dispatcher and distributed to Processor. ' +\r\n        'For evaluating a performance of models, metrics and other data are collected and evaluated later by Metaheuristic.' +\r\n        '</li>' +\r\n        '<li>' +\r\n        '<p>Batch processing.</p>' +\r\n        'Common usage of batch processing - split data, create tasks for processing each part of data, process Tasks, aggregate results' +\r\n        '</li>' +\r\n    '</ul>'\r\n    ,\r\n    brandingMsgIndex: '<b>Metaheuristic platform</b><p>Metaheuristic is an application which implements (or intended to) a Turing complete machine.' +\r\n        'The main use of MH is a management of distributed tasks. Right now there are two main areas where MH is being used:</p>' +\r\n        '<ul><li>' +\r\n        '<p>AI model’s hyper-parameter optimization purpose.</p>' +\r\n        'Each optimization is presented as Experiment. An Experiment consists of some Tasks. Tasks are created at Dispatcher and distributed to Processor. ' +\r\n        'For evaluating a performance of models, metrics and other data are collected and evaluated later by Metaheuristic.' +\r\n        '</li>' +\r\n        '<li>' +\r\n        '<p>Batch processing.</p>' +\r\n        'Common usage of batch processing - split data, create tasks for processing each part of data, process Tasks, aggregate results' +\r\n        '</li>' +\r\n        '</ul>',\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'pilot-view',\r\n  templateUrl: './pilot.component.html',\r\n  styleUrls: ['./pilot.component.scss']\r\n})\r\nexport class PilotComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <h1>Pilot</h1>\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { environment } from '@src/environments/environment';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Component({\r\n    selector: 'lorem-index',\r\n    templateUrl: './lorem-index.component.html',\r\n    styleUrls: ['./lorem-index.component.sass']\r\n})\r\nexport class LoremIndexComponent {\r\n    content: SafeHtml;\r\n    constructor(private domSanitizer: DomSanitizer) {\r\n        this.content = domSanitizer.bypassSecurityTrustHtml(environment.brandingMsg);\r\n    }\r\n}","<ct-content>\r\n    <ct-cols>\r\n        <ct-col size=\"1\"></ct-col>\r\n        <ct-col size=\"10\">\r\n            <ct-section>\r\n                <ct-section-header>\r\n                    <ct-section-header-row>\r\n                        <ct-heading>Lorem Index</ct-heading>\r\n                    </ct-section-header-row>\r\n                </ct-section-header>\r\n                <ct-section-body>\r\n                    <ct-section-body-row > \r\n                        <div [innerHtml]=\"content\"></div>\r\n                    </ct-section-body-row>\r\n                </ct-section-body>\r\n            </ct-section>\r\n        </ct-col>\r\n    </ct-cols>\r\n</ct-content>\r\n<copy-right></copy-right>","export enum NotificationType {\r\n  Success = 'success',\r\n  Error = 'error',\r\n  Alert = 'alert',\r\n  Info = 'info',\r\n  Warn = 'warn',\r\n  Bare = 'bare'\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-flex',\r\n  templateUrl: './ct-flex.component.html',\r\n  styleUrls: ['./ct-flex.component.scss']\r\n})\r\nexport class CtFlexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { BatchData } from './BatchData';\r\nimport * as JSZip from 'jszip';\r\nimport * as fileSaver from 'file-saver';\r\nimport { from, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, concatMap } from 'rxjs/operators';\r\nimport { BatchSelector } from './BatchSelector';\r\n\r\ninterface ProcessableItem {\r\n    id: number;\r\n    response: HttpResponse<Blob>;\r\n    fileName: string;\r\n}\r\n\r\nexport class BatchDownloader extends BatchSelector {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private url: (s: string) => string\r\n    ) { super(); }\r\n\r\n\r\n    download(): void {\r\n        const zipFileName: string = 'result ' + this.list.toString() + '.zip';\r\n        const zip: JSZip = new JSZip();\r\n        const processable: ProcessableItem[] = this.list.map(el => ({\r\n            id: el,\r\n            fileName: 'empty',\r\n            response: null,\r\n        }));\r\n\r\n        from(processable)\r\n            .pipe(\r\n                concatMap(item => this.downloadBatch(item.id.toString())\r\n                    .pipe(\r\n                        catchError(err => of(err)),\r\n                        this.parseProcessableItemOperator(item),\r\n                    )\r\n                )\r\n            )\r\n            .subscribe({\r\n                next: e => { },\r\n                error: error => { },\r\n                complete: () => {\r\n                    processable.forEach(item => {\r\n                        zip.file(item.fileName, item.response.body);\r\n                    });\r\n                    zip.generateAsync({ type: 'blob' }).then((blob: Blob) => {\r\n                        fileSaver.saveAs(blob, zipFileName);\r\n                    });\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n    private parseProcessableItemOperator(item: ProcessableItem): (source: Observable<HttpResponse<Blob>>) => Observable<Subscription> {\r\n        return (source: Observable<HttpResponse<Blob>>) =>\r\n            new Observable<Subscription>(observer => {\r\n                return source.subscribe(\r\n                    {\r\n                        next: response => {\r\n                            item.response = response;\r\n                            item.fileName = response.ok ?\r\n                                `${item.id}.zip` :\r\n                                `${item.id} error`;\r\n                            observer.next();\r\n                        },\r\n                        error: error => observer.error(error),\r\n                        complete: () => observer.complete(),\r\n                    }\r\n                );\r\n            });\r\n    }\r\n\r\n    private downloadBatch(batchId: string): Observable<HttpResponse<Blob>> {\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/octet-stream');\r\n        return this.http.get(this.url(`batch-download-result/${batchId}/result.zip`), {\r\n            headers,\r\n            observe: 'response',\r\n            responseType: 'blob'\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-footer',\r\n  templateUrl: './ct-section-footer.component.html',\r\n  styleUrls: ['./ct-section-footer.component.scss']\r\n})\r\nexport class CtSectionFooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Subscription } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication';\r\n\r\nexport class UIStateComponent {\r\n    isLoading: boolean = false;\r\n    subs: Subscription[] = [];\r\n\r\n    constructor(readonly authenticationService: AuthenticationService) { }\r\n\r\n    get isRole(): {\r\n        Admin: boolean;\r\n        Manager: boolean;\r\n        Operator: boolean;\r\n        Data: boolean;\r\n        MasterAdmin: boolean;\r\n        MasterOperator: boolean;\r\n        MasterSupport: boolean;\r\n        MasterAssetManager: boolean;\r\n    } {\r\n        return {\r\n            Admin: this.authenticationService.isRoleAdmin(),\r\n            Manager: this.authenticationService.isRoleManager(),\r\n            Operator: this.authenticationService.isRoleOperator(),\r\n            Data: this.authenticationService.isRoleData(),\r\n            MasterAdmin: this.authenticationService.isRoleMasterAdmin(),\r\n            MasterOperator: this.authenticationService.isRoleMasterOperator(),\r\n            MasterSupport: this.authenticationService.isRoleMasterSupport(),\r\n            MasterAssetManager: this.authenticationService.isRoleMasterAssetManager()\r\n        };\r\n    }\r\n\r\n    subscribeSubscription(s: Subscription): void {\r\n        this.subs.push(s);\r\n    }\r\n\r\n    unsubscribeSubscriptions(): void {\r\n        // console.log(this.subs.length);\r\n        this.subs.forEach(s => s.unsubscribe());\r\n    }\r\n\r\n    setIsLoadingStart(): void {\r\n        this.isLoading = true;\r\n    }\r\n\r\n    setIsLoadingEnd(): void {\r\n        this.isLoading = false;\r\n    }\r\n\r\n}","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\r\nimport { MatSlideToggle, MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { ActivationEnd, Router } from '@angular/router';\r\nimport { AuthenticationService } from '@app/services/authentication/authentication.service';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { setOfLanguages, SettingsLanguage, SettingsTheme } from '@src/app/services/settings/Settings';\r\nimport { SettingsService, SettingsServiceEventChange } from '@src/app/services/settings/settings.service';\r\nimport { environment } from '@src/environments/environment';\r\n\r\n\r\n@Component({\r\n    selector: 'app-view',\r\n    templateUrl: './app-view.component.html',\r\n    styleUrls: ['./app-view.component.scss']\r\n})\r\n\r\nexport class AppViewComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    htmlContent: SafeHtml;\r\n    sidenavButtonDisable: boolean = false;\r\n    sidenav: boolean = false;\r\n    theme: SettingsTheme;\r\n    lang: {\r\n        list?: Set<SettingsLanguage>;\r\n        current?: SettingsLanguage;\r\n    } = {};\r\n    brandingTitle: string = environment.brandingTitle;\r\n\r\n    @ViewChild('matSlideToggleTheme') matSlideToggleTheme: MatSlideToggle;\r\n    @ViewChild('matSelectLanguage') matSelectLanguage: MatSelect;\r\n\r\n    constructor(\r\n        readonly authenticationService: AuthenticationService,\r\n        private domSanitizer: DomSanitizer,\r\n        private settingsService: SettingsService,\r\n        private router: Router\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.htmlContent = this.domSanitizer.bypassSecurityTrustHtml(\r\n            environment.brandingMsgIndex\r\n        );\r\n        this.lang.list = setOfLanguages;\r\n        this.subscribeSubscription(this.router.events.subscribe((event) => {\r\n            if (event instanceof ActivationEnd) {\r\n                this.sidenavButtonDisable = !event.snapshot?.data?.sidenavExist;\r\n            }\r\n        }));\r\n        this.subscribeSubscription(\r\n            this.settingsService.events.subscribe(event => {\r\n                if (event instanceof SettingsServiceEventChange) {\r\n                    this.theme = event.settings.theme;\r\n                    this.lang.current = event.settings.language;\r\n                    this.sidenav = event.settings.sidenav;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeSubscriptions();\r\n    }\r\n\r\n    isAuth(): boolean {\r\n        return this.authenticationService.isAuth();\r\n    }\r\n\r\n    toggleSideNav(): void {\r\n        this.settingsService.toggleSidenav();\r\n    }\r\n\r\n    toggleTheme(event: MatSlideToggleChange): void {\r\n        this.settingsService.toggleTheme();\r\n    }\r\n\r\n    toggleLanguage(event: MatSelectChange): void {\r\n        this.settingsService.toggleLanguage(event.value);\r\n    }\r\n\r\n    logout(): void {\r\n        this.authenticationService.logout().subscribe();\r\n    }\r\n}","<div class=\"app-view\" *ngIf=\"isAuth()\">\r\n    <div class=\"app-view__header\">\r\n        <mat-toolbar class=\"toolbar\" color=\"primary\">\r\n            <mat-toolbar-row>\r\n                <ng-container *ngTemplateOutlet=\"isAuthToolbar\"></ng-container>\r\n            </mat-toolbar-row>\r\n        </mat-toolbar>\r\n    </div>\r\n    <div class=\"app-view__body\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"app-view\" *ngIf=\"!isAuth()\">\r\n    <div class=\"app-view__header\">\r\n        <mat-toolbar class=\"toolbar\" color=\"primary\">\r\n            <mat-toolbar-row class=\"toolbar__row\">\r\n                <div class=\"toolbar__left\">\r\n                    <button class=\"mat-button\" mat-button routerLink=\"/\">{{brandingTitle}}</button>\r\n                </div>\r\n                <div class=\"toolbar__right\"></div>\r\n            </mat-toolbar-row>\r\n        </mat-toolbar>\r\n    </div>\r\n    <div class=\"app-view__body\">\r\n        <ct-content>\r\n            <ct-flex justify-content=\"flex-start\" align-items=\"flex-start\" gap=\"9px\">\r\n                <ct-flex-item flex=\"2\">\r\n                    <ct-section>\r\n                        <ct-section-body>\r\n                            <ct-section-body-row>\r\n                                <div [innerHtml]=\"htmlContent\"></div>\r\n                            </ct-section-body-row>\r\n                        </ct-section-body>\r\n                    </ct-section>\r\n                </ct-flex-item>\r\n                <ct-flex-item flex=\"1\">\r\n                    <login-view> </login-view>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-content>\r\n    </div>\r\n    <div class=\"app-view__footer\">\r\n        <ct-flex justify-content=\"center\">\r\n            <ct-flex-item>Powered by Metaheuristic</ct-flex-item>\r\n        </ct-flex>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<ng-template #isAuthToolbar>\r\n    <ct-flex justify-content=\"space-between\" align-items=\"center\">\r\n        <ct-flex-item>\r\n            <ct-flex justify-content=\"flex-start\" gap=\"9px\" align-items=\"center\">\r\n\r\n                <ct-flex-item>\r\n                    <button \r\n                        class=\"mat-button mat-button--sidenav\" \r\n                        [class.active]=\"sidenav\"\r\n                        mat-button \r\n                        [disabled]=\"sidenavButtonDisable\" \r\n                        (click)=\"toggleSideNav()\">\r\n                        <mat-icon class=\"mat-icon\">menu</mat-icon>\r\n                    </button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item>\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\" routerLink=\"\">{{brandingTitle}}</button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item *ngIf=\"\r\n                    isRole.Admin ||\r\n                    isRole.Data ||\r\n                    isRole.Manager \">\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/ai\">{{ 'app-view.Ai' | translate }}</button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item *ngIf=\"\r\n                    isRole.Admin ||\r\n                    isRole.Data ||\r\n                    isRole.Manager ||\r\n                    isRole.Operator \">\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/batch\">{{ 'app-view.Batch' | translate }}</button>\r\n                </ct-flex-item>\r\n\r\n                <ct-flex-item *ngIf=\"\r\n                    isRole.MasterAdmin ||\r\n                    isRole.MasterOperator ||\r\n                    isRole.MasterSupport ||\r\n                    isRole.MasterAssetManager ||\r\n                    isRole.Admin ||\r\n                    isRole.Data || \r\n                    isRole.Manager \">\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/dispatcher\">{{ 'app-view.Dispatcher' | translate }}</button>\r\n                </ct-flex-item>\r\n\r\n            </ct-flex>\r\n        </ct-flex-item>\r\n\r\n        <ct-flex-item>\r\n            <batch-change-notification></batch-change-notification>\r\n        </ct-flex-item>\r\n\r\n        <ct-flex-item>\r\n            <ct-flex justify-content=\"flex-end\" gap=\"9px\" align-items=\"center\">\r\n                <ct-flex-item>\r\n                    <mat-slide-toggle #matSlideToggleTheme [checked]=\"theme === 'dark'\" (change)=\"toggleTheme($event)\">\r\n                    </mat-slide-toggle>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <mat-select #matSelectLanguage [(value)]=\"lang.current\" (selectionChange)=\"toggleLanguage($event)\">\r\n                        <mat-option *ngFor=\"let language of lang.list\" [value]=\"language\">{{language}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button routerLinkActive=\"active\" routerLink=\"/about\">{{ 'app-view.About' | translate }}</button>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button class=\"mat-button mat-button--menu-item\" mat-button (click)=\"logout()\">{{ 'app-view.Logout' | translate }}</button>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-flex-item>\r\n    </ct-flex>\r\n</ng-template>","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData } from '@src/app/helpers/generateFormData';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { SourceCodeUidsForCompany } from '../source-codes/SourceCodeUidsForCompany';\r\nimport { BatchDownloader } from './BatchDownloader';\r\nimport { BatchesResult } from './BatchesResult';\r\nimport { BatchExexStatusComparer } from './BatchExexStatusComparer';\r\nimport { ExecStatuses } from './ExecStatuses';\r\nimport { Status } from './Status';\r\n\r\nconst url = (urlString: string): string => `${environment.baseUrl}dispatcher/batch/${urlString}`;\r\n\r\nconst FINISHED_STATE: number = 4;\r\nconst ERROR_STATE: number = -1;\r\n\r\nexport interface GetBatchesParams {\r\n    page: number;\r\n    filterBatches: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BatchService {\r\n    batchDownloader: BatchDownloader;\r\n    batchExexStatusComparer: BatchExexStatusComparer;\r\n    finishedNotification: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n    ) {\r\n        this.batchDownloader = new BatchDownloader(http, url);\r\n        this.batchExexStatusComparer = new BatchExexStatusComparer([FINISHED_STATE, ERROR_STATE]);\r\n        this.batchExexStatusComparer.notification.subscribe((s: boolean) => {\r\n            this.finishedNotification.next(s);\r\n        });\r\n    }\r\n\r\n    batches(page: string, filterBatches: boolean): Observable<BatchesResult> {\r\n        return this.http.get<BatchesResult>(\r\n            url(`batches`),\r\n            { params: { page, filterBatches: filterBatches ? 'true' : 'false' } }\r\n        );\r\n    }\r\n\r\n    batchExecStatuses(): Observable<ExecStatuses> {\r\n        return this.http.get<ExecStatuses>(url(`batch-exec-statuses`));\r\n    }\r\n\r\n    batchAdd(): Observable<SourceCodeUidsForCompany> {\r\n        return this.http.get<SourceCodeUidsForCompany>(url(`batch-add`));\r\n    }\r\n\r\n    processResourceDelete(batchId: string): Observable<Status> {\r\n        return this.http.get<Status>(url(`batch-delete/${batchId}`));\r\n    }\r\n\r\n    processResourceDeleteCommit(batchId: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`batch-delete-commit`), generateFormData({ batchId }));\r\n    }\r\n\r\n    uploadFile(sourceCodeId: string, file: File): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`batch-upload-from-file`), generateFormData({ file, sourceCodeId }));\r\n    }\r\n\r\n    getProcessingResourceStatus(batchId: string): Observable<Status> {\r\n        return this.http.get<Status>(url(`batch-status/${batchId}`));\r\n    }\r\n\r\n    downloadFile(batchId: string): Observable<HttpResponse<Blob>> {\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/octet-stream');\r\n\r\n        return this.http.get(url(`batch-download-result/${batchId}/result.zip`), {\r\n            headers,\r\n            observe: 'response',\r\n            responseType: 'blob'\r\n        });\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-cols',\r\n  templateUrl: './ct-cols.component.html',\r\n  styleUrls: ['./ct-cols.component.scss']\r\n})\r\nexport class CtColsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-pre',\r\n  templateUrl: './ct-pre.component.html',\r\n  styleUrls: ['./ct-pre.component.scss']\r\n})\r\nexport class CtPreComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-body-row',\r\n  templateUrl: './ct-section-body-row.component.html',\r\n  styleUrls: ['./ct-section-body-row.component.scss']\r\n})\r\nexport class CtSectionBodyRowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Injectable } from '@angular/core';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { BatchService } from './batch.service';\r\nimport { BatchesResult } from './BatchesResult';\r\nimport { ExecStatuses } from './ExecStatuses';\r\n\r\nexport interface BatchExexStatusChangesResult {\r\n    isNew: boolean;\r\n    isFinished: boolean;\r\n    isError: boolean;\r\n}\r\n\r\nconst FINISHED_STATE: number = 4;\r\nconst ERROR_STATE: number = -1;\r\n\r\nclass StatusChecker {\r\n    private records: ExecStatuses[] = [];\r\n\r\n    write(execStatuses: ExecStatuses): void {\r\n        this.records.push(execStatuses);\r\n    }\r\n\r\n    masterCheck(callback: (result: BatchExexStatusChangesResult) => void): void {\r\n        const next: ExecStatuses = this.records[this.records.length - 1];\r\n        const prev: ExecStatuses = this.records[this.records.length - 2];\r\n        if (next && prev) {\r\n            const nextExecStatusMap: Map<number, number> = new Map(next.statuses.map(v => [v.id, v.state]));\r\n            const prevExecStatusMap: Map<number, number> = new Map(prev.statuses.map(v => [v.id, v.state]));\r\n\r\n            const isNew: boolean = this.isNew(prevExecStatusMap, nextExecStatusMap);\r\n            const isFinished: boolean = this.checkState(prevExecStatusMap, nextExecStatusMap, FINISHED_STATE);\r\n            const isError: boolean = this.checkState(prevExecStatusMap, nextExecStatusMap, ERROR_STATE);\r\n\r\n            this.records = [next];\r\n            if (callback) { callback({ isNew, isFinished, isError }); }\r\n        }\r\n    }\r\n\r\n    private isNew(prevMap: Map<number, number>, nextMap: Map<number, number>): boolean {\r\n        const checks: boolean[] = [];\r\n        nextMap.forEach((value, key) => {\r\n            if (prevMap.has(key)) {\r\n                checks.push(false);\r\n            } else {\r\n                checks.push(true);\r\n            }\r\n        });\r\n        if (checks.indexOf(true) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    checkState(\r\n        prevMap: Map<number, number>,\r\n        nextMap: Map<number, number>,\r\n        state: number\r\n    ): boolean {\r\n        const checks: boolean[] = [];\r\n        prevMap.forEach((value, key) => {\r\n            if (prevMap.has(key) && nextMap.has(key)) {\r\n                if (nextMap.get(key) === state) {\r\n                    if (prevMap.get(key) !== state) {\r\n                        checks.push(true);\r\n                    } else {\r\n                        checks.push(false);\r\n                    }\r\n                } else {\r\n                    checks.push(false);\r\n                }\r\n            } else {\r\n                checks.push(false);\r\n            }\r\n        });\r\n        if (checks.indexOf(true) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BatchExexStatusService {\r\n    private isIntervalStarted: boolean = false;\r\n    private interval: number = environment.batchInterval || 15000;\r\n    private statusChecker: StatusChecker = new StatusChecker();\r\n\r\n    getStatuses: BehaviorSubject<ExecStatuses> = new BehaviorSubject(null);\r\n    getChanges: BehaviorSubject<BatchExexStatusChangesResult> = new BehaviorSubject(null);\r\n\r\n    constructor(private batchService: BatchService) { }\r\n\r\n    stopIntervalRequset(): void {\r\n        this.isIntervalStarted = false;\r\n    }\r\n\r\n    startIntervalRequset(): void {\r\n        if (this.isIntervalStarted) { }\r\n        else {\r\n            this.isIntervalStarted = true;\r\n            this.intervalRequset();\r\n        }\r\n    }\r\n\r\n    private intervalRequset(): void {\r\n        if (this.isIntervalStarted) {\r\n            this.batchService.batchExecStatuses().subscribe({\r\n                next: result => {\r\n                    this.statusChecker.write(result);\r\n                    this.statusChecker.masterCheck(r => this.getChanges.next(r));\r\n                    this.getStatuses.next(result);\r\n                    this.repeatRequest();\r\n                },\r\n                error: () => { }\r\n            });\r\n        }\r\n    }\r\n\r\n    private repeatRequest(): void {\r\n        if (this.isIntervalStarted) {\r\n            setTimeout(() => this.intervalRequset(), this.interval);\r\n        }\r\n    }\r\n\r\n    updateBatchesResultByStatuses(batchesResult: BatchesResult, statuses: ExecStatuses): void {\r\n        batchesResult?.batches.content.forEach(batch => {\r\n            statuses?.statuses.forEach(status => {\r\n                if (batch.batch.id === status.id) {\r\n                    batch.execState = status.state;\r\n                    batch.batch.execState = status.state;\r\n                }\r\n            });\r\n        });\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { settings } from 'cluster';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AuthenticationService, AuthenticationServiceEventChange, AuthenticationServiceEventLogin } from '../authentication';\r\nimport { defaultSettings, Settings, SettingsLanguage, SettingsTheme } from './Settings';\r\n\r\nexport class SettingsServiceEventChange {\r\n    settings: Settings;\r\n    constructor(settings: Settings) { this.settings = JSON.parse(JSON.stringify(settings)); }\r\n}\r\nexport type SettingsServiceEvent = SettingsServiceEventChange;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SettingsService {\r\n    private localStorageName: string = 'settingsService';\r\n    private storageDefaultData: Settings = defaultSettings;\r\n\r\n    events: BehaviorSubject<SettingsServiceEvent> = new BehaviorSubject<SettingsServiceEvent>(null);\r\n\r\n    constructor(\r\n        private authenticationService: AuthenticationService\r\n    ) {\r\n        this.authenticationService.events.subscribe(event => {\r\n            if (event instanceof AuthenticationServiceEventChange) {\r\n                if (event.user && event.user.username) {\r\n                    this.localStorageName = event.user.username + ':' + 'settingsService';\r\n                    this.getSettings(settings => {\r\n                        this.updateTheme(settings.theme);\r\n                        this.update(settings);\r\n                    });\r\n                } else {\r\n                    this.localStorageName = 'settingsService';\r\n                    this.getSettings(settings => {\r\n                        this.updateTheme(settings.theme);\r\n                        this.update({ ...settings, ...defaultSettings });\r\n                    });\r\n                }\r\n            }\r\n\r\n            if (event instanceof AuthenticationServiceEventLogin) {\r\n                this.getSettings(settings => this.update({\r\n                    ...settings,\r\n                    sidenav: true\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    private update(newStorageData: Settings): void {\r\n        this.setToLocalStorage(newStorageData);\r\n        this.events.next(new SettingsServiceEventChange(newStorageData));\r\n    }\r\n\r\n    toggleSidenav(): void {\r\n        this.getSettings(settings => this.update({\r\n            ...settings,\r\n            sidenav: !settings.sidenav\r\n        }));\r\n    }\r\n\r\n    toggleLanguage(value: SettingsLanguage): void {\r\n        this.getSettings(settings => this.update({\r\n            ...settings,\r\n            language: value\r\n        }));\r\n    }\r\n\r\n    toggleTheme(): void {\r\n        this.getSettings(settings => {\r\n            const theme: SettingsTheme = (settings.theme === SettingsTheme.Dark) ?\r\n                SettingsTheme.Light : SettingsTheme.Dark;\r\n            this.updateTheme(theme);\r\n            this.update({ ...settings, theme });\r\n        });\r\n    }\r\n\r\n    toggleBatchFilter(value: boolean): void {\r\n        this.getSettings(settings => this.update({\r\n            ...settings,\r\n            batchFilter: value\r\n        }));\r\n    }\r\n\r\n    private getSettings(callback: (settings: Settings) => void): void {\r\n        const settings: Settings = this.getFromLocalStorage();\r\n        callback(settings as Settings);\r\n    }\r\n\r\n    private updateTheme(theme: SettingsTheme): void {\r\n        const body: HTMLElement = document.querySelector('body');\r\n        body.classList.remove('dark-theme');\r\n        body.classList.remove('light-theme');\r\n        switch (theme) {\r\n            case SettingsTheme.Dark:\r\n                body.classList.add('dark-theme');\r\n                break;\r\n            case SettingsTheme.Light:\r\n                body.classList.add('light-theme');\r\n                break;\r\n            default:\r\n                body.classList.add('light-theme');\r\n                break;\r\n        }\r\n    }\r\n\r\n    clearLocalStorage(): void {\r\n        localStorage.removeItem(this.localStorageName);\r\n    }\r\n\r\n    private setToLocalStorage(newStorageData: Settings): void {\r\n        localStorage.setItem(this.localStorageName,\r\n            JSON.stringify(Object.assign(\r\n                {},\r\n                this.storageDefaultData,\r\n                newStorageData)\r\n            )\r\n        );\r\n    }\r\n\r\n    private getFromLocalStorage(): Settings {\r\n        return Object.assign(\r\n            {},\r\n            this.storageDefaultData,\r\n            JSON.parse(localStorage.getItem(this.localStorageName))\r\n        );\r\n    }\r\n}","export enum Role {\r\n    ROLE_MANAGER = 'ROLE_MANAGER',\r\n    ROLE_OPERATOR = 'ROLE_OPERATOR',\r\n    ROLE_DATA = 'ROLE_DATA',\r\n\r\n    ROLE_SERVER_REST_ACCESS = 'ROLE_SERVER_REST_ACCESS',\r\n    ROLE_ASSET_REST_ACCESS = 'ROLE_ASSET_REST_ACCESS',\r\n    ROLE_BILLING = 'ROLE_BILLING',\r\n\r\n    ROLE_MASTER_ADMIN = 'ROLE_MASTER_ADMIN',\r\n    ROLE_MASTER_OPERATOR = 'ROLE_MASTER_OPERATOR',\r\n    ROLE_MASTER_SUPPORT = 'ROLE_MASTER_SUPPORT',\r\n    ROLE_MASTER_ASSET_MANAGER = 'ROLE_MASTER_ASSET_MANAGER',\r\n\r\n    ROLE_ADMIN = 'ROLE_ADMIN',\r\n\r\n    // \r\n\r\n    Manager = 'ROLE_MANAGER',\r\n    Operator = 'ROLE_OPERATOR',\r\n    Data = 'ROLE_DATA',\r\n\r\n    ServerrestAccess = 'ROLE_SERVER_REST_ACCESS',\r\n    AssetRestAccess = 'ROLE_ASSET_REST_ACCESS',\r\n    Billing = 'ROLE_BILLING',\r\n\r\n    MasterAdmin = 'ROLE_MASTER_ADMIN',\r\n    MasterOpertator = 'ROLE_MASTER_OPERATOR',\r\n    MasterSupport = 'ROLE_MASTER_SUPPORT',\r\n    MasterAssetManager = 'ROLE_MASTER_ASSET_MANAGER',\r\n\r\n    Admin = 'ROLE_ADMIN'\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-col',\r\n  templateUrl: './ct-col.component.html',\r\n  styleUrls: ['./ct-col.component.scss']\r\n})\r\nexport class CtColComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, ElementRef, OnInit, ViewChild, Input, OnChanges, EventEmitter, Output } from '@angular/core';\r\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n    selector: 'ct-file-upload',\r\n    templateUrl: './ct-file-upload.component.html',\r\n    styleUrls: ['./ct-file-upload.component.scss']\r\n})\r\nexport class CtFileUploadComponent implements OnInit, OnChanges {\r\n    @Output() changed: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n    @ViewChild('fileInput', { static: true }) fileInput: ElementRef;\r\n    @Input() buttonTitle: string;\r\n    @Input() acceptTypes: string = '';\r\n\r\n\r\n    value: string = '';\r\n    buttonTitleString: string;\r\n    accept: string;\r\n\r\n    ngOnInit(): void {\r\n        this.buttonTitleString = this.buttonTitle || 'Select File';\r\n    }\r\n\r\n    ngOnChanges(): void {\r\n        this.buttonTitleString = this.buttonTitle || 'Select File';\r\n    }\r\n\r\n    fileChanged(): void {\r\n        this.value = this.fileInput.nativeElement.value;\r\n        this.changed.emit('fileChanged');\r\n    }\r\n\r\n    removeFile(): void {\r\n        this.fileInput.nativeElement.value = '';\r\n        this.value = '';\r\n        this.changed.emit('fileChanged');\r\n    }\r\n}","<input #fileInput hidden=\"hidden\" type=\"file\" name=\"file\" (change)=\"fileChanged()\" accept=\"{{acceptTypes}}\" />\r\n<button *ngIf=\"!value\" mat-flat-button=\"mat-flat-button\" wide=\"wide\" color=\"primary\"\r\n    (click)=\"fileInput.click()\">{{buttonTitleString}}</button>\r\n<div class=\"file\" *ngIf=\"value\">\r\n    <div class=\"file__value\">{{value}}</div>\r\n    <div class=\"file__close\" (click)=\"removeFile()\">\r\n        <mat-icon>close</mat-icon>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-body',\r\n  templateUrl: './ct-section-body.component.html',\r\n  styleUrls: ['./ct-section-body.component.scss']\r\n})\r\nexport class CtSectionBodyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-flex-item',\r\n  templateUrl: './ct-flex-item.component.html',\r\n  styleUrls: ['./ct-flex-item.component.scss']\r\n})\r\nexport class CtFlexItemComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Authority } from './Authority';\r\n\r\nexport class User {\r\n    authorities: Authority[];\r\n    publicName: string;\r\n    username: string;\r\n    token: string;\r\n\r\n    constructor(data: User) {\r\n        this.publicName = data?.publicName || '';\r\n        this.username = data?.username || '';\r\n        this.authorities = data?.authorities || [];\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'billing',\r\n  templateUrl: './billing.component.html',\r\n  styleUrls: ['./billing.component.scss']\r\n})\r\nexport class BillingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  billing works!\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-hint',\r\n  templateUrl: './ct-hint.component.html',\r\n  styleUrls: ['./ct-hint.component.scss']\r\n})\r\nexport class CtHintComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nav-pilot',\r\n  templateUrl: './nav-pilot.component.html',\r\n  styleUrls: ['./nav-pilot.component.scss']\r\n})\r\nexport class NavPilotComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-list class=\"page-sidenav-list\" color=\"primary\">\r\n    <mat-list-item>\r\n        <button class=\"mat-button\" mat-button=\"\" routerLinkActive=\"active\" routerLink=\"/pilot/process-resources\">Process Resource</button>\r\n    </mat-list-item>\r\n</mat-list>","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation, ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NotificationAnimationType } from '../../enums/notification-animation-type.enum';\r\nimport { Notification } from '../../interfaces/notification.type';\r\nimport { Options, Position } from '../../interfaces/options.type';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'simple-notifications',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './simple-notifications.component.html',\r\n  styleUrls: ['./simple-notifications.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SimpleNotificationsComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private service: NotificationsService,\r\n    private cd: ChangeDetectorRef\r\n  ) { }\r\n\r\n  @Input() set options(opt: Options) {\r\n    this.usingComponentOptions = true;\r\n    this.attachChanges(opt);\r\n  }\r\n\r\n  @Output() create = new EventEmitter();\r\n  @Output() destroy = new EventEmitter();\r\n\r\n  notifications: Notification[] = [];\r\n  position: Position = ['bottom', 'right'];\r\n\r\n  private lastNotificationCreated: Notification;\r\n  private listener: Subscription;\r\n\r\n  // Received values\r\n  private lastOnBottom = true;\r\n  private maxStack = 8;\r\n  private preventLastDuplicates: any = false;\r\n  private preventDuplicates = false;\r\n\r\n  // Sent values\r\n  timeOut = 0;\r\n  maxLength = 0;\r\n  clickToClose = true;\r\n  clickIconToClose = false;\r\n  showProgressBar = true;\r\n  pauseOnHover = true;\r\n  theClass = '';\r\n  rtl = false;\r\n  animate: NotificationAnimationType = NotificationAnimationType.FromRight;\r\n\r\n  private usingComponentOptions = false;\r\n\r\n  ngOnInit() {\r\n\r\n    /**\r\n     * Only attach global options if config\r\n     * options were never sent through input\r\n     */\r\n    if (!this.usingComponentOptions) {\r\n      this.attachChanges(\r\n        this.service.globalOptions\r\n      );\r\n    }\r\n\r\n    this.listener = this.service.emitter\r\n      .subscribe(item => {\r\n        switch (item.command) {\r\n          case 'cleanAll':\r\n            this.notifications = [];\r\n            break;\r\n\r\n          case 'clean':\r\n            this.cleanSingle(item.id!);\r\n            break;\r\n\r\n          case 'set':\r\n            if (item.add) {\r\n              this.add(item.notification!);\r\n            } else {\r\n              this.defaultBehavior(item);\r\n            }\r\n            break;\r\n\r\n          default:\r\n            this.defaultBehavior(item);\r\n            break;\r\n        }\r\n        if (!(this.cd as ViewRef).destroyed) {\r\n          this.cd.detectChanges();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.listener) {\r\n      this.listener.unsubscribe();\r\n    }\r\n    this.cd.detach();\r\n  }\r\n\r\n  // Default behavior on event\r\n  defaultBehavior(value: any): void {\r\n    this.notifications.splice(this.notifications.indexOf(value.notification), 1);\r\n    this.destroy.emit(this.buildEmit(value.notification, false));\r\n  }\r\n\r\n\r\n  // Add the new notification to the notification array\r\n  add(item: Notification): void {\r\n    item.createdOn = new Date();\r\n\r\n    const toBlock: boolean = this.preventLastDuplicates || this.preventDuplicates ? this.block(item) : false;\r\n\r\n    // Save this as the last created notification\r\n    this.lastNotificationCreated = item;\r\n    // Override icon if set\r\n    if (item.override && item.override.icons && item.override.icons[item.type]) {\r\n      item.icon = item.override.icons[item.type];\r\n    }\r\n\r\n    if (!toBlock) {\r\n      // Check if the notification should be added at the start or the end of the array\r\n      if (this.lastOnBottom) {\r\n        if (this.notifications.length >= this.maxStack) {\r\n          this.notifications.splice(0, 1);\r\n        }\r\n\r\n        this.notifications.push(item);\r\n      } else {\r\n        if (this.notifications.length >= this.maxStack) {\r\n          this.notifications.splice(this.notifications.length - 1, 1);\r\n        }\r\n\r\n        this.notifications.splice(0, 0, item);\r\n      }\r\n\r\n      this.create.emit(this.buildEmit(item, true));\r\n    }\r\n  }\r\n\r\n  // Check if notifications should be prevented\r\n  block(item: Notification): boolean {\r\n\r\n    const toCheck = item.html ? this.checkHtml : this.checkStandard;\r\n\r\n    if (this.preventDuplicates && this.notifications.length > 0) {\r\n      for (const notification of this.notifications) {\r\n        if (toCheck(notification, item)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.preventLastDuplicates) {\r\n\r\n      let comp: Notification;\r\n\r\n      if (this.preventLastDuplicates === 'visible' && this.notifications.length > 0) {\r\n        if (this.lastOnBottom) {\r\n          comp = this.notifications[this.notifications.length - 1];\r\n        } else {\r\n          comp = this.notifications[0];\r\n        }\r\n      } else if (this.preventLastDuplicates === 'all' && this.lastNotificationCreated) {\r\n        comp = this.lastNotificationCreated;\r\n      } else {\r\n        return false;\r\n      }\r\n      return toCheck(comp, item);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  checkStandard(checker: Notification, item: Notification): boolean {\r\n    return checker.type === item.type && checker.title === item.title && checker.content === item.content;\r\n  }\r\n\r\n  checkHtml(checker: Notification, item: Notification): boolean {\r\n    return checker.html ?\r\n      checker.type === item.type && checker.title === item.title && checker.content === item.content && checker.html === item.html :\r\n      false;\r\n  }\r\n\r\n  // Attach all the changes received in the options object\r\n  attachChanges(options: any) {\r\n    for (const key in options) {\r\n      if (this.hasOwnProperty(key)) {\r\n        (this as any)[key] = options[key];\r\n      } else if (key === 'icons') {\r\n        this.service.icons = options[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  buildEmit(notification: Notification, to: boolean) {\r\n    const toEmit: Notification = {\r\n      createdOn: notification.createdOn,\r\n      type: notification.type,\r\n      icon: notification.icon,\r\n      id: notification.id\r\n    };\r\n\r\n    if (notification.html) {\r\n      toEmit.html = notification.html;\r\n    } else {\r\n      toEmit.title = notification.title;\r\n      toEmit.content = notification.content;\r\n    }\r\n\r\n    if (!to) {\r\n      toEmit.destroyedOn = new Date();\r\n    }\r\n\r\n    return toEmit;\r\n  }\r\n\r\n  cleanSingle(id: string): void {\r\n    let indexOfDelete = 0;\r\n    let doDelete = false;\r\n    let noti;\r\n\r\n    this.notifications.forEach((notification, idx) => {\r\n      if (notification.id === id) {\r\n        indexOfDelete = idx;\r\n        noti = notification;\r\n        doDelete = true;\r\n      }\r\n    });\r\n\r\n    if (doDelete) {\r\n      this.notifications.splice(indexOfDelete, 1);\r\n      this.destroy.emit(this.buildEmit(noti, false));\r\n    }\r\n  }\r\n}\r\n","<div class=\"simple-notification-wrapper\" [ngClass]=\"position\">\r\n    <simple-notification\r\n            *ngFor=\"let a of notifications; let i = index\"\r\n            [item]=\"a\"\r\n            [timeOut]=\"timeOut\"\r\n            [clickToClose]=\"clickToClose\"\r\n            [clickIconToClose]=\"clickIconToClose\"\r\n            [maxLength]=\"maxLength\"\r\n            [showProgressBar]=\"showProgressBar\"\r\n            [pauseOnHover]=\"pauseOnHover\"\r\n            [theClass]=\"theClass\"\r\n            [rtl]=\"rtl\"\r\n            [animate]=\"animate\"\r\n            [position]=\"i\">\r\n    </simple-notification>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { UIStateComponent } from './models/UIStateComponent';\r\nimport { AuthenticationService, AuthenticationServiceEventChange, AuthenticationServiceEventLogin, AuthenticationServiceEventLogout } from './services/authentication';\r\nimport { BatchExexStatusService } from './services/batch/BatchExecStatusService';\r\nimport { SettingsService, SettingsServiceEventChange } from './services/settings/settings.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    constructor(\r\n        private translate: TranslateService,\r\n        private batchExexStatusService: BatchExexStatusService,\r\n        readonly authenticationService: AuthenticationService,\r\n        private settingsService: SettingsService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscribeSubscription(\r\n            this.settingsService.events.subscribe(event => {\r\n                if (event instanceof SettingsServiceEventChange) {\r\n                    this.translate.use(event.settings.language);\r\n                }\r\n            })\r\n        );\r\n\r\n        this.subscribeSubscription(\r\n            this.authenticationService.events.subscribe(event => {\r\n                if (event instanceof AuthenticationServiceEventChange) {\r\n                    if (event.user) {\r\n                        this.batchExexStatusService.startIntervalRequset();\r\n                    }\r\n                }\r\n\r\n                if (event instanceof AuthenticationServiceEventLogout) {\r\n                    this.batchExexStatusService.stopIntervalRequset();\r\n                }\r\n            })\r\n        );\r\n    }\r\n    ngOnDestroy(): void { this.unsubscribeSubscriptions(); }\r\n}","<app-view></app-view>\r\n<simple-notifications></simple-notifications>\r\n","import { BatchExecStatus } from './BatchExecStatus';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\nexport class BatchExexStatusComparer {\r\n    private isFirstBacth = true;\r\n\r\n    private list: BatchExecStatus[] = [];\r\n    private statuses: number[] = [];\r\n\r\n    notification: BehaviorSubject < boolean > = new BehaviorSubject(false);\r\n\r\n    constructor(statuses: number[]) {\r\n        this.statuses = statuses;\r\n    }\r\n\r\n    takeApart(newList: BatchExecStatus[]) {\r\n        if (this.isFirstBacth) {\r\n            this.isFirstBacth = false;\r\n        } else {\r\n            const differenceList: BatchExecStatus[] = [];\r\n\r\n            newList.forEach(newElem => {\r\n                let elem = this.list.find(elem => elem.id === newElem.id);\r\n                if (elem) {\r\n                    // find difference state\r\n                    if (elem.state !== newElem.state) {\r\n                        differenceList.push(newElem);\r\n                    }\r\n                } else {\r\n                    //  new elem\r\n                    differenceList.push(newElem);\r\n                }\r\n            });\r\n\r\n            this.checkStatus(differenceList);\r\n        }\r\n        this.list = Array.from(newList);\r\n    }\r\n\r\n    private checkStatus(list: BatchExecStatus[]) {\r\n        let exist: boolean = false;\r\n        list.forEach( (elem: BatchExecStatus) => {\r\n            const index: number = this.statuses.findIndex((i: number) => i === elem.state) + 1;\r\n            if (index) {\r\n                exist = true;\r\n            }\r\n        });\r\n        this.notification.next(exist);\r\n    }\r\n}","import {Icons} from '../interfaces/icons';\r\n\r\nexport const DEFAULT_ICONS: Icons = {\r\n  alert: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\r\n        </svg>\r\n    `,\r\n  error: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n            <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\r\n        </svg>\r\n    `,\r\n  info: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"/>\r\n        </svg>\r\n    `,\r\n  success: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\r\n        </svg>\r\n    `,\r\n  warn: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" width=\"64\" viewBox=\"0 0 64 64\" height=\"64\">\r\n          <circle cx=\"32.086\" cy=\"50.142\" r=\"2.256\"/>\r\n          <path d=\"M30.08 25.012V42.32c0 1.107.897 2.005 2.006 2.005s2.006-.897 2.006-2.005V25.012c0-1.107-.897-2.006-2.006-2.006s-2.006.898-2.006 2.006z\"/>\r\n          <path d=\"M63.766 59.234L33.856 3.082c-.697-1.308-2.844-1.308-3.54 0L.407 59.234c-.331.622-.312 1.372.051 1.975.362.605 1.015.975 1.72.975h59.816c.705 0 1.357-.369 1.721-.975.361-.603.381-1.353.051-1.975zM5.519 58.172L32.086 8.291l26.568 49.881H5.519z\"/>\r\n        </svg>\r\n    `\r\n};\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-footer-row',\r\n  templateUrl: './ct-section-footer-row.component.html',\r\n  styleUrls: ['./ct-section-footer-row.component.scss']\r\n})\r\nexport class CtSectionFooterRowComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '@app/services/authentication/authentication.service';\r\n@Component({\r\n    selector: 'login-view',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n    username: string = '';\r\n    password: string = '';\r\n\r\n    form: FormGroup = new FormGroup({\r\n        username: new FormControl('', [Validators.required, Validators.minLength(1)]),\r\n        password: new FormControl('', [Validators.required, Validators.minLength(1)]),\r\n    });\r\n\r\n    constructor(\r\n        private authenticationService: AuthenticationService,\r\n    ) { }\r\n\r\n    login(): void {\r\n        if (this.form.valid) {\r\n            this.authenticationService.login(\r\n                this.form.value.username,\r\n                this.form.value.password\r\n            );\r\n        }\r\n    }\r\n}","\r\n<ct-section>\r\n  <form action=\"\" [formGroup]=\"form\" novalidate=\"novalidate\" autocomplete=\"off\">\r\n    <ct-section-header>\r\n      <ct-section-header-row>\r\n        <ct-heading>Sign In</ct-heading>\r\n      </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n      <ct-section-body-row>\r\n        <ct-section-content>\r\n          <mat-form-field appearance=\"outline\" style=\" margin-bottom: -1.34375em\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput=\"matInput\" formControlName=\"username\" autocomplete=\"off\"/>\r\n          </mat-form-field>\r\n        </ct-section-content>\r\n      </ct-section-body-row>\r\n      <ct-section-body-row>\r\n        <ct-section-content>\r\n          <mat-form-field appearance=\"outline\" style=\" margin-bottom: -1.34375em\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput=\"matInput\" type=\"password\" autocomplete=\"off\" formControlName=\"password\"/>\r\n          </mat-form-field>\r\n        </ct-section-content>\r\n      </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n      <ct-section-footer-row>\r\n        <ct-flex justify-content=\"space-between\" gap=\"8px\" align-items=\"center\">\r\n          <ct-flex-item>\r\n            <button class=\"mat-flat-button\" mat-button=\"\" (click)=\"login()\" color=\"primary\" title=\"\">Sign In</button>\r\n          </ct-flex-item>\r\n        </ct-flex>\r\n      </ct-section-footer-row>\r\n    </ct-section-footer>\r\n  </form>\r\n</ct-section>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { PageableDefault } from '@src/app/models/PageableDefault';\r\n\r\n@Component({\r\n    selector: 'ct-table-pagination',\r\n    templateUrl: './ct-table-pagination.component.html',\r\n    styleUrls: ['./ct-table-pagination.component.sass']\r\n})\r\nexport class CtTablePaginationComponent {\r\n    @Output() next: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output() prev: EventEmitter<void> = new EventEmitter<void>();\r\n    @Input() globalDisable: boolean;\r\n    @Input() pageableDefault: PageableDefault;\r\n\r\n    _next(): void {\r\n        this.next.emit();\r\n    }\r\n    _prev(): void {\r\n        this.prev.emit();\r\n    }\r\n}\r\n","<ct-flex justify-content=\"flex-start\" gap=\"8px\" *ngIf=\"pageableDefault\">\r\n    <ct-flex-item>\r\n        <button mat-flat-button color=\"primary\" (click)=\"_prev()\" [disabled]=\"globalDisable || pageableDefault.first\">\r\n            <mat-icon>arrow_back_ios</mat-icon>\r\n        </button>\r\n    </ct-flex-item>\r\n    <ct-flex-item>\r\n        <button mat-flat-button color=\"primary\" (click)=\"_next()\" [disabled]=\"globalDisable || pageableDefault.last\">\r\n            <mat-icon>arrow_forward_ios</mat-icon>\r\n        </button>\r\n    </ct-flex-item>\r\n</ct-flex>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-content',\r\n  templateUrl: './ct-content.component.html',\r\n  styleUrls: ['./ct-content.component.scss']\r\n})\r\nexport class CtContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-heading',\r\n  templateUrl: './ct-heading.component.html',\r\n  styleUrls: ['./ct-heading.component.scss']\r\n})\r\nexport class CtHeadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { environment } from '@src/environments/environment';\r\n\r\nexport enum SettingsTheme {\r\n    Dark = 'dark',\r\n        Light = 'light'\r\n}\r\n\r\nexport enum SettingsLanguage {\r\n    RU = 'RU',\r\n        EN = 'EN'\r\n}\r\n\r\nexport interface Settings {\r\n    theme: SettingsTheme;\r\n    sidenav: boolean;\r\n    sidenavButton: boolean;\r\n    language: SettingsLanguage;\r\n    batchFilter: boolean;\r\n}\r\n\r\nexport const setOfLanguages: Set < SettingsLanguage > = new Set([\r\n    SettingsLanguage.EN,\r\n    SettingsLanguage.RU,\r\n]);\r\n\r\nexport const defaultSettings: Settings = {\r\n    theme: SettingsTheme.Light,\r\n    batchFilter: false,\r\n    sidenav: true,\r\n    sidenavButton: true,\r\n    language: setOfLanguages.has(environment.language as SettingsLanguage) ?\r\n        (environment.language as SettingsLanguage) : SettingsLanguage.EN\r\n};","import { CommonModule } from '@angular/common';\r\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AuthGuard } from '@app/guards/auth/auth.guard';\r\nimport { AccountsService } from '@app/services/accounts/accounts.service';\r\nimport { AuthenticationService } from '@app/services/authentication/authentication.service';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { AppDialogConfirmationComponent } from './components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { AppIndexComponent } from './components/app-index/app-index.component';\r\nimport { AppViewComponent } from './components/app-view/app-view.component';\r\nimport { BatchChangeNotificationComponent } from './components/batch-change-notification/batch-change-notification.component';\r\nimport { BillingComponent } from './components/billing/billing.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoremIndexComponent } from './components/lorem-index/lorem-index.component';\r\nimport { NavPilotComponent } from './components/nav-pilot/nav-pilot.component';\r\nimport { PilotComponent } from './components/pilot/pilot.component';\r\nimport { JwtInterceptor } from './jwt.interceptor';\r\nimport { SimpleNotificationsModule } from './modules/angular2-notifications/simple-notifications.module';\r\nimport { CopyRightModule } from './modules/copy-right/copy-right.module';\r\nimport { CtModule } from './modules/ct/ct.module';\r\nimport { MaterialAppModule } from './ngmaterial.module';\r\nimport { NotificationsInterceptor } from './notifications.interceptor';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n    return new TranslateHttpLoader(http, './assets/i18n/');\r\n}\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        AppViewComponent,\r\n        AppIndexComponent,\r\n        PilotComponent,\r\n        NavPilotComponent,\r\n        LoginComponent,\r\n        BillingComponent,\r\n        BatchChangeNotificationComponent,\r\n        LoremIndexComponent,\r\n        AppDialogConfirmationComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MaterialAppModule,\r\n        CtModule,\r\n        CopyRightModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        SimpleNotificationsModule.forRoot()\r\n    ],\r\n    entryComponents: [\r\n        AppDialogConfirmationComponent,\r\n    ],\r\n    providers: [\r\n        AuthGuard,\r\n        AuthenticationService,\r\n        AccountsService,\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: JwtInterceptor,\r\n            multi: true\r\n        },\r\n        {\r\n            provide: HTTP_INTERCEPTORS,\r\n            useClass: NotificationsInterceptor,\r\n            multi: true\r\n        }\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData } from '@src/app/helpers/generateFormData';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { ExecContextResult } from '../source-codes/ExecContextResult';\r\nimport { ExecContextsResult } from '../source-codes/ExecContextsResult';\r\nimport { ExecContextStateResult } from '../source-codes/ExecContextStateResult';\r\nimport { SimpleExecContextAddingResult } from '../source-codes/SimpleExecContextAddingResult';\r\nimport { TaskExecInfo } from './TaskExecInfo';\r\n\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher/source-code/${s}`;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ExecContextService {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    execContexts(sourceCodeId: string, page: string): Observable<ExecContextsResult> {\r\n        return this.http.get<ExecContextsResult>(\r\n            url(`exec-contexts/${sourceCodeId}`),\r\n            { params: { page } }\r\n        );\r\n    }\r\n\r\n    execContextAddCommitUID(uid: string, variable: string): Observable<SimpleExecContextAddingResult> {\r\n        return this.http.post<SimpleExecContextAddingResult>(\r\n            url(`uid-exec-context-add-commit`),\r\n            generateFormData({ uid, variable })\r\n        );\r\n    }\r\n\r\n    execContextAddCommit(sourceCodeId: string, variable: string): Observable<ExecContextResult> {\r\n        return this.http.post<ExecContextResult>(\r\n            url(`exec-context-add-commit`),\r\n            generateFormData({ sourceCodeId, variable })\r\n        );\r\n    }\r\n\r\n    execContextEdit(sourceCodeId: string, execContextId: string): Observable<ExecContextResult> {\r\n        return this.http.get<ExecContextResult>(url(`exec-context/${sourceCodeId}/${execContextId}`));\r\n    }\r\n\r\n    execContextDeleteCommit(sourceCodeId: string, execContextId: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(\r\n            url(`exec-context-delete-commit/`),\r\n            generateFormData({ sourceCodeId, execContextId })\r\n        );\r\n    }\r\n\r\n    execContextTargetState(sourceCodeId: string, state: string, id: string): Observable<OperationStatusRest> {\r\n        return this.http.get<OperationStatusRest>(url(`exec-context-target-state/${sourceCodeId}/${state}/${id}`));\r\n\r\n    }\r\n\r\n    execContextsState(sourceCodeId: string, execContextId: string): Observable<ExecContextStateResult> {\r\n        return this.http.get<ExecContextStateResult>(url(`exec-context-state/${sourceCodeId}/${execContextId}`));\r\n    }\r\n\r\n\r\n\r\n    // @GetMapping(\"/exec-context-task-exec-info/{sourceCodeId}/{execContextId}/{taskId}\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA', 'MANAGER', 'OPERATOR')\")\r\n    // public ExecContextApiData.TaskExecInfo taskExecInfo(@PathVariable Long sourceCodeId, @PathVariable Long execContextId, @PathVariable Long taskId, Authentication authentication) {\r\n    //     DispatcherContext context = userContextService.getContext(authentication);\r\n    //     ExecContextApiData.TaskExecInfo execContextState = execContextTopLevelService.getTaskExecInfo(sourceCodeId, execContextId, taskId);\r\n    //     return execContextState;\r\n    // }\r\n    taskExecInfo(sourceCodeId: string, execContextId: string, taskId: string): Observable<TaskExecInfo> {\r\n        return this.http.get<TaskExecInfo>(url(`exec-context-task-exec-info/${sourceCodeId}/${execContextId}/${taskId}`));\r\n    }\r\n\r\n\r\n    downloadVariable(execContextId: string, variableId: string): Observable<HttpResponse<Blob>> {\r\n        let headers: HttpHeaders = new HttpHeaders();\r\n        headers = headers.append('Accept', 'application/octet-stream');\r\n        return this.http.get(url(`exec-context/${execContextId}/download-variable/${variableId}`), {\r\n            headers,\r\n            observe: 'response',\r\n            responseType: 'blob'\r\n        });\r\n    }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { AudioNotification } from '@src/app/services/audioNotification/audioNotification.service';\r\nimport { BatchExexStatusService } from '@src/app/services/batch/BatchExecStatusService';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'batch-change-notification',\r\n    templateUrl: './batch-change-notification.component.html',\r\n    styleUrls: ['./batch-change-notification.component.sass']\r\n})\r\nexport class BatchChangeNotificationComponent implements OnInit, OnDestroy {\r\n    isActive: boolean = false;\r\n    subs: Subscription[] = []\r\n\r\n    constructor(\r\n        private batchExexStatusService: BatchExexStatusService,\r\n        private audioNotification: AudioNotification,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.batchExexStatusService.getChanges.subscribe(result => {\r\n            if (result?.isFinished) {\r\n                this.audioNotification.play();\r\n                this.isActive = true;\r\n            }\r\n        })\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.subs.forEach(s => s.unsubscribe())\r\n    }\r\n    \r\n    hide() {\r\n        this.isActive = false;\r\n    }\r\n}\r\n","<ct-flex justify-content=\"space-between\" align-items=\"center\">\r\n    <mat-icon class=\"mat-icon\" style=\"transform: scale(1.25); user-select: none;\" aria-hidden=\"true\" *ngIf=\"isActive\" (click)=\"hide()\">check_circle_outline</mat-icon>\r\n</ct-flex>","import {DEFAULT_ICONS} from './default-icons.const';\r\nimport {Options} from '../interfaces/options.type';\r\nimport {NotificationAnimationType} from '../enums/notification-animation-type.enum';\r\n\r\nexport const DEFAULT_OPTIONS: Options = {\r\n  position: ['bottom', 'right'],\r\n  timeOut: 0,\r\n  showProgressBar: true,\r\n  pauseOnHover: true,\r\n  lastOnBottom: true,\r\n  clickToClose: true,\r\n  clickIconToClose: false,\r\n  maxLength: 0,\r\n  maxStack: 8,\r\n  preventDuplicates: false,\r\n  preventLastDuplicates: false,\r\n  theClass: '',\r\n  rtl: false,\r\n  animate: NotificationAnimationType.FromRight,\r\n  icons: DEFAULT_ICONS\r\n};\r\n","import { EventEmitter, Inject, Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { DEFAULT_ICONS } from '../consts/default-icons.const';\r\nimport { NotificationType } from '../enums/notification-type.enum';\r\nimport { Icons } from '../interfaces/icons';\r\nimport { NotificationEvent } from '../interfaces/notification-event.type';\r\nimport { Notification } from '../interfaces/notification.type';\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n  constructor(\r\n    @Inject('options') public globalOptions: any\r\n  ) { }\r\n\r\n  emitter = new Subject<NotificationEvent>();\r\n  icons: Icons = DEFAULT_ICONS;\r\n\r\n  set(notification: Notification, to: boolean): Notification {\r\n    notification.id = notification.override && notification.override.id ?\r\n      notification.override.id :\r\n      Math.random().toString(36).substring(3);\r\n    notification.click = new EventEmitter<{}>();\r\n    notification.clickIcon = new EventEmitter<{}>();\r\n    notification.timeoutEnd = new EventEmitter<{}>();\r\n\r\n    this.emitter.next({ command: 'set', notification, add: to });\r\n    return notification;\r\n  }\r\n\r\n  success(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Success, icon: this.icons.success, override, context }, true);\r\n  }\r\n\r\n  error(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Error, icon: this.icons.error, override, context }, true);\r\n  }\r\n\r\n  alert(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Alert, icon: this.icons.alert, override, context }, true);\r\n  }\r\n\r\n  info(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Info, icon: this.icons.info, override, context }, true);\r\n  }\r\n\r\n  warn(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Warn, icon: this.icons.warn, override, context }, true);\r\n  }\r\n\r\n  bare(title: any = '', content: any = '', override?: any, context?: any): Notification {\r\n    return this.set({ title, content: content || '', type: NotificationType.Bare, icon: 'bare', override, context }, true);\r\n  }\r\n\r\n  // With type method\r\n  create(title: any = '', content: any = '', type = NotificationType.Success, override?: any, context?: any): Notification {\r\n    return this.set({ title, content, type, icon: (this.icons as any)[type], override, context }, true);\r\n  }\r\n\r\n  // HTML Notification method\r\n  html(html: any, type = NotificationType.Success, override?: any, icon = 'bare', context?: any): Notification {\r\n    return this.set({ html, type, icon: (this.icons as any)[icon], override, context }, true);\r\n  }\r\n\r\n  // Remove all notifications method\r\n  remove(id?: string): void {\r\n    if (id) {\r\n      this.emitter.next({ command: 'clean', id });\r\n    } else {\r\n      this.emitter.next({ command: 'cleanAll' });\r\n    }\r\n  }\r\n}\r\n","export function generateFormData(params: any): FormData {\r\n    const formData: FormData = new FormData();\r\n    for (const key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            formData.append(key, params[key]);\r\n        }\r\n    }\r\n    return formData;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-content',\r\n  templateUrl: './ct-section-content.component.html',\r\n  styleUrls: ['./ct-section-content.component.scss']\r\n})\r\nexport class CtSectionContentComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>  ","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\r\n        return true;\r\n\r\n    }\r\n}","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from './services/authentication';\r\n\r\n@Injectable()\r\n\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n    constructor(\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest < any > , next: HttpHandler): Observable < HttpEvent < any >> {\r\n        if (this.authenticationService.isAuth()) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: this.authenticationService.getToken(),\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EMPTY, Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { DefaultResponse } from './models/DefaultResponse';\r\nimport { OperationStatus } from './enums/OperationStatus';\r\nimport { NotificationsService } from './modules/angular2-notifications/services/notifications.service';\r\n\r\n@Injectable()\r\n\r\nexport class NotificationsInterceptor implements HttpInterceptor {\r\n\r\n    options = {\r\n        timeOut: 10000,\r\n        showProgressBar: true,\r\n        pauseOnHover: true,\r\n        clickToClose: false,\r\n    };\r\n\r\n    constructor(\r\n        private notificationsService: NotificationsService\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        return next.handle(req).pipe(\r\n            tap((event: HttpEvent<any>) => {\r\n                if (event instanceof HttpResponse) {\r\n                    event = event.clone({\r\n                        body: this.modifyBody(event.body)\r\n                    });\r\n                }\r\n                return event;\r\n            }),\r\n            catchError((error: HttpErrorResponse) => {\r\n                if (error.status >= 400) {\r\n                    if (error.error) {\r\n                        const title = error.error.status ? error.error.status : error.status\r\n                        const content = error.error.message ? error.error.message : error.message\r\n                        this.notificationsService.error(title, content, {\r\n                            // timeOut: 10000,\r\n                            // showProgressBar: true,\r\n                            pauseOnHover: true,\r\n                            clickToClose: true,\r\n                        });\r\n                    }\r\n                }\r\n                if (error.status === 0) {\r\n                    const title = 'Server offline'\r\n                    const content = ''\r\n                    this.notificationsService.error(title, content, {\r\n                        // timeOut: 10000,\r\n                        // showProgressBar: true,\r\n                        pauseOnHover: true,\r\n                        clickToClose: true,\r\n                    });\r\n                }\r\n                return throwError(error);\r\n            })\r\n        );\r\n    }\r\n\r\n    private modifyBody(response: DefaultResponse): void {\r\n        const status: OperationStatus = response.status;\r\n        const errors: string[] = response.errorMessages || [];\r\n        const infos: string[] = response.infoMessages || [];\r\n\r\n        errors.forEach((err: string) => {\r\n            this.notificationsService.error(status, err, {\r\n                // timeOut: 10000,\r\n                // showProgressBar: true,\r\n                pauseOnHover: true,\r\n                clickToClose: true,\r\n            });\r\n        });\r\n\r\n        infos.forEach((info: string) => {\r\n            if (status === OperationStatus.OK) {\r\n                this.notificationsService.success(status, info, {\r\n                    timeOut: 10000,\r\n                    showProgressBar: true,\r\n                    pauseOnHover: true,\r\n                    clickToClose: true,\r\n                });\r\n            } else {\r\n                this.notificationsService.info(status, info, {\r\n                    // timeOut: 10000,\r\n                    // showProgressBar: true,\r\n                    pauseOnHover: true,\r\n                    clickToClose: true,\r\n                });\r\n            }\r\n        });\r\n\r\n        if (errors.length === 0 && infos.length === 0 && status) {\r\n            this.notificationsService.success(status, null, {\r\n                timeOut: 10000,\r\n                showProgressBar: true,\r\n                pauseOnHover: true,\r\n                clickToClose: true,\r\n            });\r\n        }\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NotificationComponent } from './components/notification/notification.component';\r\nimport { SimpleNotificationsComponent } from './components/simple-notifications/simple-notifications.component';\r\nimport { DEFAULT_OPTIONS } from './consts/default-options.const';\r\nimport { Options } from './interfaces/options.type';\r\nimport { NotificationsService } from './services/notifications.service';\r\n\r\nexport const OPTIONS = new InjectionToken<Options>('options');\r\nexport function optionsFactory(options) {\r\n  return {\r\n    ...DEFAULT_OPTIONS,\r\n    ...options\r\n  };\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    SimpleNotificationsComponent,\r\n    NotificationComponent\r\n  ],\r\n  exports: [SimpleNotificationsComponent]\r\n})\r\nexport class SimpleNotificationsModule {\r\n  static forRoot(options: Options = {}): ModuleWithProviders<SimpleNotificationsModule> {\r\n    return {\r\n      ngModule: SimpleNotificationsModule,\r\n      providers: [\r\n        NotificationsService,\r\n        {\r\n          provide: OPTIONS,\r\n          useValue: options\r\n        },\r\n        {\r\n          provide: 'options',\r\n          useFactory: optionsFactory,\r\n          deps: [OPTIONS]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { forkJoin } from 'rxjs';\r\n\r\nexport interface QuestionData {\r\n    text: string;\r\n    params: any;\r\n}\r\n\r\nexport interface DialogData {\r\n    resolveTitle: string;\r\n    rejectTitle: string;\r\n    question ?(...data: any[]) : QuestionData | string;\r\n}\r\n\r\nexport interface ConfirmationDialogInterface {\r\n    readonly dialog: MatDialog;\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'app-dialog-confirmation',\r\n    templateUrl: './app-dialog-confirmation.component.html',\r\n    styleUrls: ['./app-dialog-confirmation.component.scss']\r\n})\r\n\r\n\r\nexport class AppDialogConfirmationComponent {\r\n    constructor(\r\n        public dialogRef: MatDialogRef < AppDialogConfirmationComponent > ,\r\n        @Inject(MAT_DIALOG_DATA) public data: any\r\n    ) {\r\n        // console.log(data);\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close(0);\r\n    }\r\n\r\n    onYesClick(): void {\r\n        this.dialogRef.close(1);\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * require MatDialog\r\n *\r\n * constructor(\r\n *     private dialog: MatDialog\r\n * ) {}\r\n *\r\n */\r\nexport function ConfirmationDialogMethod(dialogData: DialogData) {\r\n    return function fn(\r\n        target: object,\r\n        propertyName: string,\r\n        propertyDesciptor: PropertyDescriptor,\r\n    ): PropertyDescriptor {\r\n        const method: any = propertyDesciptor.value;\r\n        propertyDesciptor.value = function(...args: any[]) {\r\n\r\n            let questionData: QuestionData = {\r\n                text: '',\r\n                params: false\r\n            };\r\n\r\n            if (typeof dialogData.question(...args) === 'string') {\r\n                questionData.text = dialogData.question(...args) as string;\r\n            } else {\r\n                questionData = dialogData.question(...args) as QuestionData;\r\n            }\r\n\r\n            if (!this.dialog) { dialogError(); }\r\n            if (questionData.params && !this.translate) { translateError(); }\r\n\r\n            if (this.translate) {\r\n                forkJoin(\r\n                        this.translate.get(questionData.text, questionData.params),\r\n                        this.translate.get(dialogData.resolveTitle),\r\n                        this.translate.get(dialogData.rejectTitle)\r\n                    )\r\n                    .subscribe(\r\n                        (response: any) => {\r\n                            this.dialog.open(AppDialogConfirmationComponent, {\r\n                                    width: '500px',\r\n                                    data: {\r\n                                        question: response[0],\r\n                                        resolveTitle: response[1],\r\n                                        rejectTitle: response[2]\r\n                                    }\r\n                                })\r\n                                .afterClosed()\r\n                                .subscribe((result: boolean) => {\r\n                                    if (result) {\r\n                                        method.apply(this, args);\r\n                                    }\r\n                                });\r\n                        }\r\n                    );\r\n            } else {\r\n                this.dialog.open(AppDialogConfirmationComponent, {\r\n                        width: '500px',\r\n                        data: {\r\n                            question: questionData.text,\r\n                            resolveTitle: dialogData.resolveTitle,\r\n                            rejectTitle: dialogData.rejectTitle\r\n                        }\r\n                    })\r\n                    .afterClosed()\r\n                    .subscribe((result: boolean) => {\r\n                        if (result) {\r\n                            method.apply(this, args);\r\n                        }\r\n                    });\r\n            }\r\n        };\r\n\r\n        return propertyDesciptor;\r\n    };\r\n}\r\n\r\nfunction dialogError() {\r\n    throw new Error(`\r\ncomponent require MatDialog\r\n\r\nimport { MatDialog } from '@angular/material';\r\n...\r\nconstructor(\r\n    ...\r\n    private dialog: MatDialog\r\n    ...\r\n) {}\r\n                `);\r\n}\r\n\r\nfunction translateError() {\r\n    throw new Error(`\r\ncomponent require TranslateService\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\n...\r\nconstructor(\r\n    ...\r\n    private translate: TranslateService\r\n    ...\r\n) {}\r\n                `);\r\n}","<div class=\"mat-dialog-content\">{{data.question}}</div><br />\r\n<div class=\"mat-dialog-actions\">\r\n  <div class=\"mat-dialog-action\">\r\n    <button mat-stroked-button=\"mat-stroked-button\" (click)=\"onNoClick()\">{{data.rejectTitle}}</button>\r\n  </div>\r\n  <div class=\"mat-dialog-action\">\r\n    <button mat-flat-button=\"mat-flat-button\" color=\"warn\" (click)=\"onYesClick()\">{{data.resolveTitle}}</button>\r\n  </div>\r\n</div> ","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, ExtraOptions } from '@angular/router';\r\nimport { AuthGuard } from '@app/guards/auth/auth.guard';\r\nimport { BillingComponent } from './components/billing/billing.component';\r\nimport { PilotComponent } from './components/pilot/pilot.component';\r\nimport { environment } from '@src/environments/environment';\r\nimport { AppIndexComponent } from './components/app-index/app-index.component';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AppIndexComponent,\r\n    },\r\n    {\r\n        path: 'dispatcher',\r\n        canActivate: [AuthGuard],\r\n        loadChildren: () => import('src/app/modules/dispatcher/dispatcher.module').then(m => m.DispatcherModule),\r\n        data: { sidenavExist: true }\r\n    },\r\n    {\r\n        path: 'billing',\r\n        canActivate: [AuthGuard],\r\n        component: BillingComponent,\r\n    },\r\n    {\r\n        path: 'pilot',\r\n        component: PilotComponent,\r\n    },\r\n    {\r\n        path: 'ai',\r\n        loadChildren: () => import('src/app/modules/ai/ai.module').then(m => m.AiModule),\r\n        data: { sidenavExist: true }\r\n    },\r\n\r\n    {\r\n        path: 'batch',\r\n        loadChildren: () => import('src/app/modules/batch/batch.module').then(m => m.BatchModule),\r\n    },\r\n    {\r\n        path: 'about',\r\n        loadChildren: () => import('src/app/modules/about/about.module').then(m => m.AboutModule),\r\n    },\r\n    {\r\n        path: '**',\r\n        redirectTo: '',\r\n        pathMatch: 'full'\r\n    }\r\n];\r\n\r\nconst extraOptions: ExtraOptions = {\r\n    useHash: environment.hashLocationStrategy,\r\n    onSameUrlNavigation: 'reload',\r\n    relativeLinkResolution: 'legacy'\r\n};\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, extraOptions)],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-section-caption',\r\n  templateUrl: './ct-section-caption.component.html',\r\n  styleUrls: ['./ct-section-caption.component.scss']\r\n})\r\nexport class CtSectionCaptionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import {\r\n    Component,\r\n    OnInit,\r\n    OnDestroy,\r\n    ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'ct-wrap-block',\r\n    templateUrl: './ct-wrap-block.component.html',\r\n    styleUrls: ['./ct-wrap-block.component.scss']\r\n})\r\nexport class CtWrapBlockComponent implements OnInit, OnDestroy {\r\n\r\n    state = {\r\n        wait: false\r\n    };\r\n    constructor(private changeDetector: ChangeDetectorRef) {}\r\n\r\n    ngOnInit() {}\r\n\r\n    ngOnDestroy() {\r\n        this.changeDetector.detach();\r\n    }\r\n\r\n\r\n    wait() {\r\n        this.state.wait = true;\r\n        // tslint:disable-next-line: no-string-literal\r\n        if (!this.changeDetector['destroyed']) {\r\n            this.changeDetector.detectChanges();\r\n        }\r\n    }\r\n    show() {\r\n        this.state.wait = false;\r\n        // tslint:disable-next-line: no-string-literal\r\n        if (!this.changeDetector['destroyed']) {\r\n            this.changeDetector.detectChanges();\r\n        }\r\n    }\r\n}","\r\n<div class=\"ct-wrap-block\" [class.ct-wrap-block--wait]=\"state.wait\">\r\n  <div class=\"ct-wrap-block__body\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n  <div class=\"ct-wrap-block__wait\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n</div>","export * from './Role';\r\nexport * from './User';\r\nexport * from './UserRoleInterface';\r\nexport * from './authentication.service';\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AudioNotification {\r\n    track: HTMLAudioElement = new Audio();\r\n    constructor() {\r\n        this.track.src = 'assets/audio/splash_1_1_1.mp3';\r\n        this.track.volume = 0.75;\r\n        this.track.load();\r\n    }\r\n    play() {\r\n        this.track.play();\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-index',\r\n    templateUrl: './app-index.component.html',\r\n    styleUrls: ['./app-index.component.scss']\r\n})\r\nexport class AppIndexComponent { }","<ct-content>\r\n    <ct-cols>\r\n        <ct-col size=\"1\"></ct-col>\r\n        <ct-col size=\"10\">\r\n            <ct-section>\r\n                <ct-section-body>\r\n                    <ct-section-body-row>\r\n                        <ct-env-msg-outer propertyName=\"brandingMsgIndex\"></ct-env-msg-outer>\r\n                    </ct-section-body-row>\r\n                </ct-section-body>\r\n            </ct-section>\r\n        </ct-col>\r\n    </ct-cols>\r\n</ct-content>\r\n<copy-right></copy-right>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'copy-right',\r\n  templateUrl: './copy-right.component.html',\r\n  styleUrls: ['./copy-right.component.scss']\r\n})\r\nexport class CopyRightComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","Powered by Metaheuristic","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '@src/environments/environment';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Authority } from './Authority';\r\nimport { Role } from './Role';\r\nimport { User } from './User';\r\n\r\nexport class AuthenticationServiceEventLogin { }\r\nexport class AuthenticationServiceEventLogout { }\r\nexport class AuthenticationServiceEventChange {\r\n    user: User;\r\n    constructor(user: User) { this.user = JSON.parse(JSON.stringify(user)); }\r\n}\r\nexport type AuthenticationServiceEvent = AuthenticationServiceEventLogin | AuthenticationServiceEventLogout | AuthenticationServiceEventChange;\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n    private localStorageName: string = 'authenticationService';\r\n    private userLifeTimeExpiredName: string = '__last';\r\n    user: User;\r\n    events: BehaviorSubject<AuthenticationServiceEvent> = new BehaviorSubject(null);\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private router: Router,\r\n    ) {\r\n        this.user = this.getLocalStorageData();\r\n        this.events.next(new AuthenticationServiceEventChange(this.user));\r\n\r\n    }\r\n\r\n    private updateData(user: User): void {\r\n        this.user = user;\r\n        this.setLocalStorageData(user);\r\n        this.events.next(new AuthenticationServiceEventChange(user));\r\n    }\r\n\r\n\r\n    convertRolesToString(roles?: Role[]): string {\r\n        return roles.map(role => {\r\n            const s: string[] = role.replace('ROLE_', '')\r\n                .toLowerCase()\r\n                .split('_')\r\n                .map(v => {\r\n                    const ss: string[] = [...v];\r\n                    ss[0] = ss[0].toUpperCase();\r\n                    return ss.join('');\r\n                });\r\n            return s.join('');\r\n        }).join(', ');\r\n    }\r\n\r\n    getData(): Observable<User> {\r\n        return new Observable<User>(subscriber => {\r\n            subscriber.next(this.getLocalStorageData() as User);\r\n            subscriber.complete();\r\n        });\r\n    }\r\n\r\n    isAuth(): boolean {\r\n        if (this.user && this.user.token) {\r\n            if (this.isUserLifeTimeExpired()) {\r\n                this.logout();\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getUserRole(): Set<Role> {\r\n        const set: Set<Role> = new Set();\r\n        if (this.user && this.user.authorities) {\r\n            this.user.authorities.forEach((authority: Authority) => {\r\n                set.add(authority.authority);\r\n            });\r\n        }\r\n        return set;\r\n    }\r\n\r\n    getToken(): string {\r\n        return this.user?.token;\r\n    }\r\n\r\n    login(username: string, password: string): void {\r\n        const url: string = environment.baseUrl + 'user';\r\n        const token: string = this.generateUserToken(username, password);\r\n        const headers: HttpHeaders = new HttpHeaders({ Authorization: token });\r\n        this.http\r\n            .post(url, { username, password }, { headers })\r\n            .subscribe((user: User) => {\r\n                if (user.username) {\r\n                    this.events.next(new AuthenticationServiceEventLogin());\r\n                    this.updateData(Object.assign({}, user, { token }));\r\n                    this.aboutUser().log();\r\n                }\r\n            });\r\n    }\r\n\r\n    private generateUserToken(username: string, password: string): string {\r\n        return 'Basic ' + btoa(username + ':' + password);\r\n    }\r\n\r\n    private getLocalStorageData(): User {\r\n        return JSON.parse(localStorage.getItem(this.localStorageName)) as User;\r\n    }\r\n\r\n    private setLocalStorageData(content: User): void {\r\n        localStorage.setItem(this.localStorageName, JSON.stringify(content));\r\n    }\r\n\r\n\r\n    isUserLifeTimeExpired(): boolean {\r\n        if (environment.userLifeTime) {\r\n            const userLifeTime: number = environment.userLifeTime;\r\n            const last: number = parseInt(localStorage.getItem(this.userLifeTimeExpiredName), 10) || 0;\r\n            const now: number = Date.now();\r\n            const passedTime: number = now - last;\r\n\r\n            if (last === 0) {\r\n                localStorage.setItem(this.userLifeTimeExpiredName, now.toString());\r\n                return false;\r\n            }\r\n\r\n            if (passedTime > userLifeTime) {\r\n                localStorage.removeItem(this.userLifeTimeExpiredName);\r\n                return true;\r\n            } else {\r\n                localStorage.setItem(this.userLifeTimeExpiredName, now.toString());\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    logout(): Observable<null> {\r\n        return new Observable(subscriber => {\r\n            localStorage.removeItem(this.localStorageName);\r\n            localStorage.removeItem(this.userLifeTimeExpiredName);\r\n            sessionStorage.clear();\r\n            this.events.next(new AuthenticationServiceEventLogout());\r\n            this.user = null;\r\n            this.router.navigate(['/']);\r\n            subscriber.next();\r\n            subscriber.complete();\r\n        });\r\n    }\r\n\r\n    private aboutUser(user?: User): { aboutStr: string, log: () => void } {\r\n        user = user || this.user;\r\n        const usernameAsString: string = user.username ? user.username : '';\r\n        const rolesAsString: string = user.authorities ?\r\n            this.convertRolesToString(user.authorities.map(v => v.authority)) : '';\r\n        const aboutStr: string = `${usernameAsString}: ${rolesAsString}`;\r\n        const log = () => {\r\n            if (user && user.username) {\r\n                console.log('%c%s', 'color:blue; font-size:125%', aboutStr);\r\n            }\r\n        };\r\n        return { aboutStr, log };\r\n    }\r\n\r\n    isRoleManager(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MANAGER); }\r\n    isRoleOperator(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_OPERATOR); }\r\n    isRoleData(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_DATA); }\r\n\r\n    isRoleServerRestAccess(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_SERVER_REST_ACCESS); }\r\n    isRoleAssetRestAccess(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_ASSET_REST_ACCESS); }\r\n    isRoleBilling(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_BILLING); }\r\n\r\n    isRoleMasterAdmin(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_ADMIN); }\r\n    isRoleMasterOperator(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_OPERATOR); }\r\n    isRoleMasterSupport(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_SUPPORT); }\r\n    isRoleMasterAssetManager(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_MASTER_ASSET_MANAGER); }\r\n\r\n    isRoleAdmin(): boolean { return this.user.authorities.map(a => a.authority).includes(Role.ROLE_ADMIN); }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { OperationStatusRest } from '../../models/OperationStatusRest';\r\nimport { AccountResult } from './AccountResult';\r\nimport { AccountsResult } from './AccountsResult';\r\nimport { NewAccount } from './NewAccount';\r\n\r\nconst url = (urlString: string): string => `${environment.baseUrl}dispatcher/account/${urlString}`;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountsService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    accounts(page: string): Observable<AccountsResult> {\r\n        return this.http.get<AccountsResult>(url(`accounts`), { params: { page } });\r\n    }\r\n\r\n    addFormCommit(account: NewAccount): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-add-commit`), account);\r\n    }\r\n\r\n    getAccount(id: string): Observable<AccountResult> {\r\n        return this.http.get<AccountResult>(url(`account/${id}`));\r\n    }\r\n\r\n    editFormCommit(id: string, publicName: string, enabled: boolean): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-edit-commit`), formData({ id, publicName, enabled }));\r\n    }\r\n\r\n    roleFormCommit(accountId: string, roles: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-role-commit`), formData({ accountId, roles }));\r\n    }\r\n\r\n    passwordEditFormCommit(id: string, password: string, password2: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`account-password-edit-commit`), formData({ id, password, password2 }));\r\n    }\r\n}\r\n","export enum OperationStatus {\r\n    OK = 'OK',\r\n    ERROR = 'ERROR'\r\n}","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\n\r\nexport class MaterialAppModule {}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { CopyRightComponent } from './copy-right/copy-right.component';\r\n\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [CopyRightComponent],\r\n    exports: [CopyRightComponent]\r\n})\r\n\r\nexport class CopyRightModule {}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ct-alert',\r\n  templateUrl: './ct-alert.component.html',\r\n  styleUrls: ['./ct-alert.component.scss']\r\n})\r\nexport class CtAlertComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.isSslRequired) {\r\n    if (window.location.protocol === 'http:') {\r\n        window.location.href = window.location.href.replace('http', 'https');\r\n    }\r\n}\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}