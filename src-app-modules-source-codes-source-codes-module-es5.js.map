{"version":3,"sources":["webpack:///src/app/modules/source-codes/view-source-code/view-source-code.component.ts","webpack:///src/app/modules/source-codes/view-source-code/view-source-code.component.html","webpack:///src/app/enums/SourceCodeType.ts","webpack:///src/app/modules/source-codes/state-of-tasks/state-of-tasks.component.ts","webpack:///src/app/modules/source-codes/state-of-tasks/state-of-tasks.component.html","webpack:///src/app/modules/source-codes/source-codes-archive/source-codes-archive.component.html","webpack:///src/app/modules/source-codes/source-codes-archive/source-codes-archive.component.ts","webpack:///src/app/modules/source-codes/exec-context-states/exec-context-states.component.ts","webpack:///src/app/modules/source-codes/exec-context-states/exec-context-states.component.html","webpack:///src/app/services/source-codes/source-codes.service.ts","webpack:///src/app/enums/TaskExecState.ts","webpack:///src/app/modules/source-codes/card-form-add-source-code/card-form-add-source-code.component.ts","webpack:///src/app/modules/source-codes/card-form-add-source-code/card-form-add-source-code.component.html","webpack:///src/app/modules/source-codes/add-source-code/add-source-code.component.ts","webpack:///src/app/modules/source-codes/add-source-code/add-source-code.component.html","webpack:///src/app/modules/source-codes/add-exec-context/add-exec-context.component.ts","webpack:///src/app/modules/source-codes/add-exec-context/add-exec-context.component.html","webpack:///src/app/modules/source-codes/exec-contexts/exec-contexts.component.html","webpack:///src/app/modules/source-codes/exec-contexts/exec-contexts.component.ts","webpack:///src/app/modules/source-codes/source-codes/source-codes.component.html","webpack:///src/app/modules/source-codes/source-codes/source-codes.component.ts","webpack:///src/app/modules/source-codes/card-form-upload-source-code/card-form-upload-source-code.component.ts","webpack:///src/app/modules/source-codes/card-form-upload-source-code/card-form-upload-source-code.component.html","webpack:///src/app/modules/source-codes/edit-exec-context/edit-exec-context.component.ts","webpack:///src/app/modules/source-codes/edit-exec-context/edit-exec-context.component.html","webpack:///src/app/modules/source-codes/source-codes.module.ts"],"names":["ViewSourceCodeComponent","route","sourceCodesService","router","elRef","updateResponse","id","snapshot","paramMap","get","edit","subscribe","sourceCodeResult","sourceCodeResponse","sourceCode","navigate","validate","sourceCodeResponseForValidate","scrollIntoView","node","nativeElement","querySelector","block","behavior","SourceCodeType","taskId","execState","StateOfTasksComponent","execContextService","dialog","TaskExecState","sourceCodeId","execContextId","execContextsState","response","taskExecInfo","open","errorDialogTemplate","width","out","downloadVariable","toString","body","headers","split","SourceCodesArchiveComponent","authenticationService","dataSource","columnsToDisplay","deletedRows","updateTable","page","setIsLoadingStart","sourceCodeArchivedOnly","next","sourceCodesResult","items","content","complete","setIsLoadingEnd","push","deleteCommit","number","question","rejectTitle","resolveTitle","ExecContextStatesComponent","url","s","baseUrl","SourceCodesService","http","params","source","post","file","uid","result","type","common","batches","includes","batch","experiments","experiment","CardFormAddSourceCodeComponent","responseChange","abort","form","required","minLength","emit","button","disabled","addFormCommit","value","cancel","create","AddSourceCodeComponent","activatedRoute","newSourceCodeResponse","status","OK","back","uploadSourceCodeResponse","selector","relativeTo","afterNewSourceCode","afterUploadSourceCode","AddExecContextComponent","states","currentStates","Set","state","currentState","show","add","loading","execContextAddCommit","variable","errorMessages","responseSingle","ExecContextsComponent","execContextTableSource","execContextColumnsToDisplay","getExecContexts","execContexts","execContextsResult","instances","prevTable","first","nextTable","last","execContext","execContextDeleteCommit","v","execContextTargetState","el","event","target","runExecState","prev","SourceCodesComponent","dispatcherAssetModeService","TABINDEX","deletedSourceCodes","archivedSourceCodes","sourceCodes","archiveCommit","matTabGroup","selectedIndex","sourceCodesArchive","getSourceCodeType","tabChange","CardFormUploadSourceCodeComponent","uploadSourceCode","fileInput","files","length","changed","upload","EditExecContextComponent","SourceCodesRoutes","path","component","data","backConfig","SourceCodeRoutingModule","forChild","SourceCodeModule"],"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","file":"src-app-modules-source-codes-source-codes-module-es5.js","sourcesContent":["import { Component, ElementRef, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SourceCodesService } from '@src/app/services/source-codes/source-codes.service';\r\nimport { SourceCode } from '@src/app/services/source-codes/SourceCode';\r\nimport { SourceCodeResult } from '@src/app/services/source-codes/SourceCodeResult';\r\n\r\n@Component({\r\n    selector: 'view-source-code',\r\n    templateUrl: './view-source-code.component.html',\r\n    styleUrls: ['./view-source-code.component.scss']\r\n})\r\nexport class ViewSourceCodeComponent implements OnInit {\r\n\r\n    sourceCode: SourceCode;\r\n    sourceCodeResponse: SourceCodeResult;\r\n    sourceCodeResponseForValidate: SourceCodeResult;\r\n\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private sourceCodesService: SourceCodesService,\r\n        private router: Router,\r\n        private elRef: ElementRef\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.updateResponse();\r\n    }\r\n\r\n    updateResponse(): void {\r\n        const id: string | number = this.route.snapshot.paramMap.get('sourceCodeId');\r\n        this.sourceCodesService\r\n            .edit(id)\r\n            .subscribe(sourceCodeResult => {\r\n                this.sourceCodeResponse = sourceCodeResult;\r\n                this.sourceCode = sourceCodeResult;\r\n            });\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(['/dispatcher', 'source-codes']);\r\n    }\r\n\r\n    validate(): void {\r\n        const id: string = this.route.snapshot.paramMap.get('sourceCodeId');\r\n        this.sourceCodesService\r\n            .validate(id)\r\n            .subscribe(sourceCodeResult => {\r\n                this.sourceCodeResponse = sourceCodeResult;\r\n                this.sourceCodeResponseForValidate = sourceCodeResult;\r\n                this.scrollIntoView();\r\n            });\r\n    }\r\n\r\n    scrollIntoView(): void {\r\n        const node: HTMLElement = (this.elRef.nativeElement as HTMLElement).querySelector('ct-rest-status');\r\n        if (node) {\r\n            node.scrollIntoView({\r\n                block: 'start',\r\n                behavior: 'smooth'\r\n            });\r\n        }\r\n    }\r\n}\r\n","<ct-cols align-items=\"flex-start\" *ngIf=\"sourceCodeResponse\">\r\n    <ct-col size=\"6\">\r\n        <ct-section>\r\n            <ct-section-header>\r\n                <ct-section-header-row>\r\n                    <ct-heading>Edit SourceCode {{sourceCode ? sourceCode.id : ''}}</ct-heading>\r\n                </ct-section-header-row>\r\n            </ct-section-header>\r\n            <ct-section-body>\r\n                <ct-section-body-row>\r\n                    <ct-section-content>\r\n                        <ct-pre>{{sourceCode.source}}</ct-pre>\r\n                    </ct-section-content>\r\n                </ct-section-body-row>\r\n            </ct-section-body>\r\n            <ct-section-footer>\r\n                <ct-section-footer-row>\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                        <ct-flex-item>\r\n                            <button mat-stroked-button=\"mat-stroked-button\" (click)=\"back()\">Back</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" (click)=\"validate()\" color=\"primary\">Validate</button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-footer-row>\r\n            </ct-section-footer>\r\n        </ct-section>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status class=\"uploadRestStatus\" [content]=\"sourceCodeResponseForValidate\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>","export enum SourceCodeType {\r\n    not_exist = 'not_exist',\r\n    common = 'common',\r\n    experiment = 'experiment',\r\n    batch = 'batch'\r\n}\r\n","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TaskExecState } from '@src/app/enums/TaskExecState';\r\nimport { ExecContextService } from '@src/app/services/exec-context/exec-context.service';\r\nimport { TaskExecInfo } from '@src/app/services/exec-context/TaskExecInfo';\r\nimport { ExecContextStateResult } from '@src/app/services/source-codes/ExecContextStateResult';\r\nimport * as fileSaver from 'file-saver';\r\n\r\n\r\n@Component({\r\n    selector: 'state-of-tasks',\r\n    templateUrl: './state-of-tasks.component.html',\r\n    styleUrls: ['./state-of-tasks.component.scss']\r\n})\r\nexport class StateOfTasksComponent implements OnInit {\r\n    @ViewChild('errorDialogTemplate') errorDialogTemplate: TemplateRef<any>;\r\n    @Input() sourceCodeId: string;\r\n    @Input() execContextId: string;\r\n\r\n    response: ExecContextStateResult;\r\n    taskExecInfo: TaskExecInfo;\r\n    readonly TaskExecState: { [value: string]: string } = TaskExecState;\r\n\r\n    constructor(\r\n        private execContextService: ExecContextService,\r\n        readonly dialog: MatDialog,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.sourceCodeId && this.execContextId) {\r\n            this.execContextService\r\n                .execContextsState(this.sourceCodeId, this.execContextId)\r\n                .subscribe(response => {\r\n                    this.response = response;\r\n                });\r\n        }\r\n    }\r\n\r\n    openError(taskId: string): void {\r\n        this.taskExecInfo = null;\r\n        this.dialog.open(this.errorDialogTemplate, {\r\n            width: '90%'\r\n        });\r\n        this.execContextService\r\n            .taskExecInfo(this.sourceCodeId, this.execContextId, taskId)\r\n            .subscribe(taskExecInfo => {\r\n                this.taskExecInfo = taskExecInfo;\r\n            });\r\n\r\n    }\r\n\r\n    downloadFile(out: {\r\n        ctx: string;\r\n        e: any;\r\n        i: boolean;\r\n        id: number;\r\n        n: boolean;\r\n        nm: string;\r\n    }): void {\r\n        this.execContextService\r\n            .downloadVariable(this.execContextId, out.id.toString())\r\n            .subscribe(response => {\r\n                fileSaver.saveAs(\r\n                    response.body,\r\n                    response.headers.get('Content-Disposition').split('\\'\\'')[1]\r\n                );\r\n            });\r\n    }\r\n}\r\n","<div *ngIf=\"response\">\r\n    <table class=\"info-table\">\r\n        <tr>\r\n            <td>UID: </td>\r\n            <td>{{response.sourceCodeUid}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Is valid:</td>\r\n            <td>{{response.sourceCodeValid}}</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Type: </td>\r\n            <td>{{response.sourceCodeType}}</td>\r\n        </tr>\r\n    </table>\r\n    <br>\r\n    <table class=\"state-table\">\r\n        <thead>\r\n            <tr>\r\n                <td></td>\r\n                <td *ngFor=\"let elem of response.header\">\r\n                    <div>{{elem.process}}</div>\r\n                    <div>{{elem.functionCode}}</div>\r\n                </td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let row of response.lines\">\r\n                <td>{{row.context}}</td>\r\n                <td *ngFor=\"let cell of row.cells\">\r\n                    <div *ngIf=\"!cell.empty\">\r\n                        <div>{{cell.taskId}}</div>\r\n                        <div>{{cell.state}}</div>\r\n                        <ng-container *ngTemplateOutlet=\"stateOkTemplate; context:{cell:cell}\"></ng-container>\r\n                        <ng-container *ngTemplateOutlet=\"stateErrorTemplate; context:{cell:cell}\"></ng-container>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<ng-template #stateOkTemplate let-cell=\"cell\">\r\n    <ng-container *ngIf=\"cell.state === TaskExecState.OK\">\r\n        <ng-container *ngFor=\"let out of cell.outs\">\r\n            <div>\r\n                <span class=\"link\" (click)=\"downloadFile(out)\">{{out.id}}, {{out.nm}}</span>\r\n            </div>\r\n        </ng-container>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n<ng-template #stateErrorTemplate let-cell=\"cell\">\r\n    <ng-container *ngIf=\"cell.state === TaskExecState.ERROR\">\r\n        <span class=\"link\" (click)=\"openError(cell.taskId)\">Task exec info</span>\r\n    </ng-container>\r\n</ng-template>\r\n\r\n\r\n<ng-template #errorDialogTemplate>\r\n    <ng-container *ngIf=\"taskExecInfo\">\r\n        <div> <b>Task Exec Info</b> </div>\r\n        <div> taskId: {{taskExecInfo.taskId}} </div>\r\n        <div> execState: {{taskExecInfo.execState}} </div>\r\n        <mat-dialog-content>\r\n            <ct-pre style=\"font-size: 80%;\">\r\n{{taskExecInfo.console}}\r\n            </ct-pre>\r\n        </mat-dialog-content>\r\n        <mat-dialog-actions align=\"end\">\r\n            <button mat-flat-button color=\"primary\" mat-dialog-close>Close</button>\r\n        </mat-dialog-actions>\r\n    </ng-container>\r\n</ng-template>","<ct-section *ngIf=\"sourceCodesResult\">\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>Source Codes</ct-heading>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-table [isWaiting]=\"isLoading\">\r\n                <table class=\"mat-table\" mat-table=\"mat-table\" [dataSource]=\"dataSource\">\r\n                    <ng-container matColumnDef=\"id\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Id </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.id}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"uid\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>UID of sourceCode</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.uid}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"createdOn\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef> Created on </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.createdOn | date:'MMM d, yyyy, HH:mm:ss'}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"valid\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Is valid? </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.valid}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"locked\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Is locked? </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.locked}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"bts\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef> </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">\r\n                            <ct-flex justify-content=\"flex-end\" gap=\"9px\">\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button=\"mat-flat-button\" color=\"warn\" size=\"forTableRow\"\r\n                                        (click)=\"delete(el)\" title=\"Delete\">\r\n                                        <mat-icon>delete</mat-icon>\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                            </ct-flex>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row=\"mat-header-row\" *matHeaderRowDef=\"columnsToDisplay\"> </tr>\r\n                    <tr mat-row=\"mat-row\" *matRowDef=\"let row; columns: columnsToDisplay;\"\r\n                        [class.deleted-table-row]=\"deletedRows.includes(row)\"></tr>\r\n                </table>\r\n            </ct-table>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-table-pagination [pageableDefault]=\"sourceCodesResult?.items\" [globalDisable]=\"isLoading\"\r\n                (next)=\"nextPage()\" (prev)=\"prevPage()\"></ct-table-pagination>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmationDialogMethod } from '@app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { LoadStates } from '@app/enums/LoadStates';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { SourceCodesService } from '@src/app/services/source-codes/source-codes.service';\r\nimport { SourceCode } from '@src/app/services/source-codes/SourceCode';\r\nimport { SourceCodesResult } from '@src/app/services/source-codes/SourceCodesResult';\r\nimport { CtTableComponent } from '../../ct/ct-table/ct-table.component';\r\n\r\n\r\n@Component({\r\n    selector: 'source-codes-archive',\r\n    templateUrl: './source-codes-archive.component.html',\r\n    styleUrls: ['./source-codes-archive.component.sass']\r\n})\r\nexport class SourceCodesArchiveComponent extends UIStateComponent implements OnInit {\r\n    sourceCodesResult: SourceCodesResult;\r\n    dataSource = new MatTableDataSource<SourceCode>([]);\r\n    columnsToDisplay = ['id', 'uid', 'createdOn', 'valid', 'locked', 'bts'];\r\n    deletedRows: SourceCode[] = [];\r\n\r\n    constructor(\r\n        readonly dialog: MatDialog,\r\n        private sourceCodesService: SourceCodesService,\r\n        readonly authenticationService: AuthenticationService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.updateTable(0);\r\n    }\r\n\r\n    updateTable(page: number): void {\r\n        this.setIsLoadingStart();\r\n        this.sourceCodesService\r\n            .sourceCodeArchivedOnly(page.toString())\r\n            .subscribe({\r\n                next: sourceCodesResult => {\r\n                    this.sourceCodesResult = sourceCodesResult;\r\n                    this.dataSource = new MatTableDataSource(sourceCodesResult.items.content || []);\r\n                },\r\n                complete: () => {\r\n                    this.setIsLoadingEnd();\r\n                },\r\n            });\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (sourceCode: SourceCode): string =>\r\n            `Do you want to delete SourceCode #${sourceCode.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    delete(sourceCode: SourceCode): void {\r\n        this.deletedRows.push(sourceCode);\r\n        this.sourceCodesService\r\n            .deleteCommit(sourceCode.id.toString())\r\n            .subscribe();\r\n    }\r\n\r\n    nextPage(): void {\r\n        this.updateTable(this.sourceCodesResult.items.number + 1);\r\n    }\r\n\r\n    prevPage(): void {\r\n        this.updateTable(this.sourceCodesResult.items.number - 1);\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { SourceCodesService } from '../../../services/source-codes/source-codes.service';\r\nimport { ExecContextStateResult } from '@src/app/services/source-codes/ExecContextStateResult';\r\n\r\n@Component({\r\n    selector: 'exec-context-states',\r\n    templateUrl: './exec-context-states.component.html',\r\n    styleUrls: ['./exec-context-states.component.scss']\r\n})\r\nexport class ExecContextStatesComponent implements OnInit {\r\n\r\n    sourceCodeId: string;\r\n    execContextId: string;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n    ) {\r\n        this.sourceCodeId = this.route.snapshot.paramMap.get('sourceCodeId');\r\n        this.execContextId = this.route.snapshot.paramMap.get('execContextId');\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n}","<ct-section>\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>State of Tasks</ct-heading>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <state-of-tasks [sourceCodeId]=\"sourceCodeId\" [execContextId]=\"execContextId\"></state-of-tasks>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n</ct-section>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { ExecContextResult } from './ExecContextResult';\r\nimport { ExecContextsResult } from './ExecContextsResult';\r\nimport { SimpleExecContextAddingResult } from './SimpleExecContextAddingResult';\r\nimport { SourceCodeResult } from './SourceCodeResult';\r\nimport { SourceCodesResult } from './SourceCodesResult';\r\nimport { SourceCodeType } from '@src/app/enums/SourceCodeType';\r\nimport { ExecContextStateResult } from './ExecContextStateResult';\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher/source-code/${s}`;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SourceCodesService {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    sourceCodes(page: string): Observable<SourceCodesResult> {\r\n        return this.http.get<SourceCodesResult>(\r\n            url('source-codes'),\r\n            { params: { page } }\r\n        );\r\n    }\r\n\r\n    sourceCodeArchivedOnly(page: string): Observable<SourceCodesResult> {\r\n        return this.http.get<SourceCodesResult>(\r\n            url('source-codes-archived-only'),\r\n            { params: { page } }\r\n        );\r\n    }\r\n\r\n    edit(id: string): Observable<SourceCodeResult> {\r\n        return this.http.get<SourceCodeResult>(url(`source-code/${id}`));\r\n    }\r\n\r\n    validate(id: string): Observable<SourceCodeResult> {\r\n        return this.http.get<SourceCodeResult>(url(`source-code-validate/${id}`));\r\n    }\r\n\r\n    addFormCommit(source: string): Observable<SourceCodeResult> {\r\n        return this.http.post<SourceCodeResult>(\r\n            url(`source-code-add-commit`),\r\n            formData({ source })\r\n        );\r\n    }\r\n\r\n    editFormCommit(sourceCodeId: string, source: string): Observable<SourceCodeResult> {\r\n        return this.http.post<SourceCodeResult>(\r\n            url(`source-code-edit-commit`),\r\n            formData({ sourceCodeId, source })\r\n        );\r\n    }\r\n\r\n    deleteCommit(id: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(\r\n            url(`source-code-delete-commit`),\r\n            formData({ id })\r\n        );\r\n    }\r\n\r\n    archiveCommit(id: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(\r\n            url(`source-code-archive-commit`),\r\n            formData({ id })\r\n        );\r\n    }\r\n\r\n    uploadSourceCode(file: File): Observable<SourceCodeResult> {\r\n        return this.http.post<SourceCodeResult>(\r\n            url(`source-code-upload-from-file`),\r\n            formData({ file })\r\n        );\r\n    }\r\n\r\n\r\n    //\r\n    //\r\n    //\r\n    getSourceCodeType(uid: string, result: SourceCodesResult): SourceCodeType {\r\n        let type: SourceCodeType = SourceCodeType.common;\r\n        if (result.batches.includes(uid)) { type = SourceCodeType.batch; }\r\n        if (result.experiments.includes(uid)) { type = SourceCodeType.experiment; }\r\n        return type;\r\n    }\r\n}\r\n","// public enum TaskExecState { \r\n//     NONE(0), \r\n//     IN_PROGRESS(1), \r\n//     ERROR(2), \r\n//     OK(3), \r\n//     NOT_USED_ANYMORE(4), \r\n//     SKIPPED(5), \r\n//     CHECK_CACHE(6);\r\n\r\nexport enum TaskExecState {\r\n    NONE = 'NONE',\r\n    IN_PROGRESS = 'IN_PROGRESS',\r\n    ERROR = 'ERROR',\r\n    OK = 'OK',\r\n    NOT_USED_ANYMORE = 'NOT_USED_ANYMORE',\r\n    SKIPPED = 'SKIPPED',\r\n    CHECK_CACHE = 'CHECK_CACHE',\r\n}","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { SourceCodesService } from '@src/app/services/source-codes/source-codes.service';\r\nimport { SourceCodeResult } from '@src/app/services/source-codes/SourceCodeResult';\r\nimport { MatButton } from '@angular/material/button';\r\n\r\n@Component({\r\n    selector: 'card-form-add-source-code',\r\n    templateUrl: './card-form-add-source-code.component.html',\r\n    styleUrls: ['./card-form-add-source-code.component.scss']\r\n})\r\nexport class CardFormAddSourceCodeComponent {\r\n    @ViewChild(MatButton) button: MatButton;\r\n    @Output() responseChange: EventEmitter<SourceCodeResult> = new EventEmitter<SourceCodeResult>();\r\n    @Output() abort: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n\r\n    form: FormGroup = new FormGroup({\r\n        source: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(1)\r\n        ]),\r\n    });\r\n\r\n    constructor(\r\n        private sourceCodesService: SourceCodesService\r\n    ) { }\r\n\r\n    cancel(): void {\r\n        this.abort.emit();\r\n    }\r\n\r\n    create(): void {\r\n        this.button.disabled = true;\r\n        this.sourceCodesService\r\n            .addFormCommit(this.form.value.source)\r\n            .subscribe(sourceCodeResult => {\r\n                this.button.disabled = false;\r\n                this.responseChange.emit(sourceCodeResult);\r\n            });\r\n    }\r\n}\r\n","<ct-section>\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>Add New Source Code</ct-heading>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <form [formGroup]=\"form\" novalidate=\"novalidate\">\r\n            <ct-section-body-row>\r\n                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                    <mat-label>Parameters of source code</mat-label>\r\n                    <textarea formControlName=\"source\" matInput=\"matInput\" cdkTextareaAutosize=\"cdkTextareaAutosize\"\r\n                        cdkAutosizeMinRows=\"10\" value=\"\" autocomplete=\"off\"></textarea>\r\n                    <mat-hint>This is a required field.</mat-hint>\r\n                </mat-form-field>\r\n            </ct-section-body-row>\r\n        </form>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                <ct-flex-item>\r\n                    <button mat-stroked-button (click)=\"cancel()\">Cancel</button>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button #button mat-flat-button=\"mat-flat-button\" (click)=\"create()\" color=\"primary\"\r\n                        [disabled]=\"!form.valid\">Add</button>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","import { Location } from '@angular/common';\r\nimport { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { OperationStatus } from '@src/app/enums/OperationStatus';\r\nimport { SourceCodeResult } from '@src/app/services/source-codes/SourceCodeResult';\r\nimport { CardFormAddSourceCodeComponent } from '../card-form-add-source-code/card-form-add-source-code.component';\r\nimport { CardFormUploadSourceCodeComponent } from '../card-form-upload-source-code/card-form-upload-source-code.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n@Component({\r\n    selector: 'add-source-code',\r\n    templateUrl: './add-source-code.component.html',\r\n    styleUrls: ['./add-source-code.component.scss']\r\n})\r\n\r\nexport class AddSourceCodeComponent {\r\n    @ViewChild(CardFormAddSourceCodeComponent) cardFormAddSourceCode: CardFormAddSourceCodeComponent;\r\n    @ViewChild(CardFormUploadSourceCodeComponent) cardFormUploadSourceCode: CardFormUploadSourceCodeComponent;\r\n\r\n    newSourceCodeResponse: SourceCodeResult;\r\n    uploadSourceCodeResponse: SourceCodeResult;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute,\r\n        private elRef: ElementRef\r\n    ) { }\r\n\r\n    afterNewSourceCode(response: SourceCodeResult): void {\r\n        this.newSourceCodeResponse = response;\r\n        if (response.status === OperationStatus.OK) {\r\n            this.back();\r\n        } else {\r\n            this.scrollIntoView('.addRestStatus');\r\n\r\n        }\r\n    }\r\n\r\n    afterUploadSourceCode(response: SourceCodeResult): void {\r\n        this.uploadSourceCodeResponse = response;\r\n        if (response.status === OperationStatus.OK) {\r\n            this.back();\r\n        } else {\r\n            this.scrollIntoView('.uploadRestStatus');\r\n        }\r\n    }\r\n\r\n    scrollIntoView(selector: string): void {\r\n        const node: HTMLElement = (this.elRef.nativeElement as HTMLElement).querySelector(selector);\r\n        if (node) {\r\n            node.scrollIntoView({\r\n                block: 'start',\r\n                behavior: 'smooth'\r\n            });\r\n        }\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(['../'], { relativeTo: this.activatedRoute });\r\n    }\r\n}","<ct-cols>\r\n    <ct-col size=\"6\">\r\n        <card-form-add-source-code (abort)=\"back()\" (responseChange)=\"afterNewSourceCode($event)\">\r\n        </card-form-add-source-code>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status class=\"addRestStatus\" [content]=\"newSourceCodeResponse\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>\r\n\r\n<hr>\r\n\r\n<ct-cols>\r\n    <ct-col size=\"6\">\r\n        <card-form-upload-source-code (abort)=\"back()\" (responseChange)=\"afterUploadSourceCode($event)\">\r\n        </card-form-upload-source-code>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status class=\"uploadRestStatus\" [content]=\"uploadSourceCodeResponse\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadStates } from '@app/enums/LoadStates';\r\nimport { state } from '@app/helpers/state';\r\nimport { ExecContextService } from '@src/app/services/exec-context/exec-context.service';\r\nimport { ExecContextResult } from '@src/app/services/source-codes/ExecContextResult';\r\nimport { SourceCodesService } from '@src/app/services/source-codes/source-codes.service';\r\nimport { SourceCodeResult } from '@src/app/services/source-codes/SourceCodeResult';\r\n@Component({\r\n    selector: 'add-exec-context',\r\n    templateUrl: './add-exec-context.component.html',\r\n    styleUrls: ['./add-exec-context.component.scss']\r\n})\r\n\r\nexport class AddExecContextComponent implements OnInit, OnDestroy {\r\n    readonly states = LoadStates;\r\n    currentStates: Set<LoadStates> = new Set();\r\n    state: LoadStates = state;\r\n    currentState: LoadStates = state.show;\r\n    variable: string;\r\n    responseSingle: ExecContextResult;\r\n    sourceCodeId: string;\r\n    sourceCodeResponse: SourceCodeResult;\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private router: Router,\r\n        private sourceCodesService: SourceCodesService,\r\n        private execContextService: ExecContextService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.sourceCodeId = this.activatedRoute.snapshot.paramMap.get('sourceCodeId');\r\n        this.sourceCodesService\r\n            .edit(this.sourceCodeId)\r\n            .subscribe(sourceCodeResult => {\r\n                this.sourceCodeResponse = sourceCodeResult;\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void { }\r\n\r\n    cancel(): void {\r\n        this.router.navigate(['../../', 'exec-contexts'], { relativeTo: this.activatedRoute });\r\n    }\r\n\r\n    createWithVariable(): void {\r\n        this.currentStates.add(this.states.loading);\r\n        this.execContextService\r\n            .execContextAddCommit(this.sourceCodeId, this.variable)\r\n            .subscribe(response => {\r\n                if (response.errorMessages) {\r\n                    this.responseSingle = response;\r\n                } else {\r\n                    this.cancel();\r\n                }\r\n                this.currentStates.delete(this.states.loading);\r\n            });\r\n    }\r\n}","<ng-template [ngIf]=\"sourceCodeResponse\">\r\n    <ct-cols align-items=\"flex-start\">\r\n        <ct-col size=\"6\">\r\n            <ct-section>\r\n                <ct-section-header>\r\n                    <ct-section-header-row>\r\n                        <div>Source Code: #{{ sourceCodeResponse.id }}</div>\r\n                        <ct-heading> {{ sourceCodeResponse.uid }}</ct-heading>\r\n                    </ct-section-header-row>\r\n                </ct-section-header>\r\n                <ct-section-body>\r\n                    <ct-section-body-row>\r\n                        <p>New execContext with Single Input</p>\r\n                    </ct-section-body-row>\r\n                    <!-- <ct-section-body-row>\r\n                            <mat-form-field appearance=\"outline\">\r\n                                <mat-label>Input variable for this source code</mat-label>\r\n                                <input matInput=\"matInput\" [(ngModel)]=\"variable\" autocomplete=\"off\" />\r\n                                <mat-hint>This is a required field.</mat-hint>\r\n                            </mat-form-field>\r\n                    </ct-section-body-row> -->\r\n                </ct-section-body>\r\n                <ct-section-footer>\r\n                    <ct-section-footer-row>\r\n                        <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                            <ct-flex-item>\r\n                                <button mat-stroked-button=\"mat-stroked-button\" (click)=\"cancel()\">Back </button>\r\n                            </ct-flex-item>\r\n                            <ct-flex-item>\r\n                                <button mat-flat-button=\"mat-flat-button\" (click)=\"createWithVariable()\" color=\"primary\"\r\n                                    [disabled]=\"currentStates.has(states.loading)\">Create </button>\r\n                            </ct-flex-item>\r\n                        </ct-flex>\r\n                    </ct-section-footer-row>\r\n                </ct-section-footer>\r\n            </ct-section>\r\n        </ct-col>\r\n        <ct-col size=\"6\">\r\n            <ct-section *ngIf=\"responseSingle\">\r\n                <ct-section-body>\r\n                    <ct-section-body-row>\r\n                        <ct-section-content>\r\n                            <p *ngFor=\"let info of responseSingle.infoMessages; index as i; \">{{info}}</p>\r\n                            <p *ngFor=\"let error of responseSingle.errorMessages; index as i; \">{{error}}</p>\r\n                        </ct-section-content>\r\n                    </ct-section-body-row>\r\n                </ct-section-body>\r\n            </ct-section>\r\n        </ct-col>\r\n    </ct-cols>\r\n</ng-template>","<ct-section>\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>Exec Contexts in Source Code #{{ sourceCodeId }}</ct-heading>\r\n        </ct-section-header-row>\r\n        <ct-section-header-row *ngIf=\"response\">\r\n            <table>\r\n                <tr>\r\n                    <td>UID: </td>\r\n                    <td>{{response.sourceCodeUid}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Is valid:</td>\r\n                    <td>{{response.sourceCodeValid}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Type: </td>\r\n                    <td>{{response.sourceCodeType}}</td>\r\n                </tr>\r\n            </table>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row *ngIf=\"response\">\r\n            <ct-table>\r\n                <table class=\"mat-table\" mat-table=\"mat-table\" [dataSource]=\"execContextTableSource\">\r\n                    <ng-container matColumnDef=\"id\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Id</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.id}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"createdOn\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Created On</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.createdOn | date:'MMM d, yyyy HH:mm:ss'}}\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"isExecContextValid\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Is execContext<br>Valid</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.valid}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"execState\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>ExecState</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{execState[el.execState]}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"completedOn\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Completed on</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">\r\n                            <span *ngIf=\"el.completedOn !== null\">\r\n                                {{el.completedOn | date:'MMM d, yyyy HH:mm:ss'}}\r\n                            </span>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"bts\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef></th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">\r\n                            <ct-flex justify-content=\"flex-end\" gap=\"9px\">\r\n                                <ct-flex-item\r\n                                    *ngIf=\"(el.execState == execState.NONE) && (el.valid) && (response.sourceCodeValid)\">\r\n                                    <button mat-flat-button=\"mat-flat-button\" size=\"forTableRow\" color=\"primary\"\r\n                                        (click)=\"produce(el,$event)\">Produce</button>\r\n                                </ct-flex-item>\r\n                                <ct-flex-item\r\n                                    *ngIf=\"(el.execState == execState.PRODUCED) || (el.execState == execState.STOPPED)\">\r\n                                    <button mat-flat-button=\"mat-flat-button\" size=\"forTableRow\" color=\"primary\"\r\n                                        (click)=\"start(el,$event)\">Start</button>\r\n                                </ct-flex-item>\r\n                                <ct-flex-item *ngIf=\"(el.execState == execState.STARTED)\">\r\n                                    <button mat-flat-button=\"mat-flat-button\" size=\"forTableRow\" color=\"primary\"\r\n                                        (click)=\"stop(el,$event)\">Stop</button>\r\n                                </ct-flex-item>\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button=\"mat-flat-button\" color=\"primary\" size=\"forTableRow\"\r\n                                        [routerLink]=\"['/dispatcher','source-codes',sourceCodeId,'exec-context',el.id,'state']\">Task\r\n                                        States\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button=\"mat-flat-button\" color=\"warn\" size=\"forTableRow\"\r\n                                        [disabled]=\"el.__deleted\" (click)=\"delete(el)\">\r\n                                        <mat-icon>delete</mat-icon>\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                            </ct-flex>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row=\"mat-header-row\" *matHeaderRowDef=\"execContextColumnsToDisplay\"></tr>\r\n                    <tr mat-row=\"mat-row\" [class.mat-row--deleted]=\"row.__deleted\"\r\n                        *matRowDef=\"let row; columns: execContextColumnsToDisplay;\"></tr>\r\n                </table>\r\n            </ct-table>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"space-between\">\r\n                <ct-flex-item>\r\n                    <ct-flex justify-content=\"flex-start\" gap=\"8px\">\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" #prevTable (click)=\"prev()\" disabled=\"disabled\">\r\n                                <mat-icon>arrow_back_ios</mat-icon>\r\n                            </button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" #nextTable (click)=\"next()\" disabled=\"disabled\">\r\n                                <mat-icon>arrow_forward_ios</mat-icon>\r\n                            </button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <a mat-flat-button=\"mat-flat-button\" color=\"primary\" [disabled]=\"!response\"\r\n                        [routerLink]=\"['/dispatcher','source-codes',sourceCodeId,'exec-context','add']\">Add Exec\r\n                        Context</a>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ConfirmationDialogMethod } from '@src/app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { ExecContextState } from '@src/app/enums/ExecContextState';\r\nimport { ExecContextService } from '@src/app/services/exec-context/exec-context.service';\r\nimport { ExecContext } from '@src/app/services/source-codes/ExecContext';\r\nimport { ExecContextsResult } from '@src/app/services/source-codes/ExecContextsResult';\r\nimport { SourceCodesService } from '@src/app/services/source-codes/source-codes.service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'exec-contexts',\r\n    templateUrl: './exec-contexts.component.html',\r\n    styleUrls: ['./exec-contexts.component.scss']\r\n})\r\nexport class ExecContextsComponent implements OnInit {\r\n    readonly execState = ExecContextState;\r\n\r\n    @ViewChild('nextTable', { static: true }) nextTable: MatButton;\r\n    @ViewChild('prevTable', { static: true }) prevTable: MatButton;\r\n\r\n    sourceCodeId: string;\r\n    response: ExecContextsResult;\r\n    execContextTableSource: MatTableDataSource<ExecContext> = new MatTableDataSource<ExecContext>([]);\r\n    execContextColumnsToDisplay: string[] = [\r\n        'id',\r\n        'createdOn',\r\n        'isExecContextValid',\r\n        'execState',\r\n        'completedOn',\r\n        'bts'\r\n    ];\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dialog: MatDialog,\r\n        private execContextService: ExecContextService,\r\n        private sourceCodesService: SourceCodesService,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.sourceCodeId = this.route.snapshot.paramMap.get('sourceCodeId');\r\n        this.getExecContexts(0);\r\n    }\r\n\r\n    getExecContexts(page: number): void {\r\n        this.execContextService\r\n            .execContexts(this.sourceCodeId, page.toString())\r\n            .subscribe(execContextsResult => {\r\n                this.response = execContextsResult;\r\n                if (execContextsResult) {\r\n                    this.execContextTableSource = new MatTableDataSource(execContextsResult.instances.content);\r\n                    this.prevTable.disabled = execContextsResult.instances.first;\r\n                    this.nextTable.disabled = execContextsResult.instances.last;\r\n                }\r\n            });\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (execContext: ExecContext): string =>\r\n            `Do you want to delete ExecContext\\xa0#${execContext.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    delete(execContext: ExecContext): void {\r\n        this.execContextService\r\n            .execContextDeleteCommit(this.sourceCodeId, execContext.id?.toString?.())\r\n            .subscribe(v => this.getExecContexts(this.response.instances.number));\r\n    }\r\n\r\n    next(): void {\r\n        this.getExecContexts(this.response.instances.number + 1);\r\n    }\r\n\r\n    prev(): void {\r\n        this.getExecContexts(this.response.instances.number - 1);\r\n    }\r\n\r\n    runExecState(id, state): void {\r\n        this.execContextService\r\n            .execContextTargetState(this.sourceCodeId, state, id)\r\n            .subscribe(v => this.getExecContexts(this.response.instances.number));\r\n    }\r\n\r\n    stop(el, event): void {\r\n        event.target.disabled = true;\r\n        this.runExecState(el.id, 'STOPPED');\r\n    }\r\n\r\n    start(el, event): void {\r\n        event.target.disabled = true;\r\n        this.runExecState(el.id, 'STARTED');\r\n    }\r\n\r\n    produce(el, event): void {\r\n        event.target.disabled = true;\r\n        this.runExecState(el.id, 'PRODUCING');\r\n    }\r\n}","<mat-tab-group #matTabGroup mat-stretch-tabs dynamicHeight (selectedIndexChange)=\"tabChange()\">\r\n    <mat-tab label=\"CURRENT\"><br />\r\n\r\n        <ct-section *ngIf=\"sourceCodesResult\">\r\n            <ct-section-header>\r\n                <ct-section-header-row>\r\n                    <ct-flex justify-content=\"space-between\">\r\n                        <ct-flex-item>\r\n                            <ct-flex justify-content=\"flex-start\" gap=\"8px\">\r\n                                <ct-heading>Source Codes</ct-heading>\r\n                            </ct-flex>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(sourceCodesResult.assetMode)\">\r\n                            <ng-container *ngTemplateOutlet=\"addSourceCodeButtonTemplate\"></ng-container>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-header-row>\r\n\r\n                <ct-section-header-row *ngIf=\"dispatcherAssetModeService.isReplicated(sourceCodesResult.assetMode)\">\r\n                    <ct-alert theme=\"info\">Creation of sourceCodes is disabled, assetMode is 'replicated'. </ct-alert>\r\n                </ct-section-header-row>\r\n            </ct-section-header>\r\n\r\n            <ct-section-body>\r\n                <ct-section-body-row>\r\n                    <ng-container *ngTemplateOutlet=\"mainTableTemplate\"></ng-container>\r\n                </ct-section-body-row>\r\n            </ct-section-body>\r\n\r\n            <ct-section-footer>\r\n                <ct-section-footer-row>\r\n                    <ct-flex justify-content=\"space-between\">\r\n                        <ct-flex-item>\r\n                            <ct-table-pagination [pageableDefault]=\"sourceCodesResult?.items\" [globalDisable]=\"isLoading\" (next)=\"nextPage()\" (prev)=\"prevPage()\">\r\n                            </ct-table-pagination>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(sourceCodesResult.assetMode)\">\r\n                            <ng-container *ngTemplateOutlet=\"addSourceCodeButtonTemplate\"></ng-container>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-footer-row>\r\n            </ct-section-footer>\r\n        </ct-section>\r\n    </mat-tab>\r\n\r\n\r\n    <mat-tab label=\"ARCHIVE\"><br />\r\n        <source-codes-archive #sourceCodesArchive></source-codes-archive>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n\r\n\r\n\r\n\r\n<ng-template #mainTableTemplate>\r\n    <ct-table [isWaiting]=\"isLoading\">\r\n        <table class=\"mat-table\" mat-table [dataSource]=\"dataSource\">\r\n            <ng-container matColumnDef=\"id\">\r\n                <th mat-header-cell *matHeaderCellDef>Id </th>\r\n                <td mat-cell *matCellDef=\"let el\">{{el.id}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"uid\">\r\n                <th mat-header-cell *matHeaderCellDef>UID of sourceCode</th>\r\n                <td mat-cell *matCellDef=\"let el\">{{el.uid}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"type\">\r\n                <th mat-header-cell *matHeaderCellDef>Type</th>\r\n                <td mat-cell *matCellDef=\"let el\">{{getType(el.uid)}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"createdOn\">\r\n                <th mat-header-cell *matHeaderCellDef> Created on </th>\r\n                <td mat-cell *matCellDef=\"let el\">\r\n                    {{el.createdOn | date:'MMM d, yyyy, HH:mm:ss'}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"valid\">\r\n                <th mat-header-cell *matHeaderCellDef>Is valid? </th>\r\n                <td mat-cell *matCellDef=\"let el\">{{el.valid}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"bts\">\r\n                <th mat-header-cell *matHeaderCellDef> </th>\r\n                <td mat-cell *matCellDef=\"let el\">\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"9px\">\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" size=\"forTableRow\" color=\"primary\" [routerLink]=\"[el.id,'view']\" title=\"View\">View</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" size=\"forTableRow\" color=\"primary\" [routerLink]=\"[el.id,'exec-contexts']\">Exec Contexts</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(sourceCodesResult.assetMode)\">\r\n                            <button mat-flat-button=\"mat-flat-button\" size=\"forTableRow\" [disabled]=\"el.locked\" color=\"warn\" (click)=\"archive(el)\" title=\"Archive\">To Archive</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(sourceCodesResult.assetMode)\">\r\n                            <button mat-flat-button=\"mat-flat-button\" size=\"forTableRow\" color=\"warn\" (click)=\"delete(el)\" title=\"Delete\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"> </tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\" [class.deleted-table-row]=\"deletedSourceCodes.includes(row) || archivedSourceCodes.includes(row)\">\r\n            </tr>\r\n        </table>\r\n    </ct-table>\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<ng-template #addSourceCodeButtonTemplate>\r\n    <button mat-flat-button=\"mat-flat-button\" color=\"primary\" routerLink=\"add\">Add Source Code</button>\r\n</ng-template>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatTabGroup } from '@angular/material/tabs';\r\nimport { ConfirmationDialogInterface, ConfirmationDialogMethod } from '@app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { DispatcherAssetMode } from '@src/app/enums/DispatcherAssetMode';\r\nimport { SourceCodeType } from '@src/app/enums/SourceCodeType';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { DispatcherAssetModeService } from '@src/app/services/dispatcher-asset-mode/dispatcher-asset-mode.service';\r\nimport { SourceCodesService } from '@src/app/services/source-codes/source-codes.service';\r\nimport { SourceCode } from '@src/app/services/source-codes/SourceCode';\r\nimport { SourceCodesResult } from '@src/app/services/source-codes/SourceCodesResult';\r\nimport { SourceCodesArchiveComponent } from '../source-codes-archive/source-codes-archive.component';\r\n\r\n@Component({\r\n    selector: 'source-codes',\r\n    templateUrl: './source-codes.component.html',\r\n    styleUrls: ['./source-codes.component.sass']\r\n})\r\nexport class SourceCodesComponent extends UIStateComponent implements OnInit {\r\n\r\n    TABINDEX: number = 0;\r\n\r\n    sourceCodesResult: SourceCodesResult;\r\n    dataSource: MatTableDataSource<SourceCode> = new MatTableDataSource<SourceCode>([]);\r\n    columnsToDisplay: string[] = ['id', 'uid', 'type', 'createdOn', 'valid', 'bts'];\r\n    deletedSourceCodes: SourceCode[] = [];\r\n    archivedSourceCodes: SourceCode[] = [];\r\n\r\n    @ViewChild('matTabGroup', { static: true }) matTabGroup: MatTabGroup;\r\n    @ViewChild('sourceCodesArchive', { static: true }) sourceCodesArchive: SourceCodesArchiveComponent;\r\n\r\n    constructor(\r\n        readonly dialog: MatDialog,\r\n        private sourceCodesService: SourceCodesService,\r\n        public dispatcherAssetModeService: DispatcherAssetModeService,\r\n        readonly authenticationService: AuthenticationService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.updateTable(0);\r\n    }\r\n\r\n    updateTable(page: number): void {\r\n        this.setIsLoadingStart();\r\n        this.sourceCodesService\r\n            .sourceCodes(page.toString())\r\n            .subscribe({\r\n                next: sourceCodesResult => {\r\n                    this.sourceCodesResult = sourceCodesResult;\r\n                    this.dataSource = new MatTableDataSource(sourceCodesResult.items.content || []);\r\n                },\r\n                complete: () => {\r\n                    this.setIsLoadingEnd();\r\n                }\r\n            });\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (sourceCode: SourceCode): string =>\r\n            `Do you want to delete SourceCode\\xa0#${sourceCode.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    delete(sourceCode: SourceCode): void {\r\n        this.deletedSourceCodes.push(sourceCode);\r\n        this.sourceCodesService\r\n            .deleteCommit(sourceCode.id.toString())\r\n            .subscribe();\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (sourceCode: SourceCode): string =>\r\n            `Do you want to archive SourceCode\\xa0#${sourceCode.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Archive'\r\n    })\r\n    archive(sourceCode: SourceCode): void {\r\n        this.archivedSourceCodes.push(sourceCode);\r\n        this.sourceCodesService\r\n            .archiveCommit(sourceCode.id.toString())\r\n            .subscribe();\r\n    }\r\n\r\n    tabChange(): void {\r\n        if (this.matTabGroup.selectedIndex === 1) {\r\n            this.sourceCodesArchive.updateTable(0);\r\n        }\r\n    }\r\n\r\n    nextPage(): void {\r\n        this.updateTable(this.sourceCodesResult.items.number + 1);\r\n    }\r\n\r\n    prevPage(): void {\r\n        this.updateTable(this.sourceCodesResult.items.number - 1);\r\n    }\r\n\r\n    getType(uid: string): SourceCodeType {\r\n        return this.sourceCodesService.getSourceCodeType(uid, this.sourceCodesResult);\r\n    }\r\n\r\n}","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { SourceCodesService } from '@src/app/services/source-codes/source-codes.service';\r\nimport { MatButton } from '@angular/material/button';\r\nimport { SourceCodeResult } from '@src/app/services/source-codes/SourceCodeResult';\r\nimport { CtFileUploadComponent } from '../../ct/ct-file-upload/ct-file-upload.component';\r\n\r\n@Component({\r\n    selector: 'card-form-upload-source-code',\r\n    templateUrl: './card-form-upload-source-code.component.html',\r\n    styleUrls: ['./card-form-upload-source-code.component.sass']\r\n})\r\nexport class CardFormUploadSourceCodeComponent {\r\n    @ViewChild(MatButton) button: MatButton;\r\n    @ViewChild(CtFileUploadComponent) file: CtFileUploadComponent;\r\n    @Output() responseChange: EventEmitter<SourceCodeResult> = new EventEmitter<SourceCodeResult>();\r\n    @Output() abort: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n\r\n    constructor(\r\n        private sourceCodesService: SourceCodesService\r\n    ) { }\r\n\r\n    upload(): void {\r\n        this.sourceCodesService\r\n            .uploadSourceCode(this.file.fileInput.nativeElement.files[0])\r\n            .subscribe(response => {\r\n                this.responseChange.emit(response);\r\n            });\r\n    }\r\n\r\n    cancel(): void {\r\n        this.abort.emit();\r\n    }\r\n\r\n    changed(value: string): void {\r\n        if ((this.file.fileInput.nativeElement as HTMLInputElement).files.length) {\r\n            this.button.disabled = false;\r\n        } else {\r\n            this.button.disabled = true;\r\n        }\r\n    }\r\n}\r\n","<ct-section>\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>Upload SourceCode from file </ct-heading>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-file-upload (changed)=\"changed($event)\" acceptTypes=\".yml, .yaml\"></ct-file-upload>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                <ct-flex-item>\r\n                    <button mat-stroked-button (click)=\"cancel()\">Cancel</button>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button mat-flat-button=\"mat-flat-button\"\r\n                        [disabled]=\"!file?.fileInput?.nativeElement?.files?.length\" color=\"primary\"\r\n                        (click)=\"upload()\">Upload</button>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'edit-exec-context',\r\n  templateUrl: './edit-exec-context.component.html',\r\n  styleUrls: ['./edit-exec-context.component.scss']\r\n})\r\nexport class EditExecContextComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<p>\r\n  edit-exec-context works!\r\n</p>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { CtModule } from '../ct/ct.module';\r\nimport { AddExecContextComponent } from './add-exec-context/add-exec-context.component';\r\nimport { AddSourceCodeComponent } from './add-source-code/add-source-code.component';\r\nimport { EditExecContextComponent } from './edit-exec-context/edit-exec-context.component';\r\nimport { ExecContextStatesComponent } from './exec-context-states/exec-context-states.component';\r\nimport { ExecContextsComponent } from './exec-contexts/exec-contexts.component';\r\nimport { SourceCodesArchiveComponent } from './source-codes-archive/source-codes-archive.component';\r\nimport { SourceCodesComponent } from './source-codes/source-codes.component';\r\nimport { CardFormUploadSourceCodeComponent } from './card-form-upload-source-code/card-form-upload-source-code.component';\r\nimport { CardFormAddSourceCodeComponent } from './card-form-add-source-code/card-form-add-source-code.component';\r\nimport { ViewSourceCodeComponent } from './view-source-code/view-source-code.component';\r\nimport { StateOfTasksComponent } from './state-of-tasks/state-of-tasks.component';\r\n\r\nexport const SourceCodesRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: SourceCodesComponent,\r\n    },\r\n    {\r\n        path: 'add',\r\n        component: AddSourceCodeComponent,\r\n        data: {\r\n            backConfig: ['../']\r\n        }\r\n    },\r\n    {\r\n        path: ':sourceCodeId/view',\r\n        component: ViewSourceCodeComponent,\r\n        data: {\r\n            backConfig: ['../', '../']\r\n        }\r\n    },\r\n    {\r\n        path: ':sourceCodeId/exec-contexts',\r\n        component: ExecContextsComponent,\r\n        data: {\r\n            backConfig: ['../', '../']\r\n        }\r\n    },\r\n    {\r\n        path: ':sourceCodeId/exec-context/add',\r\n        component: AddExecContextComponent,\r\n    },\r\n    {\r\n        path: ':sourceCodeId/exec-context/:execContextId/edit',\r\n        component: EditExecContextComponent,\r\n        data: {\r\n            backConfig: ['../', '../']\r\n        }\r\n    },\r\n    {\r\n        path: ':sourceCodeId/exec-context/:execContextId/state',\r\n        component: ExecContextStatesComponent,\r\n        data: {\r\n            backConfig: ['../', '../', '../', 'exec-contexts']\r\n        }\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(SourceCodesRoutes)],\r\n    exports: [RouterModule],\r\n    declarations: [],\r\n})\r\nexport class SourceCodeRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        SourceCodesComponent,\r\n        SourceCodesArchiveComponent,\r\n        AddSourceCodeComponent,\r\n        ViewSourceCodeComponent,\r\n        ExecContextsComponent,\r\n        AddExecContextComponent,\r\n        EditExecContextComponent,\r\n        ExecContextStatesComponent,\r\n        CardFormAddSourceCodeComponent,\r\n        CardFormUploadSourceCodeComponent,\r\n        StateOfTasksComponent\r\n    ],\r\n\r\n    imports: [\r\n        CommonModule,\r\n        SourceCodeRoutingModule,\r\n        CtModule,\r\n        MaterialAppModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateModule.forChild({})\r\n    ]\r\n})\r\nexport class SourceCodeModule { }\r\n"]}