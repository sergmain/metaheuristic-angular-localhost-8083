{"version":3,"sources":["./src/app/modules/dispatcher/dispatcher-index/dispatcher-index.component.ts","./src/app/modules/dispatcher/dispatcher-index/dispatcher-index.component.html","./src/app/modules/dispatcher/dispatcher-root/dispatcher-root.component.ts","./src/app/modules/dispatcher/dispatcher-root/dispatcher-root.component.html","./src/app/modules/dispatcher/dispatcher.module.ts"],"names":[],"mappings":"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","file":"src-app-modules-dispatcher-dispatcher-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dispatcher-index',\r\n  templateUrl: './dispatcher-index.component.html',\r\n  styleUrls: ['./dispatcher-index.component.sass']\r\n})\r\nexport class DispatcherIndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ct-section>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-env-msg-outer propertyName=\"brandingMsg\"></ct-env-msg-outer>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n</ct-section>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { Settings } from '@src/app/services/settings/Settings';\r\nimport { SettingsService, SettingsServiceEventChange } from '@src/app/services/settings/settings.service';\r\n\r\n@Component({\r\n    selector: 'dispatcher-root',\r\n    templateUrl: './dispatcher-root.component.html',\r\n    styleUrls: ['./dispatcher-root.component.sass']\r\n})\r\nexport class DispatcherRootComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    settings: Settings;\r\n    sidenavOpened: boolean;\r\n\r\n    constructor(\r\n        public authenticationService: AuthenticationService,\r\n        private router: Router,\r\n        private settingsService: SettingsService\r\n    ) {\r\n        super(authenticationService);\r\n        // повторным кликом перезагружаем страницу\r\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscribeSubscription(\r\n            this.settingsService.events.subscribe(event => {\r\n                if (event instanceof SettingsServiceEventChange) {\r\n                    this.settings = event.settings;\r\n                    this.sidenavOpened = event.settings.sidenav;\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeSubscriptions();\r\n    }\r\n}\r\n","<mat-sidenav-container>\r\n    <mat-sidenav mode=\"side\" [opened]=\"sidenavOpened\">\r\n        <div class=\"navigation\">\r\n\r\n            <button *ngIf=\"\r\n                    isRole.MasterAssetManager ||\r\n                    isRole.Admin ||\r\n                    isRole.Data ||\r\n                    isRole.Manager\r\n                \" \r\n                mat-button  \r\n                routerLinkActive=\"active\" \r\n                routerLink=\"/dispatcher/source-codes\">\r\n                    {{ 'dispatcher.SourceCodes' | translate }}\r\n            </button>\r\n\r\n            <button *ngIf=\"\r\n                    isRole.Admin || \r\n                    isRole.Data\r\n                \" \r\n                mat-button \r\n                routerLinkActive=\"active\"\r\n                routerLink=\"/dispatcher/global-variables\">\r\n                    {{ 'dispatcher.Variables' | translate }}\r\n            </button>\r\n\r\n            <button *ngIf=\"\r\n                    isRole.MasterAssetManager ||\r\n                    isRole.Admin ||\r\n                    isRole.Data\r\n                \" \r\n                mat-button \r\n                routerLinkActive=\"active\"\r\n                routerLink=\"/dispatcher/functions\">\r\n                    {{ 'dispatcher.Functions' | translate }}\r\n            </button>\r\n\r\n            <button *ngIf=\"\r\n                    isRole.Admin ||\r\n                    isRole.Data\r\n                \" \r\n                mat-button \r\n                routerLinkActive=\"active\"\r\n                routerLink=\"/dispatcher/processors\">\r\n                    {{ 'dispatcher.Processors' | translate }}\r\n            </button>\r\n\r\n            <button *ngIf=\"\r\n                    isRole.Admin\r\n                \" \r\n                mat-button \r\n                routerLinkActive=\"active\"\r\n                routerLink=\"/dispatcher/accounts\">\r\n                    {{ 'dispatcher.Accounts' | translate }}\r\n            </button>\r\n\r\n            <button *ngIf=\"\r\n                    isRole.MasterAdmin ||\r\n                    isRole.MasterOperator ||\r\n                    isRole.MasterSupport\r\n                \" \r\n                mat-button \r\n                routerLinkActive=\"active\"\r\n                routerLink=\"/dispatcher/company/companies\">\r\n                    {{ 'dispatcher.Company' | translate }}\r\n            </button>\r\n\r\n        </div>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <ct-content>\r\n            <router-outlet></router-outlet>\r\n            <ct-back-button></ct-back-button>\r\n            <copy-right></copy-right>\r\n        </ct-content>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DispatcherIndexComponent } from './dispatcher-index/dispatcher-index.component';\r\nimport { DispatcherRootComponent } from './dispatcher-root/dispatcher-root.component';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CtModule } from '../ct/ct.module';\r\nimport { CopyRightModule } from '../copy-right/copy-right.module';\r\nimport { Role } from '@src/app/services/authentication';\r\nimport { RoleRouteGuard } from '@src/app/guards/role-route.guard';\r\n\r\n\r\nconst commonRequiredRoles: Role[] = [\r\n    Role.MasterAssetManager,\r\n    Role.MasterAdmin,\r\n    Role.MasterOpertator,\r\n    Role.MasterSupport,\r\n    Role.Admin,\r\n    Role.Data,\r\n    Role.Manager,\r\n];\r\n\r\n\r\n\r\nexport const DispatcherRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        canActivate: [RoleRouteGuard],\r\n        component: DispatcherRootComponent,\r\n        data: {\r\n            requiredRoles: commonRequiredRoles\r\n        },\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: DispatcherIndexComponent\r\n            }]\r\n    },\r\n    {\r\n        path: 'source-codes',\r\n        canActivate: [RoleRouteGuard],\r\n        component: DispatcherRootComponent,\r\n        loadChildren: () => import('@src/app/modules/source-codes/source-codes.module').then(m => m.SourceCodeModule),\r\n        data: {\r\n            requiredRoles: [Role.MasterAssetManager, Role.Admin, Role.Data, Role.Manager],\r\n            section: 'source-codes'\r\n        },\r\n    },\r\n    {\r\n        path: 'global-variables',\r\n        canActivate: [RoleRouteGuard],\r\n        component: DispatcherRootComponent,\r\n        loadChildren: () => import('@src/app/modules/global-variables/global-variables.module').then(m => m.GlobalVariablesModule),\r\n        data: {\r\n            requiredRoles: [Role.Admin, Role.Data],\r\n            section: 'global-variables'\r\n        }\r\n    },\r\n    {\r\n        path: 'functions',\r\n        canActivate: [RoleRouteGuard],\r\n        component: DispatcherRootComponent,\r\n        loadChildren: () => import('@src/app/modules/functions/functions.module').then(m => m.FunctionsModule),\r\n        data: {\r\n            requiredRoles: [Role.MasterAssetManager, Role.Admin, Role.Data],\r\n            section: 'functions'\r\n        }\r\n    },\r\n    {\r\n        path: 'processors',\r\n        canActivate: [RoleRouteGuard],\r\n        component: DispatcherRootComponent,\r\n        loadChildren: () => import('src/app/modules/processors/processors.module').then(m => m.ProcessorsModule),\r\n        data: {\r\n            requiredRoles: [Role.Admin, Role.Data],\r\n            section: 'processors'\r\n        }\r\n    },\r\n    {\r\n        path: 'accounts',\r\n        canActivate: [RoleRouteGuard],\r\n        component: DispatcherRootComponent,\r\n        loadChildren: () => import('src/app/modules/accounts/accounts.module').then(m => m.AccountsModule),\r\n        data: {\r\n            requiredRoles: [Role.Admin],\r\n            section: 'accounts'\r\n        }\r\n    },\r\n    {\r\n        path: 'company',\r\n        canActivate: [RoleRouteGuard],\r\n        component: DispatcherRootComponent,\r\n        loadChildren: () => import('src/app/modules/company/company.module').then(m => m.CompnyModule),\r\n        data: {\r\n            requiredRoles: [Role.MasterAdmin, Role.MasterOpertator, Role.MasterSupport],\r\n            section: 'company'\r\n        }\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(DispatcherRoutes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class DispatcherRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DispatcherRootComponent,\r\n        DispatcherIndexComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        DispatcherRoutingModule,\r\n\r\n        CtModule,\r\n        CopyRightModule,\r\n        MaterialAppModule,\r\n        TranslateModule.forChild({})\r\n    ]\r\n})\r\nexport class DispatcherModule { }\r\n"],"sourceRoot":"webpack:///"}