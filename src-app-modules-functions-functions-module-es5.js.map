{"version":3,"sources":["webpack:///src/app/modules/functions/add-function/add-function.component.ts","webpack:///src/app/modules/functions/add-function/add-function.component.html","webpack:///src/app/modules/functions/functions.module.ts","webpack:///src/app/services/functions/functions.service.ts","webpack:///src/app/modules/functions/functions/functions.component.html","webpack:///src/app/modules/functions/functions/functions.component.ts"],"names":["AddFunctionComponent","funcrionsService","router","navigate","uploadFunction","fileUpload","fileInput","nativeElement","files","subscribe","response","status","OK","cancel","upload","FunctionsRoutes","path","component","data","backConfig","FunctionsRoutingModule","forChild","FunctionsModule","url","s","baseUrl","FuncrionsService","http","page","get","params","id","file","post","FunctionsComponent","functionService","dispatcherAssetModeService","dialog","authenticationService","dataSource","columnsToDisplay","deletedRows","showParams","updateTable","setIsLoadingStart","getFunctions","toString","next","functionsResult","functions","complete","setIsLoadingEnd","functionEntity","push","deleteCommit","question","rejectTitle","resolveTitle"],"mappings":"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","file":"src-app-modules-functions-functions-module-es5.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OperationStatus } from '@src/app/enums/OperationStatus';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { FuncrionsService } from '@src/app/services/functions/functions.service';\r\nimport { CtFileUploadComponent } from '../../ct/ct-file-upload/ct-file-upload.component';\r\n\r\n@Component({\r\n    selector: 'add-function',\r\n    templateUrl: './add-function.component.html',\r\n    styleUrls: ['./add-function.component.scss']\r\n})\r\n\r\nexport class AddFunctionComponent {\r\n\r\n    response: OperationStatusRest;\r\n\r\n    @ViewChild('fileUpload', { static: true }) fileUpload: CtFileUploadComponent;\r\n\r\n    constructor(\r\n        private funcrionsService: FuncrionsService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    cancel(): void {\r\n        this.router.navigate(['/dispatcher', 'functions']);\r\n    }\r\n\r\n    upload(): void {\r\n        this.funcrionsService\r\n            .uploadFunction(this.fileUpload.fileInput.nativeElement.files[0])\r\n            .subscribe(\r\n                (response) => {\r\n                    this.response = response;\r\n                    if (response.status === OperationStatus.OK) {\r\n                        this.cancel();\r\n                    }\r\n                }\r\n            );\r\n    }\r\n}","<ct-cols>\r\n    <ct-col size=\"6\">\r\n        <ct-section>\r\n            <ct-section-header>\r\n                <ct-section-header-row>\r\n                    <ct-heading>Add Function</ct-heading>\r\n                </ct-section-header-row>\r\n            </ct-section-header>\r\n            <ct-section-body>\r\n                <ct-section-body-row>\r\n                    <ct-file-upload #fileUpload></ct-file-upload>\r\n                </ct-section-body-row>\r\n            </ct-section-body>\r\n            <ct-section-footer>\r\n                <ct-section-footer-row>\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                        <ct-flex-item>\r\n                            <button mat-stroked-button=\"mat-stroked-button\" (click)=\"cancel()\">Cancel </button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" (click)=\"upload()\" color=\"primary\"\r\n                                [disabled]=\"!fileUpload?.fileInput?.nativeElement?.files?.length\">Upload\r\n                                function</button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-footer-row>\r\n            </ct-section-footer>\r\n        </ct-section>\r\n    </ct-col>\r\n    <ct-col size=\"6\" *ngIf=\"response\">\r\n        <ct-rest-status [content]=\"response\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AddFunctionComponent } from './add-function/add-function.component';\r\nimport { FunctionsComponent } from './functions/functions.component';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { CtModule } from '../ct/ct.module';\r\n\r\n\r\nexport const FunctionsRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: FunctionsComponent,\r\n    }, {\r\n        path: 'add',\r\n        component: AddFunctionComponent,\r\n        data: {\r\n            backConfig: ['../']\r\n        }\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(FunctionsRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class FunctionsRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FunctionsRoutingModule,\r\n        CtModule,\r\n        MaterialAppModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateModule.forChild({})\r\n    ],\r\n    declarations: [\r\n        AddFunctionComponent,\r\n        FunctionsComponent\r\n    ]\r\n})\r\nexport class FunctionsModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { FunctionsResult } from './FunctionsResult';\r\n\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher/function/${s}`;\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FuncrionsService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    // @GetMapping(\"/functions\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA', 'MANAGER')\")\r\n    // public FunctionData.FunctionsResult getFunctions() {\r\n    //     return functionTopLevelService.getFunctions();\r\n    // }\r\n    getFunctions(page: string): Observable<FunctionsResult> {\r\n        return this.http.get<FunctionsResult>(url('functions'), { params: { page } });\r\n    }\r\n\r\n\r\n    // @GetMapping(\"/function-delete/{id}\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA')\")\r\n    // public OperationStatusRest deleteCommit(@PathVariable Long id) {\r\n    //     return functionTopLevelService.deleteFunctionById(id);\r\n    // }\r\n    deleteCommit(id: string): Observable<OperationStatusRest> {\r\n        return this.http.get<OperationStatusRest>(url(`function-delete/${id}`));\r\n    }\r\n\r\n\r\n    // @PostMapping(value = \"/function-upload-from-file\")\r\n    // @PreAuthorize(\"hasAnyRole('ADMIN', 'DATA')\")\r\n    // public OperationStatusRest uploadFunction(final MultipartFile file) {\r\n    //     return functionTopLevelService.uploadFunction(file);\r\n    // }\r\n    uploadFunction(file: File): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url('function-upload-from-file'), formData({ file }));\r\n    }\r\n}","<ct-section *ngIf=\"functionsResult\">\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-flex justify-content=\"space-between\">\r\n                <ct-flex-item>\r\n                    <ct-heading>Functions</ct-heading>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <ct-flex justify-content=\"flex-end\" align-items=\"center\" gap=\"16px\">\r\n                        <ct-flex-item>\r\n                            <mat-slide-toggle [(ngModel)]=\"showParams\">Show Params</mat-slide-toggle>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n                            <ng-container *ngTemplateOutlet=\"addButtonTemplate\"></ng-container>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-header-row>\r\n        <ct-section-header-row *ngIf=\"dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n            <ct-alert theme=\"info\">Upload and deletion of functions are disabled, assetMode is 'replicated'.</ct-alert>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ng-container *ngTemplateOutlet=\"MainTableTemplate\"></ng-container>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"space-between\">\r\n                <ct-flex-item>\r\n                    <!-- <ct-table-pagination [pageableDefault]=\"functionsResult.items\" [globalDisable]=\"false\"\r\n                        (next)=\"nextPage()\" (prev)=\"prevPage()\"></ct-table-pagination> -->\r\n                </ct-flex-item>\r\n                <ct-flex-item *ngIf=\"!dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n                    <ng-container *ngTemplateOutlet=\"addButtonTemplate\"></ng-container>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>\r\n\r\n\r\n\r\n<ng-template #MainTableTemplate>\r\n    <ct-table [isWaiting]=\"isLoading\">\r\n        <table class=\"mat-table\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows>\r\n            <ng-container matColumnDef=\"code\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    Code\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let el\">{{ el.code }}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"type\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    Type\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let el\">{{ el.type }}</td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"params\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    Params\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let el\">\r\n                    <div [hidden]=\"!showParams\">\r\n                        <ct-pre>{{ el.params }}</ct-pre>\r\n                    </div>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"bts\">\r\n                <th mat-header-cell *matHeaderCellDef></th>\r\n                <td mat-cell *matCellDef=\"let el\">\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\"\r\n                        *ngIf=\"!dispatcherAssetModeService.isReplicated(functionsResult.assetMode)\">\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button color=\"warn\" size=\"forTableRow\" (click)=\"delete(el)\">\r\n                                <mat-icon>delete</mat-icon>\r\n                            </button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay\"\r\n                [class.deleted-table-row]=\"deletedRows.includes(row)\"></tr>\r\n        </table>\r\n    </ct-table>\r\n</ng-template>\r\n\r\n\r\n\r\n<ng-template #addButtonTemplate>\r\n    <a routerLink=\"/dispatcher/functions/add\">\r\n        <button mat-flat-button color=\"primary\"> Add Function </button>\r\n    </a>\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmationDialogMethod } from '@app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { DispatcherAssetModeService } from '@src/app/services/dispatcher-asset-mode/dispatcher-asset-mode.service';\r\nimport { FunctionEntity } from '@src/app/services/functions/FunctionEntity';\r\nimport { FuncrionsService } from '@src/app/services/functions/functions.service';\r\nimport { FunctionsResult } from '@src/app/services/functions/FunctionsResult';\r\n\r\n@Component({\r\n    selector: \"functions\",\r\n    templateUrl: './functions.component.html',\r\n    styleUrls: ['./functions.component.scss'],\r\n})\r\nexport class FunctionsComponent extends UIStateComponent implements OnInit {\r\n    functionsResult: FunctionsResult;\r\n    dataSource = new MatTableDataSource<FunctionEntity>([]);\r\n    columnsToDisplay: string[] = ['code', 'type', 'params', 'bts'];\r\n    deletedRows: FunctionEntity[] = [];\r\n    showParams: boolean = false;\r\n\r\n    constructor(\r\n        private functionService: FuncrionsService,\r\n        public dispatcherAssetModeService: DispatcherAssetModeService,\r\n        readonly dialog: MatDialog,\r\n        readonly authenticationService: AuthenticationService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.updateTable(0);\r\n    }\r\n\r\n    updateTable(page: number) {\r\n        this.setIsLoadingStart();\r\n        this.functionService\r\n            .getFunctions(page.toString())\r\n            .subscribe({\r\n                next: functionsResult => {\r\n                    this.functionsResult = functionsResult;\r\n                    this.dataSource = new MatTableDataSource(functionsResult.functions);\r\n                },\r\n                complete: () => {\r\n                    this.setIsLoadingEnd();\r\n                }\r\n            });\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (functionEntity: FunctionEntity): string =>\r\n            `Do you want to delete Function\\xa0#${functionEntity.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete',\r\n    })\r\n    delete(functionEntity: FunctionEntity) {\r\n        this.deletedRows.push(functionEntity);\r\n        this.functionService.deleteCommit(functionEntity.id.toString()).subscribe();\r\n    }\r\n\r\n    // INFO: functionsResult не содержит pageable\r\n    // INFO: листание\r\n    nextPage() {\r\n        // this.updateTable(this...items.number + 1);\r\n    }\r\n\r\n    prevPage() {\r\n        // this.updateTable(this...items.number - 1);\r\n    }\r\n}\r\n"]}