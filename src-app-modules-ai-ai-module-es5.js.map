{"version":3,"sources":["webpack:///src/app/modules/ai/ai.module.ts","webpack:///src/app/modules/ai/ai-root/ai-root.component.ts","webpack:///src/app/modules/ai/ai-root/ai-root.component.html","webpack:///src/app/modules/ai/ai-index/ai-index.component.ts","webpack:///src/app/modules/ai/ai-index/ai-index.component.html"],"names":["commonRequiredRoles","Admin","Data","Manager","AiRoutes","path","canActivate","component","data","requiredRoles","children","loadChildren","then","m","ExperimentsModule","section","ExperimentResultModule","AiRoutingModule","forChild","AiModule","AiRootComponent","router","settingsService","authenticationService","routeReuseStrategy","shouldReuseRoute","subscribeSubscription","events","subscribe","event","settings","sidenavOpened","sidenav","unsubscribeSubscriptions","AiIndexComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAYA,UAAMA,mBAAmB,GAAW,CAAC,sEAAKC,KAAN,EAAa,sEAAKC,IAAlB,EAAwB,sEAAKC,OAA7B,CAApC;AAEO,UAAMC,QAAQ,GAAW,CAC5B;AACIC,YAAI,EAAE,EADV;AAEIC,mBAAW,EAAE,CAAC,+EAAD,CAFjB;AAGIC,iBAAS,EAAE,0EAHf;AAIIC,YAAI,EAAE;AACFC,uBAAa,EAAET;AADb,SAJV;AAOIU,gBAAQ,EAAE,CAAC;AACPL,cAAI,EAAE,EADC;AAEPE,mBAAS,EAAE,6EAFJ;AAGPC,cAAI,EAAE;AACFC,yBAAa,EAAET;AADb;AAHC,SAAD;AAPd,OAD4B,EAgB5B;AACIK,YAAI,EAAE,aADV;AAEIC,mBAAW,EAAE,CAAC,+EAAD,CAFjB;AAGIC,iBAAS,EAAE,0EAHf;AAIII,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAAyDC,IAAzD,CAA8D,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,iBAAN;AAAA,WAA/D,CAAN;AAAA,SAJlB;AAKIN,YAAI,EAAE;AACFO,iBAAO,EAAE,aADP;AAEFN,uBAAa,EAAET;AAFb;AALV,OAhB4B,EA0B5B;AACIK,YAAI,EAAE,oBADV;AAEIC,mBAAW,EAAE,CAAC,+EAAD,CAFjB;AAGIC,iBAAS,EAAE,0EAHf;AAIII,oBAAY,EAAE;AAAA,iBAAM;AAAA;AAAA;AAAA;AAAA,mBAAsEC,IAAtE,CAA2E,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACG,sBAAN;AAAA,WAA5E,CAAN;AAAA,SAJlB;AAKIR,YAAI,EAAE;AACFO,iBAAO,EAAE,mBADP;AAEFN,uBAAa,EAAET;AAFb;AALV,OA1B4B,CAAzB;;UA6CMiB,e;;;;;yBAAAA,e;AAAe,O;;;cAAfA;;;kBAJA,CAAC,6DAAaC,QAAb,CAAsBd,QAAtB,CAAD,C,EACC,4D;;;;6HAGDa,e,EAAe;AAAA;AAAA,oBAHd,4DAGc;AAAA,S;AAHF,O;;UAoBbE,Q;;;;;yBAAAA,Q;AAAQ,O;;;cAARA;;;kBAbA,CACL,4DADK,EAELF,eAFK,EAGL,sDAHK,EAIL,6EAJK,EAKL,4EALK,EAML,oEAAgBC,QAAhB,CAAyB,EAAzB,CANK,C;;;;6HAaAC,Q,EAAQ;AAAA,yBAJb,6EAIa,EAHb,0EAGa;AAHE,oBATf,4DASe,EAdVF,eAcU,EAPf,sDAOe,EANf,6EAMe,EALf,4EAKe,EALE,mEAKF;AAGF,S;AARI,O;;;;;;;;;ACnEzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWaG,e;;;;;AAIT,iCACYC,MADZ,EAEYC,eAFZ,EAGaC,qBAHb,EAGyD;AAAA;;AAAA;;AAErD,oCAAMA,qBAAN;AAJQ,gBAAAF,MAAA,GAAAA,MAAA;AACA,gBAAAC,eAAA,GAAAA,eAAA;AACC,gBAAAC,qBAAA,GAAAA,qBAAA;;AAGT,gBAAKF,MAAL,CAAYG,kBAAZ,CAA+BC,gBAA/B,GAAkD;AAAA,mBAAM,KAAN;AAAA,WAAlD;;AAHqD;AAIxD;;;;iBAED,oBAAQ;AAAA;;AACJ,iBAAKC,qBAAL,CAA2B,KAAKJ,eAAL,CAAqBK,MAArB,CAA4BC,SAA5B,CAAsC,UAAAC,KAAK,EAAI;AACtE,kBAAIA,KAAK,YAAY,sGAArB,EAAiD;AAC7C,sBAAI,CAACC,QAAL,GAAgBD,KAAK,CAACC,QAAtB;AACA,sBAAI,CAACC,aAAL,GAAqBF,KAAK,CAACC,QAAN,CAAeE,OAApC;AACH;AACJ,aAL0B,CAA3B;AAMH;;;iBAED,uBAAW;AACP,iBAAKC,wBAAL;AACH;;;;QAxBgC,iF;;;yBAAxBb,e,EAAe,uH,EAAA,4J,EAAA,uJ;AAAA,O;;;cAAfA,e;AAAe,gC;AAAA,4F;AAAA,iB;AAAA,e;AAAA,iR;AAAA;AAAA;ACZ5B;;AACI;;AAAA;;AACI;;AAAA;;AACI;;AAAA;;AACiC;;;;AAAkC;;AACnE;;AAAA;;AACwC;;;;AAA8B;;AAC1E;;AAAA;;AACJ;;AAAA;;AACA;;AAAA;;AACI;;AAAA;;AACI;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACJ;;AAAA;;AACJ;;AAAA;;AACJ;;AAAA;;;;AAf6B;;AAAA;;AAGgB;;AAAA;;AAEO;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCvCc,gB;AAEX,oCAAc;AAAA;AAAG;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA,gB;AAAgB,O;;;cAAhBA,gB;AAAgB,iC;AAAA,gB;AAAA,e;AAAA;AAAA;ACP7B;;AAAG;;AAAe;;AAClB","file":"src-app-modules-ai-ai-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CtModule } from '../ct/ct.module';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { CopyRightModule } from '../copy-right/copy-right.module';\r\nimport { AiIndexComponent } from './ai-index/ai-index.component';\r\nimport { AiRootComponent } from './ai-root/ai-root.component';\r\nimport { RoleRouteGuard } from '@src/app/guards/role-route.guard';\r\nimport { Role } from '@src/app/services/authentication';\r\n\r\nconst commonRequiredRoles: Role[] = [Role.Admin, Role.Data, Role.Manager];\r\n\r\nexport const AiRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        canActivate: [RoleRouteGuard],\r\n        component: AiRootComponent,\r\n        data: {\r\n            requiredRoles: commonRequiredRoles\r\n        },\r\n        children: [{\r\n            path: '',\r\n            component: AiIndexComponent,\r\n            data: {\r\n                requiredRoles: commonRequiredRoles\r\n            },\r\n        }]\r\n    },\r\n    {\r\n        path: 'experiments',\r\n        canActivate: [RoleRouteGuard],\r\n        component: AiRootComponent,\r\n        loadChildren: () => import('src/app/modules/experiments/experiments.module').then(m => m.ExperimentsModule),\r\n        data: {\r\n            section: 'experiments',\r\n            requiredRoles: commonRequiredRoles\r\n        }\r\n    },\r\n    {\r\n        path: 'experiment-results',\r\n        canActivate: [RoleRouteGuard],\r\n        component: AiRootComponent,\r\n        loadChildren: () => import('@src/app/modules/experiment-result/experiment-result.module').then(m => m.ExperimentResultModule),\r\n        data: {\r\n            section: 'experiment-result',\r\n            requiredRoles: commonRequiredRoles\r\n        }\r\n    }\r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(AiRoutes)],\r\n    exports: [RouterModule],\r\n    declarations: []\r\n})\r\nexport class AiRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        AiRoutingModule,\r\n        CtModule,\r\n        CopyRightModule,\r\n        MaterialAppModule,\r\n        TranslateModule.forChild({})\r\n    ],\r\n    declarations: [\r\n        AiIndexComponent,\r\n        AiRootComponent\r\n    ]\r\n})\r\nexport class AiModule { }","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\nimport { Settings } from '@src/app/services/settings/Settings';\r\nimport { SettingsService, SettingsServiceEventChange } from '@src/app/services/settings/settings.service';\r\n\r\n@Component({\r\n    selector: 'ai-root',\r\n    templateUrl: './ai-root.component.html',\r\n    styleUrls: ['./ai-root.component.sass']\r\n})\r\nexport class AiRootComponent extends UIStateComponent implements OnInit, OnDestroy {\r\n    settings: Settings;\r\n    sidenavOpened: boolean;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private settingsService: SettingsService,\r\n        readonly authenticationService: AuthenticationService\r\n    ) {\r\n        super(authenticationService);\r\n        this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.subscribeSubscription(this.settingsService.events.subscribe(event => {\r\n            if (event instanceof SettingsServiceEventChange) {\r\n                this.settings = event.settings;\r\n                this.sidenavOpened = event.settings.sidenav;\r\n            }\r\n        }));\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribeSubscriptions();\r\n    }\r\n}\r\n","<mat-sidenav-container>\r\n    <mat-sidenav mode=\"side\" [opened]=\"sidenavOpened\">\r\n        <div class=\"navigation\">\r\n            <button class=\"mat-button\" mat-button routerLinkActive=\"active\"\r\n                routerLink=\"/ai/experiments\">{{ 'ai.Experiments' | translate }}</button>\r\n            <button class=\"mat-button\" mat-button routerLinkActive=\"active\"\r\n                routerLink=\"/ai/experiment-results\">{{ 'ai.Results' | translate }}</button>\r\n        </div>\r\n    </mat-sidenav>\r\n    <mat-sidenav-content>\r\n        <ct-content>\r\n            <router-outlet></router-outlet>\r\n            <ct-back-button></ct-back-button>\r\n            <copy-right></copy-right>\r\n        </ct-content>\r\n    </mat-sidenav-content>\r\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ai-index',\r\n  templateUrl: './ai-index.component.html',\r\n  styleUrls: ['./ai-index.component.sass']\r\n})\r\nexport class AiIndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>ai-index works!</p>\r\n"]}