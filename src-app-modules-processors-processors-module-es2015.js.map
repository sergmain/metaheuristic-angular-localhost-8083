{"version":3,"sources":["./src/app/modules/processors/processors.module.ts","./src/app/services/processors/processors.service.ts","./src/app/modules/processors/processors/processors.component.ts","./src/app/modules/processors/processors/processors.component.html","./src/app/modules/processors/edit-processor/edit-processor.component.ts","./src/app/modules/processors/edit-processor/edit-processor.component.html"],"names":[],"mappings":"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","file":"src-app-modules-processors-processors-module-es2015.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { EditProcessorComponent } from './edit-processor/edit-processor.component';\r\nimport { ProcessorsComponent } from './processors/processors.component';\r\nimport { CtModule } from '../ct/ct.module';\r\n\r\n\r\nexport const ProcessorsRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ProcessorsComponent\r\n    },\r\n    {\r\n        path: ':id/edit',\r\n        component: EditProcessorComponent,\r\n        data: {\r\n            backConfig: ['../', '../']\r\n        }\r\n    }\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(ProcessorsRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class ProcessorsRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ProcessorsRoutingModule,\r\n        CtModule,\r\n        MaterialAppModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateModule.forChild({})\r\n    ],\r\n    declarations: [\r\n        ProcessorsComponent,\r\n        EditProcessorComponent\r\n    ]\r\n})\r\nexport class ProcessorsModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { environment } from '@src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Processor } from './Processor';\r\nimport { ProcessorResult } from './ProcessorResult';\r\nimport { ProcessorsResult } from './ProcessorsResult';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { ProcessorBulkDeleteCommitResult } from './ProcessorBulkDeleteCommitResult';\r\n\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher${s}`;\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class ProcessorsService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    init(page: string): Observable<ProcessorsResult> {\r\n        return this.http.get<ProcessorsResult>(url(`/processors`), { params: { page } });\r\n    }\r\n\r\n    getProcessor(id: string): Observable<ProcessorResult> {\r\n        return this.http.get<ProcessorResult>(url(`/processor/${id}`));\r\n    }\r\n\r\n    formCommit(station: Processor): Observable<ProcessorResult> {\r\n        return this.http.post<ProcessorResult>(url(`/processor-form-commit/`), station);\r\n    }\r\n\r\n    deleteProcessorCommit(id: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`/processor-delete-commit`), formData({ id }));\r\n    }\r\n\r\n\r\n    // @PostMapping(\"/processor-bulk-delete-commit\")\r\n    // @PreAuthorize(\"hasAnyRole('MASTER_OPERATOR')\")\r\n    // public ProcessorData.BulkOperations  processProcessorBulkDeleteCommit(String processorIds) {\r\n    //     ProcessorData.BulkOperations  r = processorTopLevelService.processProcessorBulkDeleteCommit(processorIds);\r\n    //     return r;\r\n    // }\r\n    processProcessorBulkDeleteCommit(processorIds: string[]): Observable<ProcessorBulkDeleteCommitResult> {\r\n        return this.http.post<ProcessorBulkDeleteCommitResult>(url('/processor-bulk-delete-commit'), formData({\r\n            processorIds: processorIds.join()\r\n        }))\r\n    }\r\n\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, } from '@angular/material/dialog';\r\nimport { ConfirmationDialogMethod, ConfirmationDialogInterface } from '@app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { ProcessorsService } from '@src/app/services/processors/processors.service';\r\nimport { ProcessorsResult } from '@src/app/services/processors/ProcessorsResult';\r\nimport { ProcessorStatus } from '@src/app/services/processors/ProcessorStatus';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { UIStateComponent } from '@src/app/models/UIStateComponent';\r\nimport { AuthenticationService } from '@src/app/services/authentication';\r\n\r\n\r\n@Component({\r\n    selector: 'processors',\r\n    templateUrl: './processors.component.html',\r\n    styleUrls: ['./processors.component.scss']\r\n})\r\n\r\nexport class ProcessorsComponent extends UIStateComponent implements OnInit, ConfirmationDialogInterface {\r\n    processorResult: ProcessorsResult;\r\n    showStatusOfProcessor: boolean = false;\r\n    dataSource: MatTableDataSource<ProcessorStatus> = new MatTableDataSource<ProcessorStatus>([]);\r\n    selection: SelectionModel<ProcessorStatus> = new SelectionModel<ProcessorStatus>(true, []);\r\n    columnsToDisplay: string[] = ['check', 'id', 'ip', 'description', 'reason', 'lastSeen', 'bts'];\r\n    secondColumnsToDisplay: string[] = ['empty', 'env'];\r\n\r\n    constructor(\r\n        readonly dialog: MatDialog,\r\n        private processorsService: ProcessorsService,\r\n        readonly authenticationService: AuthenticationService\r\n    ) {\r\n        super(authenticationService);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.updateTable(0);\r\n    }\r\n\r\n    updateTable(page: number): void {\r\n        this.isLoading = true;\r\n        this.processorsService\r\n            .init(page.toString())\r\n            .subscribe(processorResult => {\r\n                this.processorResult = processorResult;\r\n                const items: ProcessorStatus[] = processorResult.items.content || [];\r\n                if (items.length) {\r\n                    this.dataSource = new MatTableDataSource(items);\r\n                }\r\n                this.isLoading = false;\r\n            });\r\n    }\r\n\r\n    applyFilter(filterValue: string): void {\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    }\r\n\r\n    isAllSelected(): boolean {\r\n        return this.selection.selected.length === this.dataSource.data.length;\r\n    }\r\n\r\n    masterToggle(): void {\r\n        this.isAllSelected() ?\r\n            this.selection.clear() :\r\n            this.dataSource.data.forEach(row => this.selection.select(row));\r\n    }\r\n\r\n    nextPage(): void {\r\n        this.updateTable(this.processorResult.items.number + 1);\r\n    }\r\n\r\n    prevPage(): void {\r\n        this.updateTable(this.processorResult.items.number - 1);\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (processor: ProcessorStatus): string =>\r\n            `Do you want to delete Processor\\xa0#${processor.processor.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    delete(processor: ProcessorStatus): void {\r\n        this.processorsService\r\n            .deleteProcessorCommit(processor.processor.id.toString())\r\n            .subscribe(() => this.updateTable(this.processorResult.items.number));\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (): string => `Do you want to delete Processors`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    deleteMany(): void {\r\n        this.processorsService\r\n            .processProcessorBulkDeleteCommit(this.selection.selected.map(v => v.processor.id.toString()))\r\n            .subscribe(() => this.updateTable(this.processorResult.items.number));\r\n    }\r\n}","<ct-section *ngIf=\"processorResult\">\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-flex justify-content=\"space-between\" align-items=\"center\">\r\n                <ct-flex-item>\r\n                    <ct-heading>Processors</ct-heading>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <mat-slide-toggle [(ngModel)]=\"showStatusOfProcessor\">\r\n                        Show current status of processor\r\n                    </mat-slide-toggle>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-table [isWaiting]=\"isLoading\">\r\n                <table mat-table [dataSource]=\"dataSource\" multiTemplateDataRows=\"multiTemplateDataRows\">\r\n                    <ng-container matColumnDef=\"check\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            <mat-checkbox \r\n                                color=\"warn\"\r\n                                (change)=\"$event ? masterToggle() : null\" \r\n                                [checked]=\"selection.hasValue() && isAllSelected()\" \r\n                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\r\n                            </mat-checkbox>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <mat-checkbox \r\n                                color=\"warn\"\r\n                                (click)=\"$event.stopPropagation()\" \r\n                                (change)=\"$event ? selection.toggle(el) : null\" \r\n                                [checked]=\"selection.isSelected(el)\">\r\n                            </mat-checkbox>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"id\">\r\n                        <th mat-header-cell *matHeaderCellDef>Id</th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.processor.id}}</td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"ip\">\r\n                        <th mat-header-cell *matHeaderCellDef>IP Address</th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <div>{{el.ip || '—'}}</div>\r\n                            <div>{{el.host || '—'}}</div>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"description\">\r\n                        <th mat-header-cell *matHeaderCellDef>Description</th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.processor.description || '—'}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"empty\">\r\n                        <td mat-cell *matCellDef=\"let el\"> </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"env\">\r\n                        <td mat-cell *matCellDef=\"let el\" [attr.colspan]=\"columnsToDisplay.length - 1\">\r\n                            <b>Status of Processor:</b>\r\n                            <ct-pre>{{el.processor.status || '—'}} </ct-pre>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"reason\">\r\n                        <th mat-header-cell *matHeaderCellDef>\r\n                            <div>Is active?</div>\r\n                            <div>problems with functions?</div>\r\n                            <div>Is blacklisted?</div>\r\n                            <div>Reason</div>\r\n                        </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <div [class]=\"el.active ? 'alert-success' : 'alert-danger'\"> \r\n                                {{el.active ? 'Yes' : 'No'}}\r\n                            </div>\r\n                            <div [class]=\"el.functionProblem ? 'alert-danger' : 'alert-success'\">\r\n                                {{el.functionProblem ? 'Yes' : 'No'}} </div>\r\n                            <div [class]=\"el.blacklisted ? 'alert-danger' : 'alert-success'\">\r\n                                {{el.blacklisted ? 'Yes' : 'No'}} </div>\r\n                            <div class=\"alert-danger\"> \r\n                                {{el.blacklistReason}}\r\n                            </div>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"lastSeen\">\r\n                        <th mat-header-cell *matHeaderCellDef>Last Seen </th>\r\n                        <td mat-cell *matCellDef=\"let el\">{{el.lastSeen | date:'MMM d, y, hh:mm'}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"bts\">\r\n                        <th mat-header-cell *matHeaderCellDef> </th>\r\n                        <td mat-cell *matCellDef=\"let el\">\r\n                            <ct-flex justify-content=\"flex-end\" gap=\"unit(1)\">\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button\r\n                                        size=\"forTableRow\" color=\"primary\" \r\n                                        [routerLink]=\"['/dispatcher/processors',el.processor.id,'edit']\">\r\n                                            Edit\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button\r\n                                        size=\"forTableRow\" \r\n                                        color=\"warn\" \r\n                                        (click)=\"delete(el)\">\r\n                                        <mat-icon>delete</mat-icon>\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                            </ct-flex>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\r\n                    <tr class=\"first-row\" mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n                    <tr class=\"second-row\" mat-row *matRowDef=\"let row; columns: secondColumnsToDisplay;\" [hidden]=\"!showStatusOfProcessor\"></tr>\r\n                </table>\r\n            </ct-table>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <button mat-flat-button \r\n                color=\"warn\" \r\n                (click)=\"deleteMany()\" \r\n                [disabled]=\"isLoading || !selection.selected.length\" \r\n                title=\"Delete Checked\">\r\n                    Delete Checked\r\n            </button>\r\n        </ct-section-footer-row>\r\n        <ct-section-footer-row>\r\n            <ct-flex-item>\r\n                <ct-table-pagination \r\n                    (prev)=\"prevPage()\" \r\n                    (next)=\"nextPage()\" \r\n                    [pageableDefault]=\"processorResult.items\">\r\n                </ct-table-pagination>\r\n            </ct-flex-item>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","import { Location } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ProcessorsService } from '@src/app/services/processors/processors.service';\r\nimport { Processor } from '@src/app/services/processors/Processor';\r\nimport { ProcessorResult } from '@src/app/services/processors/ProcessorResult';\r\n\r\n@Component({\r\n    selector: 'edit-processor',\r\n    templateUrl: './edit-processor.component.html',\r\n    styleUrls: ['./edit-processor.component.scss']\r\n})\r\n\r\nexport class EditProcessorComponent implements OnInit {\r\n    processor: Processor;\r\n    processorResponse: ProcessorResult;\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private processorsService: ProcessorsService,\r\n        private router: Router,\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.processorsService\r\n            .getProcessor(this.route.snapshot.paramMap.get('id'))\r\n            .subscribe((response) => {\r\n                this.processorResponse = response;\r\n                this.processor = response.processor;\r\n            });\r\n    }\r\n\r\n    save(): void {\r\n        this.processorsService\r\n            .formCommit(this.processor)\r\n            .subscribe((response) => {\r\n                if (response.errorMessages?.length) {\r\n                    this.processorResponse = response;\r\n                } else {\r\n                    this.back();\r\n                }\r\n            });\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(['/dispatcher', 'processors']);\r\n    }\r\n}","<ct-cols *ngIf=\"processorResponse\">\r\n    <ct-col size=\"6\">\r\n        <ct-section>\r\n            <ct-section-header>\r\n                <ct-section-header-row>\r\n                    <ct-heading>Edit Processor {{processor ? processor.id : '...'}}</ct-heading>\r\n                </ct-section-header-row>\r\n            </ct-section-header>\r\n            <ct-section-body>\r\n                <ct-section-body-row>\r\n                    <ct-section-content>\r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label>Description </mat-label>\r\n                            <textarea matInput=\"matInput\" [(ngModel)]=\"processor.description\" value=\"\"\r\n                                cdkTextareaAutosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"5\"> </textarea>\r\n                        </mat-form-field>\r\n                    </ct-section-content>\r\n                </ct-section-body-row>\r\n            </ct-section-body>\r\n            <ct-section-footer>\r\n                <ct-section-footer-row>\r\n                    <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                        <ct-flex-item>\r\n                            <button mat-stroked-button=\"mat-stroked-button\" (click)=\"back()\">Cancel</button>\r\n                        </ct-flex-item>\r\n                        <ct-flex-item>\r\n                            <button mat-flat-button=\"mat-flat-button\" (click)=\"save()\" color=\"primary\">Save</button>\r\n                        </ct-flex-item>\r\n                    </ct-flex>\r\n                </ct-section-footer-row>\r\n            </ct-section-footer>\r\n        </ct-section>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status [content]=\"processorResponse\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>"],"sourceRoot":"webpack:///"}