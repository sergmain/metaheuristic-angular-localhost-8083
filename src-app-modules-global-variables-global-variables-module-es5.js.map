{"version":3,"sources":["webpack:///src/app/modules/global-variables/global-variables.module.ts","webpack:///src/app/modules/global-variables/card-form-add-variable/card-form-add-variable.component.ts","webpack:///src/app/modules/global-variables/card-form-add-variable/card-form-add-variable.component.html","webpack:///src/app/modules/global-variables/global-variables/global-variables.component.html","webpack:///src/app/modules/global-variables/global-variables/global-variables.component.ts","webpack:///src/app/modules/global-variables/add-global-variable/add-global-variable.component.ts","webpack:///src/app/modules/global-variables/add-global-variable/add-global-variable.component.html","webpack:///src/app/modules/global-variables/card-form-add-variable-with-storage/card-form-add-variable-with-storage.component.ts","webpack:///src/app/modules/global-variables/card-form-add-variable-with-storage/card-form-add-variable-with-storage.component.html","webpack:///src/app/services/global-variables/global-variables.service.ts"],"names":["GlobalVariablesRoutes","path","component","data","backConfig","GlobalVariablesRoutingModule","forChild","GlobalVariablesModule","CardFormAddVariableComponent","globalVariablesService","afterResponse","abort","form","poolCode","required","minLength","createResourceFromFile","value","fileUpload","fileInput","nativeElement","files","subscribe","response","emit","valid","length","cancel","upload","GlobalVariablesComponent","dialog","changeDetectorRef","deletedRows","dataSource","columnsToDisplay","updateTable","page","isLoading","getResources","toString","globalVariablesResult","detectChanges","items","content","globalVariable","push","deleteResource","id","number","question","rejectTitle","resolveTitle","AddGlobalVariableComponent","router","route","status","OK","addVariableResponse","back","addVariableStorageResponse","navigate","relativeTo","updateStatusAfterAddVarible","updateStatusAfterAddVaribleStorage","CardFormAddVariableWithStorageComponent","params","registerResourceInExternalStorage","create","url","s","baseUrl","GlobalVariablesService","http","get","variable","file","post"],"mappings":"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","file":"src-app-modules-global-variables-global-variables-module-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MaterialAppModule } from '@src/app/ngmaterial.module';\r\nimport { GlobalVariablesComponent } from './global-variables/global-variables.component';\r\nimport { AddGlobalVariableComponent } from './add-global-variable/add-global-variable.component';\r\nimport { CtModule } from '../ct/ct.module';\r\nimport { CardFormAddVariableComponent } from './card-form-add-variable/card-form-add-variable.component';\r\nimport { CardFormAddVariableWithStorageComponent } from './card-form-add-variable-with-storage/card-form-add-variable-with-storage.component';\r\n\r\n\r\nexport const GlobalVariablesRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: GlobalVariablesComponent\r\n    },\r\n    {\r\n        path: 'add',\r\n        component: AddGlobalVariableComponent,\r\n        data: {\r\n            backConfig: ['../']\r\n        }\r\n    },\r\n    {\r\n        path: ':id',\r\n        component: GlobalVariablesComponent,\r\n        data: {\r\n            backConfig: ['../']\r\n        }\r\n    },\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(GlobalVariablesRoutes)],\r\n    exports: [RouterModule],\r\n    declarations: []\r\n})\r\nexport class GlobalVariablesRoutingModule { }\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        GlobalVariablesRoutingModule,\r\n        CtModule,\r\n        MaterialAppModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TranslateModule.forChild({})\r\n    ],\r\n    declarations: [\r\n        GlobalVariablesComponent,\r\n        AddGlobalVariableComponent,\r\n        CardFormAddVariableComponent,\r\n        CardFormAddVariableWithStorageComponent\r\n    ]\r\n})\r\nexport class GlobalVariablesModule { }","import { Component, EventEmitter, Output, ViewChild } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { GlobalVariablesService } from '@src/app/services/global-variables/global-variables.service';\r\nimport { CtFileUploadComponent } from '../../ct/ct-file-upload/ct-file-upload.component';\r\n\r\n@Component({\r\n    selector: 'card-form-add-variable',\r\n    templateUrl: './card-form-add-variable.component.html',\r\n    styleUrls: ['./card-form-add-variable.component.scss']\r\n})\r\nexport class CardFormAddVariableComponent {\r\n    @Output() afterResponse: EventEmitter<OperationStatusRest> = new EventEmitter<OperationStatusRest>();\r\n    @Output() abort: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    @ViewChild('fileUpload', { static: true }) fileUpload: CtFileUploadComponent;\r\n\r\n    form: FormGroup = new FormGroup({\r\n        poolCode: new FormControl('', [\r\n            Validators.required,\r\n            Validators.minLength(1)\r\n        ]),\r\n    });\r\n\r\n    constructor(\r\n        private globalVariablesService: GlobalVariablesService,\r\n    ) { }\r\n\r\n    upload(): void {\r\n        this.globalVariablesService\r\n            .createResourceFromFile(\r\n                this.form.value.poolCode,\r\n                this.fileUpload.fileInput.nativeElement.files[0]\r\n            )\r\n            .subscribe((response: OperationStatusRest) => {\r\n                this.afterResponse.emit(response);\r\n            });\r\n    }\r\n\r\n    cancel(): void {\r\n        this.abort.emit();\r\n    }\r\n\r\n    checkDisable(): boolean {\r\n        if (this.form.valid && this.fileUpload.fileInput.nativeElement.files.length) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","<ct-section>\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>Create global variable from file</ct-heading>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <form [formGroup]=\"form\" novalidate=\"novalidate\">\r\n            <ct-section-body-row>\r\n                <ct-file-upload #fileUpload></ct-file-upload>\r\n                <div class=\"mat-form-field mat-form-field-appearance-outline\" style=\"width:100%\">\r\n                    <div class=\"mat-form-field-subscript-wrapper\">\r\n                        <mat-hint>This is a required field.</mat-hint>\r\n                    </div>\r\n                </div>\r\n            </ct-section-body-row>\r\n            <ct-section-body-row>\r\n                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                    <mat-label>Variable</mat-label>\r\n                    <input autocomplete=\"off\" matInput=\"matInput\" formControlName=\"poolCode\" />\r\n                    <mat-hint>This is a required field.</mat-hint>\r\n                </mat-form-field>\r\n            </ct-section-body-row>\r\n        </form>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                <ct-flex-item>\r\n                    <button mat-stroked-button (click)=\"cancel()\">Cancel</button>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button mat-flat-button=\"mat-flat-button\" (click)=\"upload()\" color=\"primary\"\r\n                        [disabled]=\"checkDisable()\">Create</button>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","<ct-section *ngIf=\"globalVariablesResult\">\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-flex justify-content=\"space-between\">\r\n                <ct-flex-item>\r\n                    <ct-heading>Variables</ct-heading>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <ng-container *ngTemplateOutlet=\"addVariableButton\"></ng-container>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <ct-section-body-row>\r\n            <ct-table [isWaiting]=\"isLoading\">\r\n                <table class=\"mat-table\" mat-table=\"mat-table\" [dataSource]=\"dataSource\">\r\n                    <ng-container matColumnDef=\"id\" sticky=\"sticky\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>id </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.id}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"uploadTs\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Upload Date </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.uploadTs | date}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"variable\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Variable</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.variable}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"filename\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Filename</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">{{el.filename}} </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"params\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef>Params</th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">\r\n                            <ct-pre>{{el.params}}</ct-pre>\r\n                        </td>\r\n                    </ng-container>\r\n                    <ng-container matColumnDef=\"bts\" stickyEnd=\"stickyEnd\">\r\n                        <th mat-header-cell=\"mat-header-cell\" *matHeaderCellDef> </th>\r\n                        <td mat-cell=\"mat-cell\" *matCellDef=\"let el\">\r\n                            <ct-flex justify-content=\"flex-end\">\r\n                                <ct-flex-item>\r\n                                    <button mat-flat-button=\"mat-flat-button\" color=\"warn\" size=\"forTableRow\"\r\n                                        (click)=\"delete(el)\">\r\n                                        <mat-icon>delete </mat-icon>\r\n                                    </button>\r\n                                </ct-flex-item>\r\n                            </ct-flex>\r\n                        </td>\r\n                    </ng-container>\r\n                    <tr mat-header-row=\"mat-header-row\" *matHeaderRowDef=\"columnsToDisplay;\"> </tr>\r\n                    <tr mat-row=\"mat-row\" *matRowDef=\"let row; columns: columnsToDisplay;\"\r\n                        [class.deleted-table-row]=\"deletedRows.includes(row)\"></tr>\r\n                </table>\r\n            </ct-table>\r\n        </ct-section-body-row>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"space-between\">\r\n                <ct-flex-item>\r\n                    <ct-table-pagination (next)=\"nextPage()\" (prev)=\"prevPage()\"\r\n                        [pageableDefault]=\"globalVariablesResult.items\" [globalDisable]=\"isLoading\">\r\n                    </ct-table-pagination>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <ng-container *ngTemplateOutlet=\"addVariableButton\"></ng-container>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>\r\n\r\n\r\n<ng-template #addVariableButton>\r\n    <button mat-flat-button=\"mat-flat-button\" color=\"primary\" routerLink=\"add\">Create variable</button>\r\n</ng-template>","import { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatDialog, } from '@angular/material/dialog';\r\nimport { ConfirmationDialogMethod } from '@app/components/app-dialog-confirmation/app-dialog-confirmation.component';\r\nimport { GlobalVariablesService } from '@src/app/services/global-variables/global-variables.service';\r\nimport { GlobalVariable } from '@src/app/services/global-variables/GlobalVariables';\r\nimport { GlobalVariablesResult } from '@src/app/services/global-variables/GlobalVariablesResult';\r\n\r\n@Component({\r\n    selector: 'global-variables',\r\n    templateUrl: './global-variables.component.html',\r\n    styleUrls: ['./global-variables.component.scss'],\r\n})\r\n\r\nexport class GlobalVariablesComponent implements OnInit {\r\n    isLoading: boolean;\r\n\r\n    globalVariablesResult: GlobalVariablesResult;\r\n    deletedRows: GlobalVariable[] = [];\r\n    dataSource: MatTableDataSource<GlobalVariable> = new MatTableDataSource<GlobalVariable>([]);\r\n    columnsToDisplay: (string)[] = ['id', 'variable', 'uploadTs', 'filename', 'params', 'bts'];\r\n\r\n    constructor(\r\n        private dialog: MatDialog,\r\n        private globalVariablesService: GlobalVariablesService,\r\n        private changeDetectorRef: ChangeDetectorRef\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.updateTable(0);\r\n    }\r\n\r\n    updateTable(page: number): void {\r\n        this.isLoading = true;\r\n        this.globalVariablesService\r\n            .getResources(page.toString())\r\n            .subscribe(globalVariablesResult => {\r\n                this.globalVariablesResult = globalVariablesResult;\r\n                this.changeDetectorRef.detectChanges();\r\n                this.dataSource = new MatTableDataSource(globalVariablesResult.items.content || []);\r\n                this.isLoading = false;\r\n            });\r\n    }\r\n\r\n    @ConfirmationDialogMethod({\r\n        question: (globalVariable: GlobalVariable): string =>\r\n            `Do you want to delete Variable\\xa0#${globalVariable.id}`,\r\n        rejectTitle: 'Cancel',\r\n        resolveTitle: 'Delete'\r\n    })\r\n    delete(globalVariable: GlobalVariable): void {\r\n        this.deletedRows.push(globalVariable);\r\n        this.globalVariablesService\r\n            .deleteResource(globalVariable.id.toString())\r\n            .subscribe();\r\n    }\r\n\r\n    nextPage(): void {\r\n        this.updateTable(this.globalVariablesResult.items.number + 1);\r\n    }\r\n\r\n    prevPage(): void {\r\n        this.updateTable(this.globalVariablesResult.items.number - 1);\r\n    }\r\n}","import { Component } from '@angular/core';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { OperationStatus } from '@src/app/enums/OperationStatus';\r\n\r\n@Component({\r\n    selector: 'add-global-variable',\r\n    templateUrl: './add-global-variable.component.html',\r\n    styleUrls: ['./add-global-variable.component.scss']\r\n})\r\n\r\nexport class AddGlobalVariableComponent {\r\n    addVariableResponse: OperationStatusRest;\r\n    addVariableStorageResponse: OperationStatusRest;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private route: ActivatedRoute\r\n    ) { }\r\n\r\n    updateStatusAfterAddVarible(response: OperationStatusRest): void {\r\n        if (response.status !== OperationStatus.OK) {\r\n            this.addVariableResponse = response;\r\n        } else {\r\n            this.back();\r\n        }\r\n    }\r\n\r\n    updateStatusAfterAddVaribleStorage(response: OperationStatusRest): void {\r\n        if (response.status !== OperationStatus.OK) {\r\n            this.addVariableStorageResponse = response;\r\n        } else {\r\n            this.back();\r\n        }\r\n    }\r\n\r\n    back(): void {\r\n        this.router.navigate(['../'], { relativeTo: this.route });\r\n    }\r\n}","<ct-cols>\r\n    <ct-col size=\"6\">\r\n        <card-form-add-variable (abort)=\"back()\" (afterResponse)=\"updateStatusAfterAddVarible($event)\">\r\n        </card-form-add-variable>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status [content]=\"addVariableResponse\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>\r\n<hr>\r\n<ct-cols>\r\n    <ct-col size=\"6\">\r\n        <card-form-add-variable-with-storage (abort)=\"back()\"\r\n            (afterResponse)=\"updateStatusAfterAddVaribleStorage($event)\">\r\n        </card-form-add-variable-with-storage>\r\n    </ct-col>\r\n    <ct-col size=\"6\">\r\n        <ct-rest-status [content]=\"addVariableStorageResponse\"></ct-rest-status>\r\n    </ct-col>\r\n</ct-cols>","import { Component, OnInit, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\nimport { CtFileUploadComponent } from '../../ct/ct-file-upload/ct-file-upload.component';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { GlobalVariablesService } from '@src/app/services/global-variables/global-variables.service';\r\n\r\n@Component({\r\n    selector: 'card-form-add-variable-with-storage',\r\n    templateUrl: './card-form-add-variable-with-storage.component.html',\r\n    styleUrls: ['./card-form-add-variable-with-storage.component.scss']\r\n})\r\nexport class CardFormAddVariableWithStorageComponent {\r\n\r\n    @Output() afterResponse: EventEmitter<OperationStatusRest> = new EventEmitter<OperationStatusRest>();\r\n    @ViewChild('fileUpload', { static: true }) fileUpload: CtFileUploadComponent;\r\n    @Output() abort: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    form: FormGroup = new FormGroup({\r\n        params: new FormControl('', [Validators.required, Validators.minLength(1)]),\r\n        poolCode: new FormControl('', [Validators.required, Validators.minLength(1)]),\r\n    });\r\n\r\n    constructor(\r\n        private globalVariablesService: GlobalVariablesService,\r\n    ) { }\r\n\r\n    create(): void {\r\n        this.globalVariablesService\r\n            .registerResourceInExternalStorage(this.form.value.poolCode, this.form.value.params)\r\n            .subscribe((response) => {\r\n                this.afterResponse.emit(response);\r\n            });\r\n    }\r\n\r\n    cancel(): void {\r\n        this.abort.emit();\r\n    }\r\n}\r\n","<ct-section>\r\n    <ct-section-header>\r\n        <ct-section-header-row>\r\n            <ct-heading>Create Global variable with git or disk storage</ct-heading>\r\n        </ct-section-header-row>\r\n    </ct-section-header>\r\n    <ct-section-body>\r\n        <form [formGroup]=\"form\" novalidate=\"novalidate\">\r\n            <ct-section-body-row>\r\n                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                    <mat-label>Variable</mat-label>\r\n                    <input autocomplete=\"off\" matInput=\"matInput\" formControlName=\"poolCode\" />\r\n                    <mat-hint>This is a required field.</mat-hint>\r\n                </mat-form-field>\r\n            </ct-section-body-row>\r\n            <ct-section-body-row>\r\n                <ct-section-content>\r\n                    <mat-hint>\r\n                        <pre style=\"font-size: 80%; line-height: 1.1;\"><b>Example:</b>\r\nsourcing: disk \r\ndisk: \r\n  code: storage-code \r\n  mask: '*'</pre>\r\n\r\n                        <br>\r\n                        <pre style=\"font-size: 80%; line-height: 1.1;\"><b>Example:</b>\r\nsourcing: git\r\ngit:\r\n  repo: https://github.com/sergmain/metaheuristic.git\r\n  branch: master\r\n  commit: b25331edba72a1a901634212ac55752238fd2dd5</pre>\r\n                    </mat-hint>\r\n                </ct-section-content>\r\n            </ct-section-body-row>\r\n            <ct-section-body-row>\r\n                <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                    <mat-label>Params of variables</mat-label>\r\n                    <textarea autocomplete=\"off\" matInput=\"matInput\" formControlName=\"params\"\r\n                        cdkTextareaAutosize=\"cdkTextareaAutosize\" style=\"min-height:5em;overflow: hidden;\"></textarea>\r\n                </mat-form-field>\r\n            </ct-section-body-row>\r\n        </form>\r\n    </ct-section-body>\r\n    <ct-section-footer>\r\n        <ct-section-footer-row>\r\n            <ct-flex justify-content=\"flex-end\" gap=\"8px\">\r\n                <ct-flex-item>\r\n                    <button mat-stroked-button (click)=\"cancel()\">Cancel</button>\r\n                </ct-flex-item>\r\n                <ct-flex-item>\r\n                    <button mat-flat-button (click)=\"create()\" color=\"primary\" [disabled]=\"form.invalid\">Create</button>\r\n                </ct-flex-item>\r\n            </ct-flex>\r\n        </ct-section-footer-row>\r\n    </ct-section-footer>\r\n</ct-section>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { generateFormData as formData } from '@src/app/helpers/generateFormData';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '@src/environments/environment';\r\nimport { GlobalVariableResult } from './GlobalVariableResult';\r\nimport { GlobalVariablesResult } from './GlobalVariablesResult';\r\nimport { OperationStatusRest } from '@src/app/models/OperationStatusRest';\r\n\r\nconst url = (s: string): string => `${environment.baseUrl}dispatcher/global-variable${s}`;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GlobalVariablesService {\r\n    constructor(\r\n        private http: HttpClient\r\n    ) { }\r\n\r\n    getResources(page: string): Observable<GlobalVariablesResult> {\r\n        return this.http.get<GlobalVariablesResult>(url('/global-variables'), { params: { page } });\r\n    }\r\n\r\n    createResourceFromFile(variable: string, file: File): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`/global-variable-upload-from-file`), formData({ variable, file }));\r\n    }\r\n\r\n    registerResourceInExternalStorage(variable: string, params: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`/global-variable-in-external-storage`), formData({ variable, params }));\r\n    }\r\n\r\n    get(id: string): Observable<GlobalVariableResult> {\r\n        return this.http.get<GlobalVariableResult>(url('/global-variable/' + id));\r\n    }\r\n\r\n    deleteResource(id: string): Observable<OperationStatusRest> {\r\n        return this.http.post<OperationStatusRest>(url(`/global-variable-delete-commit`), formData({ id }));\r\n    }\r\n}"]}